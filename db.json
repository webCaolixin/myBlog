{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/matery/source/favicon-16x16.png","path":"favicon-16x16.png","modified":1,"renderable":1},{"_id":"themes/matery/source/favicon-32x32.png","path":"favicon-32x32.png","modified":1,"renderable":1},{"_id":"themes/matery/source/css/custom.css","path":"css/custom.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/baidu/autoPush.js","path":"libs/baidu/autoPush.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-a11y-dark.css","path":"libs/prismTheme/prism-a11y-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-atom-dark.css","path":"libs/prismTheme/prism-atom-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-base16-ateliersulphurpool.light.css","path":"libs/prismTheme/prism-base16-ateliersulphurpool.light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-cb.css","path":"libs/prismTheme/prism-cb.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-darcula.css","path":"libs/prismTheme/prism-darcula.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-dark.css","path":"libs/prismTheme/prism-duotone-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-forest.css","path":"libs/prismTheme/prism-duotone-forest.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-earth.css","path":"libs/prismTheme/prism-duotone-earth.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-light.css","path":"libs/prismTheme/prism-duotone-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-sea.css","path":"libs/prismTheme/prism-duotone-sea.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-space.css","path":"libs/prismTheme/prism-duotone-space.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-ghcolors.css","path":"libs/prismTheme/prism-ghcolors.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-pojoaque.css","path":"libs/prismTheme/prism-pojoaque.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-hopscotch.css","path":"libs/prismTheme/prism-hopscotch.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-vs.css","path":"libs/prismTheme/prism-vs.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism-xonokai.css","path":"libs/prismTheme/prism-xonokai.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prismTheme/prism.js","path":"libs/prismTheme/prism.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/custom.css","path":"libs/valine/custom.css","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/imgs/favicon-16x16.png","path":"medias/imgs/favicon-16x16.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/imgs/favicon.png","path":"medias/imgs/favicon.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","path":"libs/jquery/jquery-2.2.0.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/24.jpg","path":"medias/featureimages/24.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","path":"libs/awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-cave-dark.css","path":"libs/prettify/css/atelier-cave-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-cave-dark.min.css","path":"libs/prettify/css/atelier-cave-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-cave-light.css","path":"libs/prettify/css/atelier-cave-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-cave-light.min.css","path":"libs/prettify/css/atelier-cave-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-dune-dark.css","path":"libs/prettify/css/atelier-dune-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-dune-dark.min.css","path":"libs/prettify/css/atelier-dune-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-dune-light.css","path":"libs/prettify/css/atelier-dune-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-dune-light.min.css","path":"libs/prettify/css/atelier-dune-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-estuary-dark.css","path":"libs/prettify/css/atelier-estuary-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-estuary-dark.min.css","path":"libs/prettify/css/atelier-estuary-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-estuary-light.css","path":"libs/prettify/css/atelier-estuary-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-estuary-light.min.css","path":"libs/prettify/css/atelier-estuary-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-forest-dark.css","path":"libs/prettify/css/atelier-forest-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-forest-dark.min.css","path":"libs/prettify/css/atelier-forest-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-forest-light.css","path":"libs/prettify/css/atelier-forest-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-forest-light.min.css","path":"libs/prettify/css/atelier-forest-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-heath-dark.css","path":"libs/prettify/css/atelier-heath-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-heath-dark.min.css","path":"libs/prettify/css/atelier-heath-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-heath-light.css","path":"libs/prettify/css/atelier-heath-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-heath-light.min.css","path":"libs/prettify/css/atelier-heath-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-lakeside-dark.css","path":"libs/prettify/css/atelier-lakeside-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-lakeside-dark.min.css","path":"libs/prettify/css/atelier-lakeside-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-lakeside-light.css","path":"libs/prettify/css/atelier-lakeside-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-lakeside-light.min.css","path":"libs/prettify/css/atelier-lakeside-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-plateau-dark.css","path":"libs/prettify/css/atelier-plateau-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-plateau-dark.min.css","path":"libs/prettify/css/atelier-plateau-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-plateau-light.css","path":"libs/prettify/css/atelier-plateau-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-plateau-light.min.css","path":"libs/prettify/css/atelier-plateau-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-savanna-dark.css","path":"libs/prettify/css/atelier-savanna-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-savanna-dark.min.css","path":"libs/prettify/css/atelier-savanna-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-savanna-light.css","path":"libs/prettify/css/atelier-savanna-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-savanna-light.min.css","path":"libs/prettify/css/atelier-savanna-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-seaside-dark.css","path":"libs/prettify/css/atelier-seaside-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-seaside-dark.min.css","path":"libs/prettify/css/atelier-seaside-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-seaside-light.css","path":"libs/prettify/css/atelier-seaside-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-seaside-light.min.css","path":"libs/prettify/css/atelier-seaside-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-sulphurpool-dark.css","path":"libs/prettify/css/atelier-sulphurpool-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-sulphurpool-dark.min.css","path":"libs/prettify/css/atelier-sulphurpool-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-sulphurpool-light.css","path":"libs/prettify/css/atelier-sulphurpool-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/atelier-sulphurpool-light.min.css","path":"libs/prettify/css/atelier-sulphurpool-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/github-v2.css","path":"libs/prettify/css/github-v2.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/github-v2.min.css","path":"libs/prettify/css/github-v2.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/github.css","path":"libs/prettify/css/github.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/github.min.css","path":"libs/prettify/css/github.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/hemisu-dark.css","path":"libs/prettify/css/hemisu-dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/hemisu-dark.min.css","path":"libs/prettify/css/hemisu-dark.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/hemisu-light.css","path":"libs/prettify/css/hemisu-light.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/hemisu-light.min.css","path":"libs/prettify/css/hemisu-light.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-blue.css","path":"libs/prettify/css/tomorrow-night-blue.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-blue.min.css","path":"libs/prettify/css/tomorrow-night-blue.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-bright.css","path":"libs/prettify/css/tomorrow-night-bright.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-bright.min.css","path":"libs/prettify/css/tomorrow-night-bright.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-eighties.css","path":"libs/prettify/css/tomorrow-night-eighties.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-eighties.min.css","path":"libs/prettify/css/tomorrow-night-eighties.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night.css","path":"libs/prettify/css/tomorrow-night.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night.min.css","path":"libs/prettify/css/tomorrow-night.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow.css","path":"libs/prettify/css/tomorrow.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tomorrow.min.css","path":"libs/prettify/css/tomorrow.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tranquil-heart.css","path":"libs/prettify/css/tranquil-heart.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/tranquil-heart.min.css","path":"libs/prettify/css/tranquil-heart.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/vibrant-ink.css","path":"libs/prettify/css/vibrant-ink.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/css/vibrant-ink.min.css","path":"libs/prettify/css/vibrant-ink.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-apollo.js","path":"libs/prettify/js/lang-apollo.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-basic.js","path":"libs/prettify/js/lang-basic.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-clj.js","path":"libs/prettify/js/lang-clj.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-css.js","path":"libs/prettify/js/lang-css.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-dart.js","path":"libs/prettify/js/lang-dart.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-erlang.js","path":"libs/prettify/js/lang-erlang.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-ex.js","path":"libs/prettify/js/lang-ex.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-hs.js","path":"libs/prettify/js/lang-hs.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-go.js","path":"libs/prettify/js/lang-go.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-kotlin.js","path":"libs/prettify/js/lang-kotlin.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-lisp.js","path":"libs/prettify/js/lang-lisp.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-lasso.js","path":"libs/prettify/js/lang-lasso.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-llvm.js","path":"libs/prettify/js/lang-llvm.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-logtalk.js","path":"libs/prettify/js/lang-logtalk.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-lua.js","path":"libs/prettify/js/lang-lua.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-ml.js","path":"libs/prettify/js/lang-ml.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-matlab.js","path":"libs/prettify/js/lang-matlab.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-mumps.js","path":"libs/prettify/js/lang-mumps.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-n.js","path":"libs/prettify/js/lang-n.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-pascal.js","path":"libs/prettify/js/lang-pascal.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-proto.js","path":"libs/prettify/js/lang-proto.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-r.js","path":"libs/prettify/js/lang-r.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-rd.js","path":"libs/prettify/js/lang-rd.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-rust.js","path":"libs/prettify/js/lang-rust.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-scala.js","path":"libs/prettify/js/lang-scala.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-sql.js","path":"libs/prettify/js/lang-sql.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-swift.js","path":"libs/prettify/js/lang-swift.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-tcl.js","path":"libs/prettify/js/lang-tcl.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-tex.js","path":"libs/prettify/js/lang-tex.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-vb.js","path":"libs/prettify/js/lang-vb.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-vhdl.js","path":"libs/prettify/js/lang-vhdl.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-wiki.js","path":"libs/prettify/js/lang-wiki.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-xq.js","path":"libs/prettify/js/lang-xq.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/lang-yaml.js","path":"libs/prettify/js/lang-yaml.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/node_prettify.js","path":"libs/prettify/js/node_prettify.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/prettify.css","path":"libs/prettify/js/prettify.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/prettify.js","path":"libs/prettify/js/prettify.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/journal/arctic.jpg","path":"medias/article/journal/arctic.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/journal/carbon.jpg","path":"medias/article/journal/carbon.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/journal/reserve-time.jpg","path":"medias/article/journal/reserve-time.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","path":"libs/awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","path":"libs/awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/js/materialize.min.js","path":"libs/materialize/js/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prettify/js/run_prettify.js","path":"libs/prettify/js/run_prettify.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/journal/temperature-1.jpg","path":"medias/article/journal/temperature-1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/journal/temperature-2.jpg","path":"medias/article/journal/temperature-2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/random-thoughts/The-Mcmoirs-of-a-Survivor.jpg","path":"medias/article/random-thoughts/The-Mcmoirs-of-a-Survivor.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","path":"libs/awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","path":"libs/awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","path":"libs/awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/css/materialize.min.css","path":"libs/materialize/css/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/LICENSE.txt","path":"libs/materialize/font/material-design-icons/LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.woff2","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.eot","path":"libs/materialize/font/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.woff","path":"libs/materialize/font/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.woff2","path":"libs/materialize/font/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.eot","path":"libs/materialize/font/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.woff","path":"libs/materialize/font/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.woff2","path":"libs/materialize/font/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.eot","path":"libs/materialize/font/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.woff","path":"libs/materialize/font/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.woff2","path":"libs/materialize/font/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.eot","path":"libs/materialize/font/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.woff","path":"libs/materialize/font/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.woff2","path":"libs/materialize/font/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.eot","path":"libs/materialize/font/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.woff","path":"libs/materialize/font/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.woff2","path":"libs/materialize/font/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/create-js/easeljs.jpg","path":"medias/article/coding/create-js/easeljs.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/1.jpg","path":"medias/article/coding/news-spider/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/13.jpg","path":"medias/article/coding/news-spider/13.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/2.png","path":"medias/article/coding/news-spider/2.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/3.jpg","path":"medias/article/coding/news-spider/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/4.jpg","path":"medias/article/coding/news-spider/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/XYZ.png","path":"medias/article/coding/z-index/XYZ.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/stacking-order.jpg","path":"medias/article/coding/z-index/stacking-order.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/test.jpg","path":"medias/article/coding/z-index/test.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo1.jpg","path":"medias/article/coding/z-index/xiaoguo1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo2.jpg","path":"medias/article/coding/z-index/xiaoguo2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo3.jpg","path":"medias/article/coding/z-index/xiaoguo3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo4.jpg","path":"medias/article/coding/z-index/xiaoguo4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo5.jpg","path":"medias/article/coding/z-index/xiaoguo5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo6.jpg","path":"medias/article/coding/z-index/xiaoguo6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/random-thoughts/plates-1.jpg","path":"medias/article/random-thoughts/plates-1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/sina-blog-img.jpg","path":"medias/galleries/reflection/sina-blog-img.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/sina-blog.jpg","path":"medias/galleries/reflection/sina-blog.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.eot","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.ttf","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.woff","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.ttf","path":"libs/materialize/font/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.ttf","path":"libs/materialize/font/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.ttf","path":"libs/materialize/font/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.ttf","path":"libs/materialize/font/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.ttf","path":"libs/materialize/font/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/5.jpg","path":"medias/article/coding/news-spider/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/6.jpg","path":"medias/article/coding/news-spider/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/10.jpg","path":"medias/article/coding/news-spider/10.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/11.jpg","path":"medias/article/coding/news-spider/11.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/12.jpg","path":"medias/article/coding/news-spider/12.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/7.jpg","path":"medias/article/coding/news-spider/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/coding/news-spider/9.jpg","path":"medias/article/coding/news-spider/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","path":"libs/awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.svg","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/article/journal/timg.gif","path":"medias/article/journal/timg.gif","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/20180704_211340.jpg","path":"medias/galleries/reflection/20180704_211340.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/logo.jpg","path":"medias/logo.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/imgs/logo.jpg","path":"medias/imgs/logo.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/20180919_184602.jpg","path":"medias/galleries/reflection/20180919_184602.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/20180905_191759.jpg","path":"medias/galleries/reflection/20180905_191759.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/20180626_191742.jpg","path":"medias/galleries/reflection/20180626_191742.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193340.jpg","path":"medias/galleries/reflection/20180920_193340.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193227.jpg","path":"medias/galleries/reflection/20180920_193227.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193229.jpg","path":"medias/galleries/reflection/20180920_193229.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/matery/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1537320058611},{"_id":"source/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1528688571490},{"_id":"source/_posts/create-js.md","hash":"d631274b9c891d4309b46f24eaa861f85c71ed12","modified":1537956131345},{"_id":"source/_posts/gallery-1.md","hash":"face95d59952849b9517ccf6d1ea56ae05342a47","modified":1543236316266},{"_id":"source/_posts/beginning.md","hash":"8c86a4ebaf4efb3cbbd0c0790e57ead8345eb86d","modified":1537337307125},{"_id":"themes/matery/_config.yml","hash":"1668fe707fd684d1dd372653e874abf033d733e0","modified":1543235569388},{"_id":"source/_posts/journal-2.md","hash":"eadd5e299d0abc2e23709ae1f460f3dd3e7051af","modified":1537958547730},{"_id":"source/_posts/journal-1.md","hash":"415d0541ad1b5933ff107f64d2671db3ae5f712e","modified":1537333571639},{"_id":"source/_posts/random-thoughts-1.md","hash":"cea3d9d1477c28927c828c169f0ebf7b33c48c70","modified":1537520267530},{"_id":"source/_posts/news-spider.md","hash":"3ce2039206dc28f952cbc5983dfdbe1c13fb1b68","modified":1537956144043},{"_id":"source/_posts/random-thoughts-2.md","hash":"1407c0b24934f4c54c68f8d6dbacd75fe16d9bb7","modified":1537958453647},{"_id":"source/_posts/the-night-scence-of-chang-An-city.md","hash":"679a46a5caacaf4253ddb5b054211b0b56bb8836","modified":1538225632348},{"_id":"themes/matery/README_CN.md","hash":"877779833252077b4ec02bc1b8291e8075ca09a1","modified":1537320058615},{"_id":"source/_posts/z-index.md","hash":"86918892b537fedd04b908431ef98949741e48f0","modified":1538225506671},{"_id":"source/categories/index.md","hash":"7e11eae7f642d1158bc3b85e17562ba500aa4ee3","modified":1528687950001},{"_id":"source/codings/index.md","hash":"b9901c0d25f2d6d9c2cb31478ae950e9bed8ad70","modified":1538225486960},{"_id":"source/journals/index.md","hash":"04e6f46a3ecf426ab511628683995d50579fc7ff","modified":1538225493198},{"_id":"source/galleries/index.md","hash":"8a49da5f057576b6720581869b6ffb5a9710ff9a","modified":1537931218474},{"_id":"source/random-thoughts/index.md","hash":"3ba8f14acb9e8b814e157820fe9bfdc785a022bd","modified":1538225467932},{"_id":"source/tags/index.md","hash":"ae6a984c352fd067b0bbfa76924c97c72a75467e","modified":1537931212211},{"_id":"themes/matery/languages/default.yml","hash":"86249600dfa3509cc7536047a18294f205a68660","modified":1537320058620},{"_id":"themes/matery/languages/zh-CN.yml","hash":"584d3b3c8e0f0d47d382a1c6fb82b04927193323","modified":1537951245161},{"_id":"themes/matery/layout/archive.ejs","hash":"9122d99d14b4d06212cf05b0fa1b62829746a375","modified":1537320058656},{"_id":"themes/matery/layout/codings.ejs","hash":"d73a84c5098d51e4402680cc8c0de8bdbe68c554","modified":1538297673635},{"_id":"themes/matery/layout/galleries.ejs","hash":"4675554458426a5b1b94f64dfe5ac4f6e0af59c3","modified":1537943623371},{"_id":"themes/matery/layout/index.ejs","hash":"5f967fcfd9f29904a8637933ff7114a36b2493f8","modified":1537341122318},{"_id":"themes/matery/layout/journals.ejs","hash":"d9cd625b8d84625209a37335977b0b46ed208b56","modified":1538297773198},{"_id":"themes/matery/layout/layout.ejs","hash":"f89f5608bad86ac67b56e1045484f114fc05eb10","modified":1537320058660},{"_id":"themes/matery/layout/post.ejs","hash":"e85c4d55f71af2899656b4bf3eeff3b846a8debf","modified":1538205033419},{"_id":"themes/matery/layout/random-thoughts.ejs","hash":"be115c2a61b2a9905e736685a4cb3a8ca5fa82b0","modified":1538297705417},{"_id":"themes/matery/layout/tags.ejs","hash":"bb9f6abde036eb8aed7848283d234a4471394ce7","modified":1537942321760},{"_id":"themes/matery/source/favicon-16x16.png","hash":"a15668159007741232dd7163ba08ad8078835b37","modified":1543235759644},{"_id":"themes/matery/source/favicon-32x32.png","hash":"db73a9f0746c3ddf208ee2b536f68087a000d564","modified":1543235777238},{"_id":"source/about/index.md","hash":"3f85dd6dfdf97ceb233146ab9ac209b6963cc93c","modified":1535505938335},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"949f0b12696fe00cc5c0393a4e03104d60b28815","modified":1537320058627},{"_id":"themes/matery/layout/_partial/baidu-analytics.ejs","hash":"bf7560c112285f37714fdbea9d2ff258d87a4dff","modified":1537359432014},{"_id":"themes/matery/layout/_partial/baidu-auto-push.ejs","hash":"3f7883245e5d7e667d2f2eb3e82c27a684a2894d","modified":1537514898906},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"aa4657e2eadd7bf5afdab4b17577223ee09a1de8","modified":1537322712452},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"052e37f6acf469ec116d499ebe47aeceacaee998","modified":1537519200095},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"e9560ff80d2d9c82e7f4ab301444cc1bc39497a5","modified":1537320058631},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"95cc019721720ab21294579d08ccda9bb97be09e","modified":1537320058635},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"50ec4d1dba495163ce4d2b906957c7a0f7b3d37d","modified":1538225125129},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"7377b4c76a1eb747f36f4607222c99eaee003c7b","modified":1537324199509},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"b404b7e57a93e37e92d8257b0f1072a7eef22e36","modified":1537339362447},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"191ad23d5541bf4749cdf4c88d05ed5a5167c6df","modified":1537322257830},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"c1dae457dc152682585bf75634f8769d329f6c77","modified":1537320058646},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"ed1d95b91ffdf4dfd8bdfa17ac3d6f3e44f3e1f3","modified":1537320058648},{"_id":"themes/matery/layout/_partial/prettify.ejs","hash":"566b8060a1930e50b58ad672e3a68fc34ddc044e","modified":1537512152029},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"1c157ee314fa0b6ff557a5c2597dcbd4df47f505","modified":1538297520702},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"c08d38af66d0b9938d5bf3c3ac64f08a3ae205b4","modified":1537320058652},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"0f2e1e27d21492cf228e786daead985b1e1dcea4","modified":1537320058654},{"_id":"themes/matery/layout/_partial/valine.ejs","hash":"bab4f82b95b5a1c3269304920875dcd380709040","modified":1537505038440},{"_id":"themes/matery/source/css/custom.css","hash":"6f5197218cdad9d0c23cfc7fcef4b40ca6e36a26","modified":1538298058891},{"_id":"themes/matery/source/css/gitment.css","hash":"64004fac9950e865d8cf93cf2d7490ff2401019d","modified":1537413753246},{"_id":"themes/matery/source/css/matery.css","hash":"1a470765e89c76f25c903a5974efd0d538d3679f","modified":1538297367177},{"_id":"themes/matery/source/js/matery.js","hash":"edbc0faad9cc7143d0493b309e164bd49d39cf3b","modified":1537930549727},{"_id":"themes/matery/source/js/search.js","hash":"58fb1cfeaf3bf0f9ae45a8777d6b0d3f32fedf55","modified":1537320058678},{"_id":"themes/matery/README.md","hash":"f2b3c072c021727753ccce052894723cb427a7f2","modified":1537320058613},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"5dfcbcee866e9dc564916416281885f3e320871e","modified":1537320058683},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"ded9739f803d114c9168d3351fded72b3b478b4c","modified":1537320058686},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"5a8e6d07ffa55642418ab3fd4b263aa08284b77a","modified":1537320058688},{"_id":"themes/matery/source/libs/baidu/autoPush.js","hash":"faad21a7c3a1fe4e1175794853abb69888b4cf87","modified":1537362041892},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"a0625d8b432af8bdc820f8768d36cde439e7257c","modified":1537320058716},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"f81cd7bfcf7aa2d043bd3e6077df42656fc44b82","modified":1537320058753},{"_id":"themes/matery/source/libs/prismTheme/prism-a11y-dark.css","hash":"8d15adeef5bf941c895c40b188a4ed318d26bc69","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-atom-dark.css","hash":"e4636f192355a3907b38b27847f83b3a5913039b","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-base16-ateliersulphurpool.light.css","hash":"7c75c045b5e9d2d230c59882e2e9b84a967882e2","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-cb.css","hash":"38e5c9c50802899cf95a55c42313cce5fa70cbc4","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-darcula.css","hash":"4bb32a2a7ffa2027e62374051eadc07188a52ac2","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-dark.css","hash":"5b12175936f45ec46b32bbce75d78d41f3ebfe29","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-forest.css","hash":"3e897aefedf83d1fd6b1412afc03bb80934c69d3","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-earth.css","hash":"c325b47242ba932aec56e341bc59c638acf60923","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-light.css","hash":"6b59fe5e644fb6a61f12a205a513fc1178c57354","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-sea.css","hash":"0750f483be0552b18938b646904acb126ae45199","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-duotone-space.css","hash":"a3fe76f7e71100823fb00904599f8e0eefcbc523","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-ghcolors.css","hash":"491dacd0af5961d7d75456ed9aebb0c6155f8016","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-pojoaque.css","hash":"f3b89aafecd709f1853a47174c5517a98763786b","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-hopscotch.css","hash":"1641ce3c043292ead331496ab8618775126f9e0c","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-vs.css","hash":"29d61aedb9db75bf73ac4d906e31617861b82dbf","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism-xonokai.css","hash":"8da758309e05da7938ae9d7c4aecd52be780eced","modified":1524809699000},{"_id":"themes/matery/source/libs/prismTheme/prism.js","hash":"d4d94e8f44469b830a58b5e4267645f1cf3a99cb","modified":1537348829084},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1537320058889},{"_id":"themes/matery/source/libs/valine/custom.css","hash":"1b187c8626c34fdc087af57e6b36c852bb3b266d","modified":1537506116744},{"_id":"themes/matery/source/medias/cover.jpg","hash":"fc71a253f16844745fa85f734e1fe14fd347253d","modified":1543235646141},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"b55e775c70ec37d98d16c42e50a708f17a5dda60","modified":1543236901540},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"7ec859542dfee11ac1133706ce698d8d457679bd","modified":1543236919489},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"c0306ffe3c55518385adf0c5588bd81b8e370df0","modified":1543236927399},{"_id":"themes/matery/source/medias/featureimages/19.jpg","hash":"e366c18e5f2234ec60da9c2f6032820e0213bde4","modified":1543236950667},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"68c551926ec6bcbe7dce563d3c1aac4e5178b542","modified":1543236974996},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"8fed470f5e852a2b096436612ef4b3098483822e","modified":1543236837786},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"a4241344a39380f49e40fb5938f9fd249cd1bab1","modified":1543236855676},{"_id":"themes/matery/source/medias/imgs/favicon-16x16.png","hash":"a15668159007741232dd7163ba08ad8078835b37","modified":1543235759644},{"_id":"themes/matery/source/medias/imgs/favicon.png","hash":"db73a9f0746c3ddf208ee2b536f68087a000d564","modified":1543235777238},{"_id":"themes/matery/source/medias/imgs/wechat-pay.png","hash":"50174f0fa94bc7943de56f8c4b105bdd970b0d17","modified":1530767925383},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1543165486000},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","hash":"5d7e5bbfa540f0e53bd599e4305e1a4e815b5dd1","modified":1543165486000},{"_id":"themes/matery/source/medias/banner/0.jpg","hash":"8d25a1e79c4b4b1676134400271187cf9702bcc4","modified":1543236587397},{"_id":"themes/matery/source/medias/banner/1.jpg","hash":"d2fb3a62b7e5809ff4315dd57bdc8fd0f8659048","modified":1543236607505},{"_id":"themes/matery/source/medias/banner/6.jpg","hash":"3219ce162c29f3849a24c0a329a3e0e303bbec26","modified":1543236671572},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"59fde564000fa425a1db6f9ecf5a37edca696d6a","modified":1543236778803},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"0cc1db5cf4e4eea0b3eb84ee8901bdd6c5c1208b","modified":1543236770595},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"8f66bd6e43517416a12694123093fb8c71e2bdcf","modified":1543236873425},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"05ed3c580e53645bab590904a545a039d9c8597e","modified":1543236882008},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"3c72e706e5de7cb8ee068efe712d59a55a1ea31a","modified":1543236894728},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"19920126c33d1b8e954581c41c5281692191183f","modified":1543236910911},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"eb0360c936b1080026a3dec38ccf99e514496077","modified":1543236935606},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"681eef400823c67c2a2afdbf8b63a059a256cbf7","modified":1543236942524},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"9ba8fca96636f0c1f307111377ec254a268b14db","modified":1543236789734},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"98535c5351446e4e2f0e727b445dad68e2e1767a","modified":1543236958312},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"2d13160e0e276b2e1152c60cc1bd0ddfb3f1e2d2","modified":1543236983228},{"_id":"themes/matery/source/medias/featureimages/24.jpg","hash":"568a65db5d8c5412174a9b45f8d34788c6bfa125","modified":1543201869094},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"55301410f4930650e2af4857f80ec3c373f87327","modified":1543236800308},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"97805210f4918595dcefbe3a970587258b23c259","modified":1543236809534},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"668d7fae55de06c12665fddb413568247cd6e5d1","modified":1543236818481},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"8c62148373ed579d44b07ee5857aca3812d2ec42","modified":1543236829774},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"340192044cb790dbaafd00989835214e441c9ad4","modified":1543236865268},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","hash":"624e4a106f0cf385ff4bd6a65c52cecd84f42ef9","modified":1537320058694},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1537320058727},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1537320058730},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"3480f00d284c812d623ed16a9e0ead3fb964c72e","modified":1537320058732},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1537320058734},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1537320058736},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1537320058739},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1537320058741},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1537320058743},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1537320058745},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"f8cd48e1fff82ecd54a7ce3e69de8dba7c92d113","modified":1537320058748},{"_id":"themes/matery/source/libs/prettify/css/atelier-cave-dark.css","hash":"09f3cd75ed03ccc20fc8f817908102ed26219125","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-cave-dark.min.css","hash":"54c272f1d4262b8c1b6043ccc8ff4734b3b1c636","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-cave-light.css","hash":"46bbc73ac8a735e2d907be44d964d9ba96e8a16b","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-cave-light.min.css","hash":"2bbabca35533a5922fb1774db6eed9722ef0de3b","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-dune-dark.css","hash":"47dcb8b3b91aeedf9d74abe760a986c7a0f78a8e","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-dune-dark.min.css","hash":"af53930094ac7a64aaf607ab57ba5b01a09e8efc","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-dune-light.css","hash":"8237c95fc706fd01725144c7e852f586f5269b2c","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-dune-light.min.css","hash":"f7b9b5347f85a0ff22cbaca0d78949ac13fe3eb5","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-estuary-dark.css","hash":"fccbba89b0e1e42b3676291aaf3098e7c46169a6","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-estuary-dark.min.css","hash":"cbc1f5ec42e9f28af3891523f168b0899f978469","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-estuary-light.css","hash":"641351e6e00f73c0b06208dc21dde214105b5333","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-estuary-light.min.css","hash":"a93a4b8ba506b7c1e9135167c9ccf0691ee8ad07","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-forest-dark.css","hash":"750da2899332c401e63c77f0b79c1280f060a24d","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-forest-dark.min.css","hash":"955e4eeee93268be21cdda62c4f0e31242fc580a","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-forest-light.css","hash":"ca610b6c535dccd8442ff412683509f9b5f7d42c","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-forest-light.min.css","hash":"debca8705bb18a407dfcda63234f1f2b7aef2916","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-heath-dark.css","hash":"9f751e5e2f741a2ca802119a0b9629456777495a","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-heath-dark.min.css","hash":"98a3fea2b8ac476b48b52b757dad939ce80d20b3","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-heath-light.css","hash":"f7a03f2a997bba346a350bedfc860594af29768b","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-heath-light.min.css","hash":"e07b521484b1b4933c0e60ffa6bdfc29bf0c7ec2","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-lakeside-dark.css","hash":"1c0a402a9f8b243f3ef18895ab4a56fbfcf49a1f","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-lakeside-dark.min.css","hash":"b8208a6d6b6dcfa1c4da9a98095f4fe91b519cd5","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-lakeside-light.css","hash":"74c98a39d22780b038551ab6c2a30759b5425518","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-lakeside-light.min.css","hash":"89b917373b3763d4222a5106ba784239e3912a75","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-plateau-dark.css","hash":"5be42e7c5fdc012500d13db48ddeab95ae297916","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-plateau-dark.min.css","hash":"7de8a010c6cf7d0e5e29e017ca620a24399e62ff","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-plateau-light.css","hash":"6160404d0e976cf8e4d8621e6b7e2e8814541771","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-plateau-light.min.css","hash":"84dfbe203e661725913a73f0c573fc1c73565431","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-savanna-dark.css","hash":"d34b76751cdf2d8fbb11b15af27c0a9b88d2d181","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-savanna-dark.min.css","hash":"06322bcdaa36bb45948828705456ad158415c3f8","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-savanna-light.css","hash":"1a81911ada5f680e3af2a266cbebf68c8fc032aa","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-savanna-light.min.css","hash":"e363e8b856e9048b99dcb94e416aba9e7f1a9886","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-seaside-dark.css","hash":"0e649a5526ff0e3452be4519465f9282705e68b1","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-seaside-dark.min.css","hash":"696a18e6d4d639fd14490262f9a2626203c43fea","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-seaside-light.css","hash":"4eae4f7ac1a5bc9947c403942d2fb0daef697cac","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-seaside-light.min.css","hash":"7c070b58bf089d259bf19309708452e6786e05a3","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-sulphurpool-dark.css","hash":"e8d643b9e6276f76d0ca873da654ce1760694710","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-sulphurpool-dark.min.css","hash":"9718078d1e2208d44bf5ea9a5bfa331f7d8d1fdb","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-sulphurpool-light.css","hash":"ec816451c57efebb77025f04b9191a22c4e573e0","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/atelier-sulphurpool-light.min.css","hash":"4eb3ac86b14fdeb45b106580a8d80f359cbab57c","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/github-v2.css","hash":"8b9e795a1dc3e79ab68d07d007d659d685f935ee","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/github-v2.min.css","hash":"cb06bb61052646b33d19a37ad14d68cdd7405d98","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/github.css","hash":"741fde7dc9a25924f267dc251a018526525f6b98","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/github.min.css","hash":"b156639209d7b9b27d3a8cd92bdd676ad358c628","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/hemisu-dark.css","hash":"dbe6c7f5effeec9c332b7d2a95505f1167027922","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/hemisu-dark.min.css","hash":"ffc544c52368f725c2ab98d3e6e7a86aca1e31a2","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/hemisu-light.css","hash":"923d9f6fa7b043b90a212246acdafdaf363aefc0","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/hemisu-light.min.css","hash":"ae6bb465d1f5e28366c66827b8ba4a5924898c04","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-blue.css","hash":"33e4483b73b72d561ec3ee6bac085a8ecfc07564","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-blue.min.css","hash":"c78e33010239894f25eac66b1f0d5a7c310313f5","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-bright.css","hash":"2a69a02e3820845a4e1f12c7ba4e00e8e61f15a9","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-bright.min.css","hash":"0cbd70932ebee3aca4a86fd0e23773e920bc0d5e","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-eighties.css","hash":"ab4a7ca393524f5c15c36ae46152a559cdcb2400","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night-eighties.min.css","hash":"f654ece8ef13e740f844ce593912e040e3f21e5f","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night.css","hash":"40d3a13e572b5e2743762aaff97738c3248acbf6","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow-night.min.css","hash":"5bb9910676b08e6d2a6eac5ef07e08754de14a01","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow.css","hash":"2b6bc58a2a889882a45be1c553f7f9a36f9b3f90","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tomorrow.min.css","hash":"1f61e1f9c60f8be82e3a8287a4f46d87b4551400","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/tranquil-heart.css","hash":"cb601cf28f7ec08fd1a9700aa755f7cb1645ac4a","modified":1461928422000},{"_id":"themes/matery/source/libs/prettify/css/tranquil-heart.min.css","hash":"9c669545e3517de77f5cff50a58e4ef035855c87","modified":1461928422000},{"_id":"themes/matery/source/libs/prettify/css/vibrant-ink.css","hash":"db15bbca779664e13472a84146f7f010dc011799","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/css/vibrant-ink.min.css","hash":"feca319864faa3f8a6ae878553c1d960c7ff702f","modified":1460424786000},{"_id":"themes/matery/source/libs/prettify/js/lang-apollo.js","hash":"e19c633557b10eab4daad0c2586b3ecb44937ba3","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-basic.js","hash":"565276ee5ea2f117e07a8997d792b7d734e4063c","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-clj.js","hash":"fff2857ba9919e7a2e8b61b08f1b87be41ed3a46","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-css.js","hash":"9df3f79343a2104339e5c3ab9d94a39c0291b37b","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-dart.js","hash":"34c6c4897cf7d22e230ff9db55f2821c5eddbca8","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-erlang.js","hash":"6cb9234429b62d55ff078346668725d6c08efea9","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-ex.js","hash":"4a73c2a674799327a2dbe2691aff72d909034b7a","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-hs.js","hash":"602e2ff0c97f814773d3895f08c07b5efa8a63d5","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-go.js","hash":"9cfcf1a3e4f9884b369910d7ed2cd67f644ac284","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-kotlin.js","hash":"4aa66901437d588ccaf669d40a91a5cf36f2ffaa","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-lisp.js","hash":"48d79c12e1915e1166c3cb8cb1798f8ec2443cc9","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-lasso.js","hash":"ba0b1a3ac1ad041a1adf6b90154713d1248391e1","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-llvm.js","hash":"5138b9a56f063688205157703c629fefdb8ed4d0","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-logtalk.js","hash":"7836eccb85957e1dae2ca02a9530cf0c7369f949","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-lua.js","hash":"d907fa9f1e43aa6f86530d9803b6150b0852140b","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-ml.js","hash":"968bdc15137ae94b206e485b5bdfa5c96eff5857","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-matlab.js","hash":"b71302c9a2aa5ed2b31a75ff364ec6270ac52b1b","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-mumps.js","hash":"9a1cae257b9b028b22ac2c4c9e4c3d2873898566","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-n.js","hash":"c2c992ba29d96410a93109ec2505b8e7a96782b9","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-pascal.js","hash":"17d60d30e6a73b3a8657baba733bb04ecbd53039","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-proto.js","hash":"8dc02debbff302b7d75df5728888abea01d885ae","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-r.js","hash":"0c6b75d79b64f603b5e66e4824e51b01df7dc841","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-rd.js","hash":"5421a7fe15ddf2b5ea4ab37805e7b7df9784cb34","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-rust.js","hash":"d5320b7d04fa87634729120062047b4843d62e04","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-scala.js","hash":"74e6aef0b3c6ee2208d0ee3a4887766271724763","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-sql.js","hash":"75c9fcd8145b0312c103841ba4fa80bcb76c01e7","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-swift.js","hash":"0b12cb29773ac59b3e86a709982c06d1fb903e21","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-tcl.js","hash":"2270ce056e525578c4fdff32947fa44baeb3475a","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-tex.js","hash":"c30f64b85d576afbb7586a85bcfb471c4dace462","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-vb.js","hash":"ba5046fe3caa09c7e2b7e1b3a643b710285a1efa","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-vhdl.js","hash":"d19fd1f281d3f7b9583bbf446790d8c7f0022d9c","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-wiki.js","hash":"197ed2adc974afa9eba86f6eec4dbb864a8649c7","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-xq.js","hash":"dd0c434083a0fd01b144eb506caedf481abc4052","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/lang-yaml.js","hash":"a3a509eb7a2298b962d8b132bd19d093c5e75b25","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/node_prettify.js","hash":"a3b9a2e9b334ffd6fd1b59534b260a270c96c5c1","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/prettify.css","hash":"3f5dc3139f7385092d5dd567bb273c4585dee82d","modified":1525029810000},{"_id":"themes/matery/source/libs/prettify/js/prettify.js","hash":"eec92d79f0678b390289981b01866ea5dd36c090","modified":1525029810000},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1537320058893},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1537320058893},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1537320058894},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1537320058894},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1537320058895},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"16ce82901ca0e302cf47a35fb10f59009a5e7eb9","modified":1537320058896},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"4df722bafde2c5d8faaace0d1f894798385a8793","modified":1537320058896},{"_id":"themes/matery/source/medias/article/journal/arctic.jpg","hash":"0df7dbc2e6d66b0779422d79f7feff4293f13564","modified":1534211821063},{"_id":"themes/matery/source/medias/article/journal/carbon.jpg","hash":"9e1483302582aafd0961ab3931330362203348ea","modified":1534208682508},{"_id":"themes/matery/source/medias/article/journal/reserve-time.jpg","hash":"8e3dc030ef3c0f767f6d68221bf483d4eace7f7f","modified":1534209666630},{"_id":"themes/matery/source/medias/banner/3.jpg","hash":"fc71a253f16844745fa85f734e1fe14fd347253d","modified":1543235646141},{"_id":"themes/matery/source/medias/banner/4.jpg","hash":"d4b9cedb4a2169a40845f9ea6bdcb2c510ae7705","modified":1543236642778},{"_id":"themes/matery/source/medias/banner/5.jpg","hash":"8dc9fbcca325316c49ac3514b24bab677bd4531c","modified":1543236658270},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"864e4187cd624b0d8c9642cf0ebdadd92d3ef83a","modified":1543236966577},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1543165486000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/js/materialize.min.js","hash":"900e478fb609e18a4f785164fc6f6b0442e8a94e","modified":1543165486000},{"_id":"themes/matery/source/libs/prettify/js/run_prettify.js","hash":"b029f610e84bf11d705927d92b0df4f376973a67","modified":1525029810000},{"_id":"themes/matery/source/medias/article/journal/temperature-1.jpg","hash":"6d15eafef95b5c308bf4e8ad89f9853f32557280","modified":1534145625611},{"_id":"themes/matery/source/medias/article/journal/temperature-2.jpg","hash":"c67a485716f78feb96ad55fdb0ad9121077e5d7d","modified":1534145541166},{"_id":"themes/matery/source/medias/article/random-thoughts/The-Mcmoirs-of-a-Survivor.jpg","hash":"11e20aec3d554a3163656816ec9c2568dadaa10a","modified":1534834590884},{"_id":"themes/matery/source/medias/banner/2.jpg","hash":"ad7eaf6fcdd20b1370dbbb9d028080797488592e","modified":1543236621581},{"_id":"themes/matery/source/medias/logo.png","hash":"2f17c3831c4ee9ee1c89a1de2a71cf09b4018504","modified":1543201333824},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1543165486000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1543165486000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/css/materialize.min.css","hash":"ca9b5271c307593264daad9753b962a0a8db1cef","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/LICENSE.txt","hash":"540e43aea993ada0c9b4b50ae5843494d8b7cc28","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.woff2","hash":"2355cb4f824d070bc42c4ce6b97cab71af1f4ca2","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1543165486000},{"_id":"themes/matery/source/medias/article/coding/create-js/easeljs.jpg","hash":"7ff3a9930c5a3e76ac56801528fb90cf0ea89ae1","modified":1531817779515},{"_id":"themes/matery/source/medias/article/coding/news-spider/1.jpg","hash":"a54988034d5a300cdddce49490955429f4e6ff9c","modified":1527225688367},{"_id":"themes/matery/source/medias/article/coding/news-spider/13.jpg","hash":"26d4facc6fb433600c82227076a8db9d50b036a2","modified":1527225766976},{"_id":"themes/matery/source/medias/article/coding/news-spider/2.png","hash":"4dac47af8d15d410103bf651de28f9843333edb7","modified":1527225695177},{"_id":"themes/matery/source/medias/article/coding/news-spider/3.jpg","hash":"031b0fbeab6e5ebd514addc46d1b0868356b24b2","modified":1527225703779},{"_id":"themes/matery/source/medias/article/coding/news-spider/4.jpg","hash":"6e3ee0dee1eac3d34ced499201ca2715b37c624c","modified":1527225712710},{"_id":"themes/matery/source/medias/article/coding/z-index/XYZ.png","hash":"588560ad6c806adefb95528a41cb4895f849e65d","modified":1535438636448},{"_id":"themes/matery/source/medias/article/coding/z-index/stacking-order.jpg","hash":"0a7950ebadd98374e0aba7e33ba11c5beb9832f6","modified":1535452126584},{"_id":"themes/matery/source/medias/article/coding/z-index/test.jpg","hash":"18d31ba66f8d0a708e4c92d9812341b1742c7071","modified":1535597770797},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo1.jpg","hash":"db2dc32b71e137dd09580220cdf263c42f526371","modified":1535443553451},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo2.jpg","hash":"11582bd1aac4139848996f382891a7f116e4a711","modified":1535444224246},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo3.jpg","hash":"ad8ab1fac9e48d53a4a4f0e996f8cc2a1dd83d9a","modified":1535513000217},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo4.jpg","hash":"62c33262c7abd185f6c86ceb926cc1da5046e80f","modified":1535512969004},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo5.jpg","hash":"6c74295f342d1a0500f3deed3a93b7a834b979c4","modified":1535528783772},{"_id":"themes/matery/source/medias/article/coding/z-index/xiaoguo6.jpg","hash":"8ec0ea617b74886317264121bb3de633343c65d5","modified":1535528820586},{"_id":"themes/matery/source/medias/article/random-thoughts/plates-1.jpg","hash":"58825f9d64c1a6b1fe42fcd0d2b2737e1598e470","modified":1533696181051},{"_id":"themes/matery/source/medias/galleries/reflection/sina-blog-img.jpg","hash":"eb77169c57618b91b2dacea3ea74fcf367f49c09","modified":1543236132903},{"_id":"themes/matery/source/medias/galleries/reflection/sina-blog.jpg","hash":"5d339fe71792745e524c82354e5e24a4ac86cd89","modified":1543236118635},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.eot","hash":"fc1bc1337f3313ead42b22a67a142d4e0d356b3a","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.ttf","hash":"2cb66ac73a2d32ae8d2f807f705eff26fcf93323","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.woff","hash":"ee77184556f7b66fcb8ee9496f81ac62f792d7dc","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1543165486000},{"_id":"themes/matery/source/medias/article/coding/news-spider/5.jpg","hash":"bfd2b59dfadc5e38ad14358821206fbdfca1bc6b","modified":1527225719651},{"_id":"themes/matery/source/medias/article/coding/news-spider/6.jpg","hash":"29e196a666666db102381c2f9b820ae5bba81961","modified":1527225724501},{"_id":"themes/matery/source/medias/imgs/logo.png","hash":"2f17c3831c4ee9ee1c89a1de2a71cf09b4018504","modified":1543201333824},{"_id":"themes/matery/source/medias/article/coding/news-spider/10.jpg","hash":"751ab3c82189366002e24744eca61aedf5cb0a7a","modified":1527225745874},{"_id":"themes/matery/source/medias/article/coding/news-spider/11.jpg","hash":"b174f5dce7761d432d5479c42acd631c8b32fb91","modified":1527225755643},{"_id":"themes/matery/source/medias/article/coding/news-spider/12.jpg","hash":"4184f197ece00ee5870a6b080be3702d4851fca8","modified":1527225762402},{"_id":"themes/matery/source/medias/article/coding/news-spider/7.jpg","hash":"db4bec364e473fe6c8601acc266666be970e6300","modified":1527225731404},{"_id":"themes/matery/source/medias/article/coding/news-spider/9.jpg","hash":"cae67f8df4b3876c16c612938e32973fc10423af","modified":1527225740676},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1543165486000},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.svg","hash":"757d54367f0df16a783769eec0ba974f42bd7dce","modified":1543165486000},{"_id":"themes/matery/source/medias/article/journal/timg.gif","hash":"b7a71d7ac6ec8ecd8b843a04c20a322cb02b2d64","modified":1533696181034},{"_id":"themes/matery/source/medias/galleries/reflection/20180704_211340.jpg","hash":"92645a228973cc4804a16f63b881701cfbf974fd","modified":1543236204458},{"_id":"themes/matery/source/medias/galleries/reflection/20180919_184602.jpeg","hash":"73237a5fd3d28c071f829fdc8b7c0c0afd57b2f2","modified":1538298088809},{"_id":"themes/matery/source/medias/galleries/reflection/20180905_191759.jpeg","hash":"c1dea0bece4245e6e32f8a0874705903409d8e09","modified":1538298088821},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193340.jpeg","hash":"df52972e018bc6217cfb2eb78b11f84e1c3a9693","modified":1538298088821},{"_id":"themes/matery/source/medias/galleries/reflection/20180626_191742.jpeg","hash":"1de0a8c8376e14af4c9e087d1cfcc8057af736ee","modified":1538298088822},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193227.jpeg","hash":"42eba12836b6e7e80bc5623d65c95e4b0393a6d7","modified":1538298088826},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193229.jpeg","hash":"591c2379c8bbe5782929b833969a362ee5927709","modified":1538298088829},{"_id":"themes/matery/source/medias/logo.jpg","hash":"f5cf8edc1bbf0fcd0c3d138a74ac3e45ef098648","modified":1543235373784},{"_id":"themes/matery/source/medias/imgs/logo.jpg","hash":"f5cf8edc1bbf0fcd0c3d138a74ac3e45ef098648","modified":1543235373784},{"_id":"themes/matery/source/medias/galleries/reflection/20180919_184602.jpg","hash":"0a1fdde570d7e68e0180e6ddbfd7907a9ca075b0","modified":1543236246297},{"_id":"themes/matery/source/medias/galleries/reflection/20180905_191759.jpg","hash":"7db446a4c0eed1e61da5d944d9634f2ae8d025a1","modified":1543236227771},{"_id":"themes/matery/source/medias/galleries/reflection/20180626_191742.jpg","hash":"66901fff477a8a233cb59102bc5c20fdb96cd175","modified":1543236174760},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193340.jpg","hash":"5140c526299a808e3f9ec08a51148f92ec16809b","modified":1543236385164},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193227.jpg","hash":"2110a1c342bcdc4f73346e89defac3acc9f1eaaf","modified":1543236321862},{"_id":"themes/matery/source/medias/galleries/reflection/20180920_193229.jpg","hash":"4bb1487f2b7d48c36f58eab036cfb92c04532ba6","modified":1543236350975}],"Category":[{"name":"编程","_id":"cjoxr0vfn0003ogsmgajwe2nb"},{"name":"影集","_id":"cjoxr0vg30008ogsm93sdgnrv"},{"name":"日志","_id":"cjoxr0vg3000dogsm9w0lygk1"},{"name":"前端","parent":"cjoxr0vfn0003ogsmgajwe2nb","_id":"cjoxr0vg3000logsmg1vb4lzr"},{"name":"随想","_id":"cjoxr0vg3000togsm20d1wand"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2018-11-23T12:57:11.003Z","updated":"2018-06-11T03:42:51.490Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjoxr0ves0000ogsm72akuvj4","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"文章分类","date":"2018-06-08T06:41:06.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2018-06-08 14:41:06\ntype: \"categories\"\n---","updated":"2018-06-11T03:32:30.001Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjoxr0vgy0019ogsmxelw9fuy","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章列表-编程","date":"2018-06-11T08:40:00.000Z","layout":"codings","_content":"","source":"codings/index.md","raw":"---\ntitle: 文章列表-编程\ndate: 2018-06-11 16:40:00\nlayout: codings\n---\n","updated":"2018-09-29T12:51:26.960Z","path":"codings/index.html","comments":1,"_id":"cjoxr0vgy001bogsmh2pj26y1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章列表-日志","date":"2018-06-11T08:40:00.000Z","layout":"journals","_content":"","source":"journals/index.md","raw":"---\ntitle: 文章列表-日志\ndate: 2018-06-11 16:40:00\nlayout: \"journals\"\n---\n","updated":"2018-09-29T12:51:33.198Z","path":"journals/index.html","comments":1,"_id":"cjoxr0vgy001dogsm2wbj7r8r","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"影集","date":"2018-09-26T01:46:22.000Z","layout":"galleries","_content":"","source":"galleries/index.md","raw":"---\ntitle: 影集\ndate: 2018-09-26 09:46:22\nlayout: \"galleries\"\n---\n","updated":"2018-09-26T03:06:58.474Z","path":"galleries/index.html","comments":1,"_id":"cjoxr0vgy001gogsm1htts1yi","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章列表-随想","date":"2018-06-11T08:40:00.000Z","layout":"random-thoughts","_content":"","source":"random-thoughts/index.md","raw":"---\ntitle: 文章列表-随想\ndate: 2018-06-11 16:40:00\nlayout: random-thoughts\n---\n","updated":"2018-09-29T12:51:07.932Z","path":"random-thoughts/index.html","comments":1,"_id":"cjoxr0vhe001hogsm1chr13ce","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签页","date":"2018-06-11T03:29:22.000Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签页\ndate: 2018-06-11 11:29:22\nlayout: \"tags\"\n---\n","updated":"2018-09-26T03:06:52.211Z","path":"tags/index.html","comments":1,"_id":"cjoxr0vhe001kogsmm7yrd23t","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于作者","date":"2018-06-08T06:34:49.000Z","_content":"\n## 关于我\n\n一个爱文字，爱音乐的半文艺前端“程序猿”，坐标西安，主要从事前端开发工作，毕业时间不长，目前还在不断积累成长的阶段。\n\n说到家乡陕西西安，就想多说几句，介绍性的话无需多言，网上太多了......说一个有意思的现象，最近一段时间，西安在\"某音App\"上貌似很火，听朋友介绍，说是火得有点“丧心病狂”，抱着好奇的心态前一阵子用了几天，里面是全国各地朋友在西安“打卡”的短视频，有很多地方和活动，说真的，我自己都没怎么去过，甚至不知道。作为土生土长的西安人，很自豪也很感激，谢谢大家对西安的喜爱和支持！\n\n其实，我更喜欢称西安这座古城为“长安城”，这更符合她在我心中的地位和感觉，古典与现代交融，优雅和市井并存，传统与朋克碰撞，相互促进，相互融合。如果你对西安城的印象还停留在“八百里秦川尘土飞扬”、“面朝黄土背朝天”的阶段，那你可能真的可以抽空来次西安，看一看当年万国来朝的长安城，看看“九天阊阖开宫殿，万国衣冠拜冕旒”的长安城，看一看多年获得“国家卫生城市”、“国家森林城市”称号的长安城，感受一下当年孟郊“春风得意马蹄疾，一日看尽长安花”的快感，欣赏一下长安城“东风夜放花千树。更吹落、星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞”的夜景......\n\n西安也不是那么尽善尽美，她也有需要进步、需要努力、需要创新的地方，也请大家给西安城一些时间，我们一定给大家一个你曾经梦中的“唐长安城”......\n\n在我心里，西安人安土重迁，但又热情好客...希望有机会大家都能来西安转一转。我，在“长安”等着你......\n\n## 联系我\n\n> QQ邮箱：changAncgz@163.com","source":"about/index.md","raw":"---\ntitle: 关于作者\ndate: 2018-06-08 14:34:49\n---\n\n## 关于我\n\n一个爱文字，爱音乐的半文艺前端“程序猿”，坐标西安，主要从事前端开发工作，毕业时间不长，目前还在不断积累成长的阶段。\n\n说到家乡陕西西安，就想多说几句，介绍性的话无需多言，网上太多了......说一个有意思的现象，最近一段时间，西安在\"某音App\"上貌似很火，听朋友介绍，说是火得有点“丧心病狂”，抱着好奇的心态前一阵子用了几天，里面是全国各地朋友在西安“打卡”的短视频，有很多地方和活动，说真的，我自己都没怎么去过，甚至不知道。作为土生土长的西安人，很自豪也很感激，谢谢大家对西安的喜爱和支持！\n\n其实，我更喜欢称西安这座古城为“长安城”，这更符合她在我心中的地位和感觉，古典与现代交融，优雅和市井并存，传统与朋克碰撞，相互促进，相互融合。如果你对西安城的印象还停留在“八百里秦川尘土飞扬”、“面朝黄土背朝天”的阶段，那你可能真的可以抽空来次西安，看一看当年万国来朝的长安城，看看“九天阊阖开宫殿，万国衣冠拜冕旒”的长安城，看一看多年获得“国家卫生城市”、“国家森林城市”称号的长安城，感受一下当年孟郊“春风得意马蹄疾，一日看尽长安花”的快感，欣赏一下长安城“东风夜放花千树。更吹落、星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞”的夜景......\n\n西安也不是那么尽善尽美，她也有需要进步、需要努力、需要创新的地方，也请大家给西安城一些时间，我们一定给大家一个你曾经梦中的“唐长安城”......\n\n在我心里，西安人安土重迁，但又热情好客...希望有机会大家都能来西安转一转。我，在“长安”等着你......\n\n## 联系我\n\n> QQ邮箱：changAncgz@163.com","updated":"2018-08-29T01:25:38.335Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjoxr0vhe001mogsmzm6v4sn6","content":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>一个爱文字，爱音乐的半文艺前端“程序猿”，坐标西安，主要从事前端开发工作，毕业时间不长，目前还在不断积累成长的阶段。</p>\n<p>说到家乡陕西西安，就想多说几句，介绍性的话无需多言，网上太多了……说一个有意思的现象，最近一段时间，西安在”某音App”上貌似很火，听朋友介绍，说是火得有点“丧心病狂”，抱着好奇的心态前一阵子用了几天，里面是全国各地朋友在西安“打卡”的短视频，有很多地方和活动，说真的，我自己都没怎么去过，甚至不知道。作为土生土长的西安人，很自豪也很感激，谢谢大家对西安的喜爱和支持！</p>\n<p>其实，我更喜欢称西安这座古城为“长安城”，这更符合她在我心中的地位和感觉，古典与现代交融，优雅和市井并存，传统与朋克碰撞，相互促进，相互融合。如果你对西安城的印象还停留在“八百里秦川尘土飞扬”、“面朝黄土背朝天”的阶段，那你可能真的可以抽空来次西安，看一看当年万国来朝的长安城，看看“九天阊阖开宫殿，万国衣冠拜冕旒”的长安城，看一看多年获得“国家卫生城市”、“国家森林城市”称号的长安城，感受一下当年孟郊“春风得意马蹄疾，一日看尽长安花”的快感，欣赏一下长安城“东风夜放花千树。更吹落、星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞”的夜景……</p>\n<p>西安也不是那么尽善尽美，她也有需要进步、需要努力、需要创新的地方，也请大家给西安城一些时间，我们一定给大家一个你曾经梦中的“唐长安城”……</p>\n<p>在我心里，西安人安土重迁，但又热情好客…希望有机会大家都能来西安转一转。我，在“长安”等着你……</p>\n<h2 id=\"联系我\"><a href=\"#联系我\" class=\"headerlink\" title=\"联系我\"></a>联系我</h2><blockquote>\n<p>QQ邮箱：<a href=\"mailto:changAncgz@163.com\" target=\"_blank\" rel=\"noopener\">changAncgz@163.com</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>一个爱文字，爱音乐的半文艺前端“程序猿”，坐标西安，主要从事前端开发工作，毕业时间不长，目前还在不断积累成长的阶段。</p>\n<p>说到家乡陕西西安，就想多说几句，介绍性的话无需多言，网上太多了……说一个有意思的现象，最近一段时间，西安在”某音App”上貌似很火，听朋友介绍，说是火得有点“丧心病狂”，抱着好奇的心态前一阵子用了几天，里面是全国各地朋友在西安“打卡”的短视频，有很多地方和活动，说真的，我自己都没怎么去过，甚至不知道。作为土生土长的西安人，很自豪也很感激，谢谢大家对西安的喜爱和支持！</p>\n<p>其实，我更喜欢称西安这座古城为“长安城”，这更符合她在我心中的地位和感觉，古典与现代交融，优雅和市井并存，传统与朋克碰撞，相互促进，相互融合。如果你对西安城的印象还停留在“八百里秦川尘土飞扬”、“面朝黄土背朝天”的阶段，那你可能真的可以抽空来次西安，看一看当年万国来朝的长安城，看看“九天阊阖开宫殿，万国衣冠拜冕旒”的长安城，看一看多年获得“国家卫生城市”、“国家森林城市”称号的长安城，感受一下当年孟郊“春风得意马蹄疾，一日看尽长安花”的快感，欣赏一下长安城“东风夜放花千树。更吹落、星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞”的夜景……</p>\n<p>西安也不是那么尽善尽美，她也有需要进步、需要努力、需要创新的地方，也请大家给西安城一些时间，我们一定给大家一个你曾经梦中的“唐长安城”……</p>\n<p>在我心里，西安人安土重迁，但又热情好客…希望有机会大家都能来西安转一转。我，在“长安”等着你……</p>\n<h2 id=\"联系我\"><a href=\"#联系我\" class=\"headerlink\" title=\"联系我\"></a>联系我</h2><blockquote>\n<p>QQ邮箱：<a href=\"mailto:changAncgz@163.com\" target=\"_blank\" rel=\"noopener\">changAncgz@163.com</a></p>\n</blockquote>\n"}],"Post":[{"title":"CreateJS 入门","date":"2018-07-18T08:30:49.000Z","_content":"\n### 什么是CreateJS\n\n> [官网介绍](https://www.createjs.com/) （[中文](http://www.createjs.cc/)）：CreateJS 是一组模块化代码库和工具套件，可以独立工作也可以组合工作，用于通过HTML5技术来在网页上开发丰富的交互式内容。\n\n### 四个核心库\nCreateJS主要包含如下四个类库：\n* `EaselJS` – 简化处理HTML5画布（核心）\n* `TweenJS` – 用来帮助设计H5动画，调整HTML5属性\n* `SoundJS` – 用来简化处理HTML5 audio 音频\n* `PreloadJS` – 帮助管理和协调加载中的一些资源\n\n<!--more-->\n\n**今天，主要来了解一下 `EaselJS` 库**\n\n### EaselJS\n![EaselJS][1]\n\n#### EaselJS 简介\n> `EaselJS` 是一个JavaScript库,用来简单快捷的操作 `HTML5 Canvas` 标签。在创建H5游戏，生成艺术作品、处理其他高级图形化等工作中有着很友好的体验。\n\n#### EaselJS中的一些核心类\n1. `Stage Class` -- 创建舞台\n2. `Text Class` -- 绘制文字\n3. `Graphics Class` -- 绘制图形\n4. `Shape Class` -- 绘制图形\n5. `Bitmap Class` -- 绘制图片\n6. `Ticker Class` -- 定时广播\n7. ......等\n\n### 一些\"栗子\"\n\n#### 绘制文本(Text Class)\n定义一个`<canvas> </canvas>` 画布。\n```\n// HTML:\n<!-- Text Class 文本类-->\n<canvas id=\"demo1\" width=\"650\" height=\"400\"></canvas>\n```\n\n调用`EaselJS`提供的`API - new createjs.Text()`，绘制文字\n```\n// JS\n<script src=\"https://code.createjs.com/1.0.0/createjs.min.js\"></script>\n<script>\n  window.onload = () => {\n    /**\n      * Test Class 文本类 -- demo\n      */\n    let stage1 = new createjs.Stage(\"demo1\");\n\n    let text1 = new createjs.Text(\"Text 1 !\", \"bold 26px Arial\", \"#ff7700\");\n    text1.regX = -50;     // 沿X轴负方向的偏移量\n    text1.regY = -50;     // 沿Y轴负方向的偏移量\n    text1.x = 100;        // 绘制源点 X坐标\n    text1.y = 50;         // 绘制源点 Y坐标\n\n    let text2 = new createjs.Text(\"旋转+XY拉伸！\", \"bold 18px Arial\", \"#ff7700\");\n    text2.x = 50;\n    text2.y = 50;\n    text2.rotation = 50;      // 旋转角度 DEG\n    text2.scaleX = 3;         // X轴放大(拉伸)\n    text2.scaleY = 2;         // X轴放大(拉伸)\n\n    let text3 = new createjs.Text(\"XY轴倾斜\", \"bold 50px Arial\", \"#ff7700\");\n    text3.x = 300;\n    text3.y = 200;\n    text3.skewX = 45;         // X轴倾斜角度 DEG\n    text3.skewY = 20;         // Y周倾斜角度 DEG\n\n    let text4 = new createjs.Text(\"文字shadow\", \"bold 30px Arial\", \"#ff7700\");\n    text4.x = 400;\n    text4.y = 100;\n    text4.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);      // 创建一个shadow实例Object\n\n    stage1.addChild(text1, text2, text3, text4);\n    stage1.update();    // 更新舞台，每次修改操作后需要更新真个舞台才有效果\n  }\n</script>\n```\n\n#### 绘制图形(Graphics Class)\n定义一个`<canvas> </canvas>` 画布。\n```\n// HTML:\n<!-- Graphics Class 文本类-->\n<canvas id=\"demo2\" width=\"650\" height=\"400\"></canvas>\n```\n\n调用`EaselJS`提供的`API - new createjs.Graphics()`，绘制图形\n```\n// JS\n<script src=\"https://code.createjs.com/1.0.0/createjs.min.js\"></script>\n<script>\n  window.onload = () => {\n    /**\n      * Graphics Class 绘图类 -- demo\n      * 用于生成矢量绘图指令\n      */\n    let stage2 = new createjs.Stage('demo2')\n\n    // 画线\n    let g = new createjs.Graphics();\n    /* 同一个 Graphics 实例， 可以多次绘制，以下线段、折线都是用 g 实例绘制的*/\n    g.setStrokeStyle(10).beginStroke(\"#d23c4f\").moveTo(400,10).lineTo(600,100)\n    // 简写形式\n    g.ss(20).s('#fafa35').mt(400,100).lt(400,260)\n    // 多点折线的简写形式\n    g.ss(1).s('#000').mt(600,400).lt(600, 200).lt(400,300).lt(500, 550)\n\n    // Graphics 实例不能直接 addChild() 到舞台 stage 中，实例化为 Shape 实例后才可以\n    let line = new createjs.Shape(g)\n\n    // 圆\n    let g1 = new createjs.Graphics();\n    g1.setStrokeStyle(1);         // 描边\n    g1.beginStroke(\"#000000\");    // 描边颜色\n    g1.beginFill(\"red\");          // 图形填充\n    g1.drawCircle(0,0,100);        // 绘制 (X, X, R)\n    let c1 = new createjs.Shape(g1)     // 实例化Shape对象\n\n    // 矩形\n    let g2 = new createjs.Graphics().beginStroke(\"red\").beginFill(\"blue\").drawRect(150, 0, 200, 100);     // X, Y, W, H\n    let c2 = new createjs.Shape(g2)\n\n    // 命令对象\n    let g3 = new createjs.Graphics();\n    // 每个图形接口调用后会生成一个命令对象，可以使用.command访问，它保存对已创建或附加的最后一个命令的引用\n    let fillCommand = g3.beginFill(\"green\").command;\n    g3.drawCircle(200,200,50);        // 绘制 (X, X, R)\n    let c3 = new createjs.Shape(g3);\n\n    // 一些异步操作后，更新填充样式/颜色:\n    setTimeout(() => {\n      fillCommand.style = \"gray\";\n      stage2.update();                // 不更新舞台，不会重新渲染\n    }, 2000);\n\n    // 点击事件\n    //c3.addEventListener('click', () => {\n    // alert(123)\n    // fillCommand.style = \"gray\";\n    // stage2.update();          // 不更新舞台，不会重新渲染\n    //})\n  \n    stage2.addChild(c1, c2, c3, line);\n    stage2.update();\n  }\n</script>\n```\n\n#### 绘制图像imgaes(Bitmap Class)\n定义一个`<canvas> </canvas>` 画布。\n```\n// HTML:\n<!-- Bitmap Class 图像类-->\n<canvas id=\"demo3\" width=\"650\" height=\"400\"></canvas>\n```\n\n调用`EaselJS`提供的`API - new createjs.Bitmap()`，绘制图像\n```\n// JS\n<script src=\"https://code.createjs.com/1.0.0/createjs.min.js\"></script>\n<script>\n  window.onload = () => {\n    /**\n      * bitmap Class 图像类\n      * 用于在画布显示列表中渲染图像\n      */\n    let stage3 = new createjs.Stage('demo3')\n\n    // 渲染图片\n    let bitmap = new createjs.Bitmap('./assets/img/hill1.png')\n    bitmap.alpha = 0.6      // 透明度\n    bitmap.cursor = 'help'\n    // 创建一个shadow实例Object(color, offsetX, offsetY, blur)\n    bitmap.shadow = new createjs.Shadow(\"#97c89e\", 20, 10, 20);\n\n    // 给图片添加遮罩\n    let bitmap2 = new createjs.Bitmap('./assets/img/avatar.jpg')\n    bitmap2.x = 400;        // 图片绘制的起始点X坐标\n    bitmap2.y = 0;          // 图片绘制的起始点Y坐标\n    //遮罩图形\n    let shape = new createjs.Shape();\n    shape.graphics.beginFill('#000').drawCircle(0, 0, 100);\n    shape.x = 500;          // 圆心X坐标\n    shape.y = 100;          // 圆心Y坐标\n    bitmap2.mask = shape;   //给图片bg添加遮罩\n\n    // 绘制一片草地\n    let groundBg = new createjs.Bitmap(\"./assets/img/ground.png\").image;\n    let ground = new createjs.Shape();\n    w = stage3.canvas.width;      // 650\n    h = stage3.canvas.height;     // 400\n    stage3.addChild(ground)\n\n    stage3.addChild(bitmap, bitmap2)\n    stage3.update()       // 此处刷新无效\n\n    // 监听定时广播\n    createjs.Ticker.timingMode = createjs.Ticker.RAF;\n    createjs.Ticker.addEventListener('tick',(event) => {\n      ground.tileW = groundBg.width;\n      ground.y = h - groundBg.height;\n      ground.graphics.beginBitmapFill(groundBg).drawRect(0, 0, w, groundBg.height);\n      ground.cache(0, 0, w, groundBg.height);\n        \n      stage3.update()\n    });\n  }\n</script>\n```\n\n### 一个小游戏(来自官网Demo) Running man\n#### 定义一个`<canvas></canvas>`画布\n```\n<!-- HTML -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>running-man game</title>\n</head>\n<body>\n  <canvas id=\"demoCanvas\" width=\"960\" height=\"400\"></canvas>\n  </body>\n</html>\n```\n#### JS代码\n这里就不写具体思路分析了，代码不长，注释也很详细，方便理解，直接上代码。\n\n```\n// JS\n<script src=\"https://code.createjs.com/1.0.0/createjs.min.js\"></script>\n<script>\n  window.onload = () => {\n    let stage, w, h, loader;\n    let sky, grant, ground, hill, hill2;\n\n    function init() {\n      stage = new createjs.StageGL(\"demoCanvas\");\n\n      // 获取画布的宽和高，后面计算使用\n      w = stage.canvas.width;     // 960\n      h = stage.canvas.height;    // 400\n\n      // 定义静态资源\n      let manifest = [{\n        src: \"spritesheet_grant.png\", id: \"grant\"}, {     // 人物动作雪碧图\n        src: \"sky.png\", id: \"sky\"}, {           // 天空\n        src: \"ground.png\", id: \"ground\"}, {     // 地面\n        src: \"hill1.png\", id: \"hill\"}, {        // 远山\n        src: \"hill2.png\", id: \"hill2\"           // 近山\n      }];     // Array, String, Object\n      \n      // 创建资源加载队列\n      // (Boolean) 用XHR还是用HTML标签来加载\n      // 如果是false的时候，就用标签来加载，如果不能用标签的话，就用XHR来加载。默认是true，用XHR来加载。\n      loader = new createjs.LoadQueue(false);\n      // 添加\"资源加载完成\"事件\n      loader.addEventListener(\"complete\", handleComplete);\n      // 加载资源\n      loader.loadManifest(manifest, true, \"./assets/img/\");  // (manifest, loadNow, basePath)\n    }\n\n    /**\n      * 静态资源加载完成，处理函数\n      */\n    function handleComplete() {\n      // 渲染天空\n      sky = new createjs.Shape();\n      sky.graphics.beginBitmapFill(loader.getResult(\"sky\")).drawRect(0, 0, w, h);\n      // 定义缓存区域(整个天空的区域))\n      sky.cache(0, 0, w, h);\n\n      // 渲染地面\n      let groundImg = loader.getResult(\"ground\");\n      ground = new createjs.Shape();\n      // 注意：drawRect()宽度要躲绘制一个单位\n      ground.graphics.beginBitmapFill(groundImg).drawRect(0, 0, w + groundImg.width, groundImg.height);\n      ground.tileW = groundImg.width;\n      ground.y = h - groundImg.height;\n      // 缓存区域(地面的区域)\n      ground.cache(0, 0, w + groundImg.width, groundImg.height);\n\n      // 随机渲染远处山脉\n      hill = new createjs.Bitmap(loader.getResult(\"hill\"));\n      // 设置图像转换\n      // setTransform([x=0], [y=0], [scaleX=1], [scaleY=1], [rotation=0], [skewX=0], [skewY=0], [regX=0], [regY=0])\n      hill.setTransform(Math.random() * w, h - hill.image.height * 4 - groundImg.height, 4, 4);\n      hill.alpha = 0.5;     // 设置透明度\n\n      // 随机渲染近处山脉\n      hill2 = new createjs.Bitmap(loader.getResult(\"hill2\"));\n      hill2.setTransform(Math.random() * w, h - hill2.image.height * 3 - groundImg.height, 3, 3);\n\n      // 创建雪碧图动画\n      let spriteSheet = new createjs.SpriteSheet({\n        framerate: 30,      // 帧率 FPS\n        \"images\": [loader.getResult(\"grant\")],      // 雪碧图原图\n        \"frames\": {\"width\": 165, \"height\": 292, \"count\": 64, \"regX\": 82, \"regY\": 0},  // 初始化\n        // 定义动画\n        \"animations\": {\n          \"run\": [0, 25, \"run\"],     // name: [开始索引, 结束索引, '下一个动画名称', 倍率]\n          \"jump\": [26, 63, \"run\"]\n        }\n      });\n\n      // 绘制动画\n      grant = new createjs.Sprite(spriteSheet, \"run\");\n      // 处理雪碧图人物下方空白\n      grant.y = 35;\n\n      // 将生成的所有内容渲染至舞台\n      stage.addChild(sky, ground, hill, hill2, grant);\n\n      // 监听舞台上的鼠标点击事件\n      stage.addEventListener(\"stagemousedown\", () => {\n        // 跳转播放 jump 动画\n        grant.gotoAndPlay(\"jump\");\n      });\n\n      createjs.Ticker.timingMode = createjs.Ticker.RAF;     // RAF / RAF_SYNCHED / TIMEOUT\n      createjs.Ticker.addEventListener(\"tick\", tick);\n    }\n\n\n    /**\n      * 定时器-重绘舞台\n      */\n    function tick(event) {\n      // event.delta -- 上一次tick到当前tick的ms\n      let deltaS = event.delta / 1000;\n      // 雪碧图人物移动距离\n      let position = grant.x + 150 * deltaS;\n\n      // getBounds() -- 返回当前帧相对于雪碧图原点的边界\n      let grantW = grant.getBounds().width * grant.scaleX;\n      grant.x = (position >= w + grantW) ? -grantW : position;\n\n      ground.x = (ground.x - deltaS * 150) % ground.tileW;\n\n      // 从右至左移动山脉\n      hill.x = (hill.x - deltaS * 30);\n      // 如果山脉从左侧离开屏幕\n      if (hill.x + hill.image.width * hill.scaleX <= 0) {\n        hill.x = w;     // 重置回屏幕最右侧\n      }\n\n      // 处理如上\n      hill2.x = (hill2.x - deltaS * 45);\n      if (hill2.x + hill2.image.width * hill2.scaleX <= 0) {\n        hill2.x = w;\n      }\n\n      stage.update();\n    }\n\n    // 程序主入口-初始化\n    init()\n  }\n</script>\n```\n### 完整代码\n> 示例demo的GitHub地址：[完整代码][2]\n\n<!-- 图片链接定义-->\n[1]: /medias/article/coding/create-js/easeljs.jpg\n[2]: https://github.com/webCaolixin/study-notes/tree/master/create-js","source":"_posts/create-js.md","raw":"---\ntitle: CreateJS 入门\ncategories:\n- 编程\n- 前端\ntags: Create.JS\ndate: 2018-07-18 16:30:49\n---\n\n### 什么是CreateJS\n\n> [官网介绍](https://www.createjs.com/) （[中文](http://www.createjs.cc/)）：CreateJS 是一组模块化代码库和工具套件，可以独立工作也可以组合工作，用于通过HTML5技术来在网页上开发丰富的交互式内容。\n\n### 四个核心库\nCreateJS主要包含如下四个类库：\n* `EaselJS` – 简化处理HTML5画布（核心）\n* `TweenJS` – 用来帮助设计H5动画，调整HTML5属性\n* `SoundJS` – 用来简化处理HTML5 audio 音频\n* `PreloadJS` – 帮助管理和协调加载中的一些资源\n\n<!--more-->\n\n**今天，主要来了解一下 `EaselJS` 库**\n\n### EaselJS\n![EaselJS][1]\n\n#### EaselJS 简介\n> `EaselJS` 是一个JavaScript库,用来简单快捷的操作 `HTML5 Canvas` 标签。在创建H5游戏，生成艺术作品、处理其他高级图形化等工作中有着很友好的体验。\n\n#### EaselJS中的一些核心类\n1. `Stage Class` -- 创建舞台\n2. `Text Class` -- 绘制文字\n3. `Graphics Class` -- 绘制图形\n4. `Shape Class` -- 绘制图形\n5. `Bitmap Class` -- 绘制图片\n6. `Ticker Class` -- 定时广播\n7. ......等\n\n### 一些\"栗子\"\n\n#### 绘制文本(Text Class)\n定义一个`<canvas> </canvas>` 画布。\n```\n// HTML:\n<!-- Text Class 文本类-->\n<canvas id=\"demo1\" width=\"650\" height=\"400\"></canvas>\n```\n\n调用`EaselJS`提供的`API - new createjs.Text()`，绘制文字\n```\n// JS\n<script src=\"https://code.createjs.com/1.0.0/createjs.min.js\"></script>\n<script>\n  window.onload = () => {\n    /**\n      * Test Class 文本类 -- demo\n      */\n    let stage1 = new createjs.Stage(\"demo1\");\n\n    let text1 = new createjs.Text(\"Text 1 !\", \"bold 26px Arial\", \"#ff7700\");\n    text1.regX = -50;     // 沿X轴负方向的偏移量\n    text1.regY = -50;     // 沿Y轴负方向的偏移量\n    text1.x = 100;        // 绘制源点 X坐标\n    text1.y = 50;         // 绘制源点 Y坐标\n\n    let text2 = new createjs.Text(\"旋转+XY拉伸！\", \"bold 18px Arial\", \"#ff7700\");\n    text2.x = 50;\n    text2.y = 50;\n    text2.rotation = 50;      // 旋转角度 DEG\n    text2.scaleX = 3;         // X轴放大(拉伸)\n    text2.scaleY = 2;         // X轴放大(拉伸)\n\n    let text3 = new createjs.Text(\"XY轴倾斜\", \"bold 50px Arial\", \"#ff7700\");\n    text3.x = 300;\n    text3.y = 200;\n    text3.skewX = 45;         // X轴倾斜角度 DEG\n    text3.skewY = 20;         // Y周倾斜角度 DEG\n\n    let text4 = new createjs.Text(\"文字shadow\", \"bold 30px Arial\", \"#ff7700\");\n    text4.x = 400;\n    text4.y = 100;\n    text4.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);      // 创建一个shadow实例Object\n\n    stage1.addChild(text1, text2, text3, text4);\n    stage1.update();    // 更新舞台，每次修改操作后需要更新真个舞台才有效果\n  }\n</script>\n```\n\n#### 绘制图形(Graphics Class)\n定义一个`<canvas> </canvas>` 画布。\n```\n// HTML:\n<!-- Graphics Class 文本类-->\n<canvas id=\"demo2\" width=\"650\" height=\"400\"></canvas>\n```\n\n调用`EaselJS`提供的`API - new createjs.Graphics()`，绘制图形\n```\n// JS\n<script src=\"https://code.createjs.com/1.0.0/createjs.min.js\"></script>\n<script>\n  window.onload = () => {\n    /**\n      * Graphics Class 绘图类 -- demo\n      * 用于生成矢量绘图指令\n      */\n    let stage2 = new createjs.Stage('demo2')\n\n    // 画线\n    let g = new createjs.Graphics();\n    /* 同一个 Graphics 实例， 可以多次绘制，以下线段、折线都是用 g 实例绘制的*/\n    g.setStrokeStyle(10).beginStroke(\"#d23c4f\").moveTo(400,10).lineTo(600,100)\n    // 简写形式\n    g.ss(20).s('#fafa35').mt(400,100).lt(400,260)\n    // 多点折线的简写形式\n    g.ss(1).s('#000').mt(600,400).lt(600, 200).lt(400,300).lt(500, 550)\n\n    // Graphics 实例不能直接 addChild() 到舞台 stage 中，实例化为 Shape 实例后才可以\n    let line = new createjs.Shape(g)\n\n    // 圆\n    let g1 = new createjs.Graphics();\n    g1.setStrokeStyle(1);         // 描边\n    g1.beginStroke(\"#000000\");    // 描边颜色\n    g1.beginFill(\"red\");          // 图形填充\n    g1.drawCircle(0,0,100);        // 绘制 (X, X, R)\n    let c1 = new createjs.Shape(g1)     // 实例化Shape对象\n\n    // 矩形\n    let g2 = new createjs.Graphics().beginStroke(\"red\").beginFill(\"blue\").drawRect(150, 0, 200, 100);     // X, Y, W, H\n    let c2 = new createjs.Shape(g2)\n\n    // 命令对象\n    let g3 = new createjs.Graphics();\n    // 每个图形接口调用后会生成一个命令对象，可以使用.command访问，它保存对已创建或附加的最后一个命令的引用\n    let fillCommand = g3.beginFill(\"green\").command;\n    g3.drawCircle(200,200,50);        // 绘制 (X, X, R)\n    let c3 = new createjs.Shape(g3);\n\n    // 一些异步操作后，更新填充样式/颜色:\n    setTimeout(() => {\n      fillCommand.style = \"gray\";\n      stage2.update();                // 不更新舞台，不会重新渲染\n    }, 2000);\n\n    // 点击事件\n    //c3.addEventListener('click', () => {\n    // alert(123)\n    // fillCommand.style = \"gray\";\n    // stage2.update();          // 不更新舞台，不会重新渲染\n    //})\n  \n    stage2.addChild(c1, c2, c3, line);\n    stage2.update();\n  }\n</script>\n```\n\n#### 绘制图像imgaes(Bitmap Class)\n定义一个`<canvas> </canvas>` 画布。\n```\n// HTML:\n<!-- Bitmap Class 图像类-->\n<canvas id=\"demo3\" width=\"650\" height=\"400\"></canvas>\n```\n\n调用`EaselJS`提供的`API - new createjs.Bitmap()`，绘制图像\n```\n// JS\n<script src=\"https://code.createjs.com/1.0.0/createjs.min.js\"></script>\n<script>\n  window.onload = () => {\n    /**\n      * bitmap Class 图像类\n      * 用于在画布显示列表中渲染图像\n      */\n    let stage3 = new createjs.Stage('demo3')\n\n    // 渲染图片\n    let bitmap = new createjs.Bitmap('./assets/img/hill1.png')\n    bitmap.alpha = 0.6      // 透明度\n    bitmap.cursor = 'help'\n    // 创建一个shadow实例Object(color, offsetX, offsetY, blur)\n    bitmap.shadow = new createjs.Shadow(\"#97c89e\", 20, 10, 20);\n\n    // 给图片添加遮罩\n    let bitmap2 = new createjs.Bitmap('./assets/img/avatar.jpg')\n    bitmap2.x = 400;        // 图片绘制的起始点X坐标\n    bitmap2.y = 0;          // 图片绘制的起始点Y坐标\n    //遮罩图形\n    let shape = new createjs.Shape();\n    shape.graphics.beginFill('#000').drawCircle(0, 0, 100);\n    shape.x = 500;          // 圆心X坐标\n    shape.y = 100;          // 圆心Y坐标\n    bitmap2.mask = shape;   //给图片bg添加遮罩\n\n    // 绘制一片草地\n    let groundBg = new createjs.Bitmap(\"./assets/img/ground.png\").image;\n    let ground = new createjs.Shape();\n    w = stage3.canvas.width;      // 650\n    h = stage3.canvas.height;     // 400\n    stage3.addChild(ground)\n\n    stage3.addChild(bitmap, bitmap2)\n    stage3.update()       // 此处刷新无效\n\n    // 监听定时广播\n    createjs.Ticker.timingMode = createjs.Ticker.RAF;\n    createjs.Ticker.addEventListener('tick',(event) => {\n      ground.tileW = groundBg.width;\n      ground.y = h - groundBg.height;\n      ground.graphics.beginBitmapFill(groundBg).drawRect(0, 0, w, groundBg.height);\n      ground.cache(0, 0, w, groundBg.height);\n        \n      stage3.update()\n    });\n  }\n</script>\n```\n\n### 一个小游戏(来自官网Demo) Running man\n#### 定义一个`<canvas></canvas>`画布\n```\n<!-- HTML -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>running-man game</title>\n</head>\n<body>\n  <canvas id=\"demoCanvas\" width=\"960\" height=\"400\"></canvas>\n  </body>\n</html>\n```\n#### JS代码\n这里就不写具体思路分析了，代码不长，注释也很详细，方便理解，直接上代码。\n\n```\n// JS\n<script src=\"https://code.createjs.com/1.0.0/createjs.min.js\"></script>\n<script>\n  window.onload = () => {\n    let stage, w, h, loader;\n    let sky, grant, ground, hill, hill2;\n\n    function init() {\n      stage = new createjs.StageGL(\"demoCanvas\");\n\n      // 获取画布的宽和高，后面计算使用\n      w = stage.canvas.width;     // 960\n      h = stage.canvas.height;    // 400\n\n      // 定义静态资源\n      let manifest = [{\n        src: \"spritesheet_grant.png\", id: \"grant\"}, {     // 人物动作雪碧图\n        src: \"sky.png\", id: \"sky\"}, {           // 天空\n        src: \"ground.png\", id: \"ground\"}, {     // 地面\n        src: \"hill1.png\", id: \"hill\"}, {        // 远山\n        src: \"hill2.png\", id: \"hill2\"           // 近山\n      }];     // Array, String, Object\n      \n      // 创建资源加载队列\n      // (Boolean) 用XHR还是用HTML标签来加载\n      // 如果是false的时候，就用标签来加载，如果不能用标签的话，就用XHR来加载。默认是true，用XHR来加载。\n      loader = new createjs.LoadQueue(false);\n      // 添加\"资源加载完成\"事件\n      loader.addEventListener(\"complete\", handleComplete);\n      // 加载资源\n      loader.loadManifest(manifest, true, \"./assets/img/\");  // (manifest, loadNow, basePath)\n    }\n\n    /**\n      * 静态资源加载完成，处理函数\n      */\n    function handleComplete() {\n      // 渲染天空\n      sky = new createjs.Shape();\n      sky.graphics.beginBitmapFill(loader.getResult(\"sky\")).drawRect(0, 0, w, h);\n      // 定义缓存区域(整个天空的区域))\n      sky.cache(0, 0, w, h);\n\n      // 渲染地面\n      let groundImg = loader.getResult(\"ground\");\n      ground = new createjs.Shape();\n      // 注意：drawRect()宽度要躲绘制一个单位\n      ground.graphics.beginBitmapFill(groundImg).drawRect(0, 0, w + groundImg.width, groundImg.height);\n      ground.tileW = groundImg.width;\n      ground.y = h - groundImg.height;\n      // 缓存区域(地面的区域)\n      ground.cache(0, 0, w + groundImg.width, groundImg.height);\n\n      // 随机渲染远处山脉\n      hill = new createjs.Bitmap(loader.getResult(\"hill\"));\n      // 设置图像转换\n      // setTransform([x=0], [y=0], [scaleX=1], [scaleY=1], [rotation=0], [skewX=0], [skewY=0], [regX=0], [regY=0])\n      hill.setTransform(Math.random() * w, h - hill.image.height * 4 - groundImg.height, 4, 4);\n      hill.alpha = 0.5;     // 设置透明度\n\n      // 随机渲染近处山脉\n      hill2 = new createjs.Bitmap(loader.getResult(\"hill2\"));\n      hill2.setTransform(Math.random() * w, h - hill2.image.height * 3 - groundImg.height, 3, 3);\n\n      // 创建雪碧图动画\n      let spriteSheet = new createjs.SpriteSheet({\n        framerate: 30,      // 帧率 FPS\n        \"images\": [loader.getResult(\"grant\")],      // 雪碧图原图\n        \"frames\": {\"width\": 165, \"height\": 292, \"count\": 64, \"regX\": 82, \"regY\": 0},  // 初始化\n        // 定义动画\n        \"animations\": {\n          \"run\": [0, 25, \"run\"],     // name: [开始索引, 结束索引, '下一个动画名称', 倍率]\n          \"jump\": [26, 63, \"run\"]\n        }\n      });\n\n      // 绘制动画\n      grant = new createjs.Sprite(spriteSheet, \"run\");\n      // 处理雪碧图人物下方空白\n      grant.y = 35;\n\n      // 将生成的所有内容渲染至舞台\n      stage.addChild(sky, ground, hill, hill2, grant);\n\n      // 监听舞台上的鼠标点击事件\n      stage.addEventListener(\"stagemousedown\", () => {\n        // 跳转播放 jump 动画\n        grant.gotoAndPlay(\"jump\");\n      });\n\n      createjs.Ticker.timingMode = createjs.Ticker.RAF;     // RAF / RAF_SYNCHED / TIMEOUT\n      createjs.Ticker.addEventListener(\"tick\", tick);\n    }\n\n\n    /**\n      * 定时器-重绘舞台\n      */\n    function tick(event) {\n      // event.delta -- 上一次tick到当前tick的ms\n      let deltaS = event.delta / 1000;\n      // 雪碧图人物移动距离\n      let position = grant.x + 150 * deltaS;\n\n      // getBounds() -- 返回当前帧相对于雪碧图原点的边界\n      let grantW = grant.getBounds().width * grant.scaleX;\n      grant.x = (position >= w + grantW) ? -grantW : position;\n\n      ground.x = (ground.x - deltaS * 150) % ground.tileW;\n\n      // 从右至左移动山脉\n      hill.x = (hill.x - deltaS * 30);\n      // 如果山脉从左侧离开屏幕\n      if (hill.x + hill.image.width * hill.scaleX <= 0) {\n        hill.x = w;     // 重置回屏幕最右侧\n      }\n\n      // 处理如上\n      hill2.x = (hill2.x - deltaS * 45);\n      if (hill2.x + hill2.image.width * hill2.scaleX <= 0) {\n        hill2.x = w;\n      }\n\n      stage.update();\n    }\n\n    // 程序主入口-初始化\n    init()\n  }\n</script>\n```\n### 完整代码\n> 示例demo的GitHub地址：[完整代码][2]\n\n<!-- 图片链接定义-->\n[1]: /medias/article/coding/create-js/easeljs.jpg\n[2]: https://github.com/webCaolixin/study-notes/tree/master/create-js","slug":"create-js","published":1,"updated":"2018-09-26T10:02:11.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vf80001ogsmtoc532ro","content":"<h3 id=\"什么是CreateJS\"><a href=\"#什么是CreateJS\" class=\"headerlink\" title=\"什么是CreateJS\"></a>什么是CreateJS</h3><blockquote>\n<p><a href=\"https://www.createjs.com/\" target=\"_blank\" rel=\"noopener\">官网介绍</a> （<a href=\"http://www.createjs.cc/\" target=\"_blank\" rel=\"noopener\">中文</a>）：CreateJS 是一组模块化代码库和工具套件，可以独立工作也可以组合工作，用于通过HTML5技术来在网页上开发丰富的交互式内容。</p>\n</blockquote>\n<h3 id=\"四个核心库\"><a href=\"#四个核心库\" class=\"headerlink\" title=\"四个核心库\"></a>四个核心库</h3><p>CreateJS主要包含如下四个类库：</p>\n<ul>\n<li><code>EaselJS</code> – 简化处理HTML5画布（核心）</li>\n<li><code>TweenJS</code> – 用来帮助设计H5动画，调整HTML5属性</li>\n<li><code>SoundJS</code> – 用来简化处理HTML5 audio 音频</li>\n<li><code>PreloadJS</code> – 帮助管理和协调加载中的一些资源</li>\n</ul>\n<a id=\"more\"></a>\n<p><strong>今天，主要来了解一下 <code>EaselJS</code> 库</strong></p>\n<h3 id=\"EaselJS\"><a href=\"#EaselJS\" class=\"headerlink\" title=\"EaselJS\"></a>EaselJS</h3><p><img src=\"/medias/article/coding/create-js/easeljs.jpg\" alt=\"EaselJS\"></p>\n<h4 id=\"EaselJS-简介\"><a href=\"#EaselJS-简介\" class=\"headerlink\" title=\"EaselJS 简介\"></a>EaselJS 简介</h4><blockquote>\n<p><code>EaselJS</code> 是一个JavaScript库,用来简单快捷的操作 <code>HTML5 Canvas</code> 标签。在创建H5游戏，生成艺术作品、处理其他高级图形化等工作中有着很友好的体验。</p>\n</blockquote>\n<h4 id=\"EaselJS中的一些核心类\"><a href=\"#EaselJS中的一些核心类\" class=\"headerlink\" title=\"EaselJS中的一些核心类\"></a>EaselJS中的一些核心类</h4><ol>\n<li><code>Stage Class</code> – 创建舞台</li>\n<li><code>Text Class</code> – 绘制文字</li>\n<li><code>Graphics Class</code> – 绘制图形</li>\n<li><code>Shape Class</code> – 绘制图形</li>\n<li><code>Bitmap Class</code> – 绘制图片</li>\n<li><code>Ticker Class</code> – 定时广播</li>\n<li>……等</li>\n</ol>\n<h3 id=\"一些”栗子”\"><a href=\"#一些”栗子”\" class=\"headerlink\" title=\"一些”栗子”\"></a>一些”栗子”</h3><h4 id=\"绘制文本-Text-Class\"><a href=\"#绘制文本-Text-Class\" class=\"headerlink\" title=\"绘制文本(Text Class)\"></a>绘制文本(Text Class)</h4><p>定义一个<code>&lt;canvas&gt; &lt;/canvas&gt;</code> 画布。</p>\n<pre><code>// HTML:\n&lt;!-- Text Class 文本类--&gt;\n&lt;canvas id=&quot;demo1&quot; width=&quot;650&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;\n</code></pre><p>调用<code>EaselJS</code>提供的<code>API - new createjs.Text()</code>，绘制文字</p>\n<pre><code>// JS\n&lt;script src=&quot;https://code.createjs.com/1.0.0/createjs.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.onload = () =&gt; {\n    /**\n      * Test Class 文本类 -- demo\n      */\n    let stage1 = new createjs.Stage(&quot;demo1&quot;);\n\n    let text1 = new createjs.Text(&quot;Text 1 !&quot;, &quot;bold 26px Arial&quot;, &quot;#ff7700&quot;);\n    text1.regX = -50;     // 沿X轴负方向的偏移量\n    text1.regY = -50;     // 沿Y轴负方向的偏移量\n    text1.x = 100;        // 绘制源点 X坐标\n    text1.y = 50;         // 绘制源点 Y坐标\n\n    let text2 = new createjs.Text(&quot;旋转+XY拉伸！&quot;, &quot;bold 18px Arial&quot;, &quot;#ff7700&quot;);\n    text2.x = 50;\n    text2.y = 50;\n    text2.rotation = 50;      // 旋转角度 DEG\n    text2.scaleX = 3;         // X轴放大(拉伸)\n    text2.scaleY = 2;         // X轴放大(拉伸)\n\n    let text3 = new createjs.Text(&quot;XY轴倾斜&quot;, &quot;bold 50px Arial&quot;, &quot;#ff7700&quot;);\n    text3.x = 300;\n    text3.y = 200;\n    text3.skewX = 45;         // X轴倾斜角度 DEG\n    text3.skewY = 20;         // Y周倾斜角度 DEG\n\n    let text4 = new createjs.Text(&quot;文字shadow&quot;, &quot;bold 30px Arial&quot;, &quot;#ff7700&quot;);\n    text4.x = 400;\n    text4.y = 100;\n    text4.shadow = new createjs.Shadow(&quot;#000000&quot;, 5, 5, 10);      // 创建一个shadow实例Object\n\n    stage1.addChild(text1, text2, text3, text4);\n    stage1.update();    // 更新舞台，每次修改操作后需要更新真个舞台才有效果\n  }\n&lt;/script&gt;\n</code></pre><h4 id=\"绘制图形-Graphics-Class\"><a href=\"#绘制图形-Graphics-Class\" class=\"headerlink\" title=\"绘制图形(Graphics Class)\"></a>绘制图形(Graphics Class)</h4><p>定义一个<code>&lt;canvas&gt; &lt;/canvas&gt;</code> 画布。</p>\n<pre><code>// HTML:\n&lt;!-- Graphics Class 文本类--&gt;\n&lt;canvas id=&quot;demo2&quot; width=&quot;650&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;\n</code></pre><p>调用<code>EaselJS</code>提供的<code>API - new createjs.Graphics()</code>，绘制图形</p>\n<pre><code>// JS\n&lt;script src=&quot;https://code.createjs.com/1.0.0/createjs.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.onload = () =&gt; {\n    /**\n      * Graphics Class 绘图类 -- demo\n      * 用于生成矢量绘图指令\n      */\n    let stage2 = new createjs.Stage(&#39;demo2&#39;)\n\n    // 画线\n    let g = new createjs.Graphics();\n    /* 同一个 Graphics 实例， 可以多次绘制，以下线段、折线都是用 g 实例绘制的*/\n    g.setStrokeStyle(10).beginStroke(&quot;#d23c4f&quot;).moveTo(400,10).lineTo(600,100)\n    // 简写形式\n    g.ss(20).s(&#39;#fafa35&#39;).mt(400,100).lt(400,260)\n    // 多点折线的简写形式\n    g.ss(1).s(&#39;#000&#39;).mt(600,400).lt(600, 200).lt(400,300).lt(500, 550)\n\n    // Graphics 实例不能直接 addChild() 到舞台 stage 中，实例化为 Shape 实例后才可以\n    let line = new createjs.Shape(g)\n\n    // 圆\n    let g1 = new createjs.Graphics();\n    g1.setStrokeStyle(1);         // 描边\n    g1.beginStroke(&quot;#000000&quot;);    // 描边颜色\n    g1.beginFill(&quot;red&quot;);          // 图形填充\n    g1.drawCircle(0,0,100);        // 绘制 (X, X, R)\n    let c1 = new createjs.Shape(g1)     // 实例化Shape对象\n\n    // 矩形\n    let g2 = new createjs.Graphics().beginStroke(&quot;red&quot;).beginFill(&quot;blue&quot;).drawRect(150, 0, 200, 100);     // X, Y, W, H\n    let c2 = new createjs.Shape(g2)\n\n    // 命令对象\n    let g3 = new createjs.Graphics();\n    // 每个图形接口调用后会生成一个命令对象，可以使用.command访问，它保存对已创建或附加的最后一个命令的引用\n    let fillCommand = g3.beginFill(&quot;green&quot;).command;\n    g3.drawCircle(200,200,50);        // 绘制 (X, X, R)\n    let c3 = new createjs.Shape(g3);\n\n    // 一些异步操作后，更新填充样式/颜色:\n    setTimeout(() =&gt; {\n      fillCommand.style = &quot;gray&quot;;\n      stage2.update();                // 不更新舞台，不会重新渲染\n    }, 2000);\n\n    // 点击事件\n    //c3.addEventListener(&#39;click&#39;, () =&gt; {\n    // alert(123)\n    // fillCommand.style = &quot;gray&quot;;\n    // stage2.update();          // 不更新舞台，不会重新渲染\n    //})\n\n    stage2.addChild(c1, c2, c3, line);\n    stage2.update();\n  }\n&lt;/script&gt;\n</code></pre><h4 id=\"绘制图像imgaes-Bitmap-Class\"><a href=\"#绘制图像imgaes-Bitmap-Class\" class=\"headerlink\" title=\"绘制图像imgaes(Bitmap Class)\"></a>绘制图像imgaes(Bitmap Class)</h4><p>定义一个<code>&lt;canvas&gt; &lt;/canvas&gt;</code> 画布。</p>\n<pre><code>// HTML:\n&lt;!-- Bitmap Class 图像类--&gt;\n&lt;canvas id=&quot;demo3&quot; width=&quot;650&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;\n</code></pre><p>调用<code>EaselJS</code>提供的<code>API - new createjs.Bitmap()</code>，绘制图像</p>\n<pre><code>// JS\n&lt;script src=&quot;https://code.createjs.com/1.0.0/createjs.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.onload = () =&gt; {\n    /**\n      * bitmap Class 图像类\n      * 用于在画布显示列表中渲染图像\n      */\n    let stage3 = new createjs.Stage(&#39;demo3&#39;)\n\n    // 渲染图片\n    let bitmap = new createjs.Bitmap(&#39;./assets/img/hill1.png&#39;)\n    bitmap.alpha = 0.6      // 透明度\n    bitmap.cursor = &#39;help&#39;\n    // 创建一个shadow实例Object(color, offsetX, offsetY, blur)\n    bitmap.shadow = new createjs.Shadow(&quot;#97c89e&quot;, 20, 10, 20);\n\n    // 给图片添加遮罩\n    let bitmap2 = new createjs.Bitmap(&#39;./assets/img/avatar.jpg&#39;)\n    bitmap2.x = 400;        // 图片绘制的起始点X坐标\n    bitmap2.y = 0;          // 图片绘制的起始点Y坐标\n    //遮罩图形\n    let shape = new createjs.Shape();\n    shape.graphics.beginFill(&#39;#000&#39;).drawCircle(0, 0, 100);\n    shape.x = 500;          // 圆心X坐标\n    shape.y = 100;          // 圆心Y坐标\n    bitmap2.mask = shape;   //给图片bg添加遮罩\n\n    // 绘制一片草地\n    let groundBg = new createjs.Bitmap(&quot;./assets/img/ground.png&quot;).image;\n    let ground = new createjs.Shape();\n    w = stage3.canvas.width;      // 650\n    h = stage3.canvas.height;     // 400\n    stage3.addChild(ground)\n\n    stage3.addChild(bitmap, bitmap2)\n    stage3.update()       // 此处刷新无效\n\n    // 监听定时广播\n    createjs.Ticker.timingMode = createjs.Ticker.RAF;\n    createjs.Ticker.addEventListener(&#39;tick&#39;,(event) =&gt; {\n      ground.tileW = groundBg.width;\n      ground.y = h - groundBg.height;\n      ground.graphics.beginBitmapFill(groundBg).drawRect(0, 0, w, groundBg.height);\n      ground.cache(0, 0, w, groundBg.height);\n\n      stage3.update()\n    });\n  }\n&lt;/script&gt;\n</code></pre><h3 id=\"一个小游戏-来自官网Demo-Running-man\"><a href=\"#一个小游戏-来自官网Demo-Running-man\" class=\"headerlink\" title=\"一个小游戏(来自官网Demo) Running man\"></a>一个小游戏(来自官网Demo) Running man</h3><h4 id=\"定义一个-lt-canvas-gt-lt-canvas-gt-画布\"><a href=\"#定义一个-lt-canvas-gt-lt-canvas-gt-画布\" class=\"headerlink\" title=\"定义一个&lt;canvas&gt;&lt;/canvas&gt;画布\"></a>定义一个<code>&lt;canvas&gt;&lt;/canvas&gt;</code>画布</h4><pre><code>&lt;!-- HTML --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;\n  &lt;title&gt;running-man game&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;canvas id=&quot;demoCanvas&quot; width=&quot;960&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><h4 id=\"JS代码\"><a href=\"#JS代码\" class=\"headerlink\" title=\"JS代码\"></a>JS代码</h4><p>这里就不写具体思路分析了，代码不长，注释也很详细，方便理解，直接上代码。</p>\n<pre><code>// JS\n&lt;script src=&quot;https://code.createjs.com/1.0.0/createjs.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.onload = () =&gt; {\n    let stage, w, h, loader;\n    let sky, grant, ground, hill, hill2;\n\n    function init() {\n      stage = new createjs.StageGL(&quot;demoCanvas&quot;);\n\n      // 获取画布的宽和高，后面计算使用\n      w = stage.canvas.width;     // 960\n      h = stage.canvas.height;    // 400\n\n      // 定义静态资源\n      let manifest = [{\n        src: &quot;spritesheet_grant.png&quot;, id: &quot;grant&quot;}, {     // 人物动作雪碧图\n        src: &quot;sky.png&quot;, id: &quot;sky&quot;}, {           // 天空\n        src: &quot;ground.png&quot;, id: &quot;ground&quot;}, {     // 地面\n        src: &quot;hill1.png&quot;, id: &quot;hill&quot;}, {        // 远山\n        src: &quot;hill2.png&quot;, id: &quot;hill2&quot;           // 近山\n      }];     // Array, String, Object\n\n      // 创建资源加载队列\n      // (Boolean) 用XHR还是用HTML标签来加载\n      // 如果是false的时候，就用标签来加载，如果不能用标签的话，就用XHR来加载。默认是true，用XHR来加载。\n      loader = new createjs.LoadQueue(false);\n      // 添加&quot;资源加载完成&quot;事件\n      loader.addEventListener(&quot;complete&quot;, handleComplete);\n      // 加载资源\n      loader.loadManifest(manifest, true, &quot;./assets/img/&quot;);  // (manifest, loadNow, basePath)\n    }\n\n    /**\n      * 静态资源加载完成，处理函数\n      */\n    function handleComplete() {\n      // 渲染天空\n      sky = new createjs.Shape();\n      sky.graphics.beginBitmapFill(loader.getResult(&quot;sky&quot;)).drawRect(0, 0, w, h);\n      // 定义缓存区域(整个天空的区域))\n      sky.cache(0, 0, w, h);\n\n      // 渲染地面\n      let groundImg = loader.getResult(&quot;ground&quot;);\n      ground = new createjs.Shape();\n      // 注意：drawRect()宽度要躲绘制一个单位\n      ground.graphics.beginBitmapFill(groundImg).drawRect(0, 0, w + groundImg.width, groundImg.height);\n      ground.tileW = groundImg.width;\n      ground.y = h - groundImg.height;\n      // 缓存区域(地面的区域)\n      ground.cache(0, 0, w + groundImg.width, groundImg.height);\n\n      // 随机渲染远处山脉\n      hill = new createjs.Bitmap(loader.getResult(&quot;hill&quot;));\n      // 设置图像转换\n      // setTransform([x=0], [y=0], [scaleX=1], [scaleY=1], [rotation=0], [skewX=0], [skewY=0], [regX=0], [regY=0])\n      hill.setTransform(Math.random() * w, h - hill.image.height * 4 - groundImg.height, 4, 4);\n      hill.alpha = 0.5;     // 设置透明度\n\n      // 随机渲染近处山脉\n      hill2 = new createjs.Bitmap(loader.getResult(&quot;hill2&quot;));\n      hill2.setTransform(Math.random() * w, h - hill2.image.height * 3 - groundImg.height, 3, 3);\n\n      // 创建雪碧图动画\n      let spriteSheet = new createjs.SpriteSheet({\n        framerate: 30,      // 帧率 FPS\n        &quot;images&quot;: [loader.getResult(&quot;grant&quot;)],      // 雪碧图原图\n        &quot;frames&quot;: {&quot;width&quot;: 165, &quot;height&quot;: 292, &quot;count&quot;: 64, &quot;regX&quot;: 82, &quot;regY&quot;: 0},  // 初始化\n        // 定义动画\n        &quot;animations&quot;: {\n          &quot;run&quot;: [0, 25, &quot;run&quot;],     // name: [开始索引, 结束索引, &#39;下一个动画名称&#39;, 倍率]\n          &quot;jump&quot;: [26, 63, &quot;run&quot;]\n        }\n      });\n\n      // 绘制动画\n      grant = new createjs.Sprite(spriteSheet, &quot;run&quot;);\n      // 处理雪碧图人物下方空白\n      grant.y = 35;\n\n      // 将生成的所有内容渲染至舞台\n      stage.addChild(sky, ground, hill, hill2, grant);\n\n      // 监听舞台上的鼠标点击事件\n      stage.addEventListener(&quot;stagemousedown&quot;, () =&gt; {\n        // 跳转播放 jump 动画\n        grant.gotoAndPlay(&quot;jump&quot;);\n      });\n\n      createjs.Ticker.timingMode = createjs.Ticker.RAF;     // RAF / RAF_SYNCHED / TIMEOUT\n      createjs.Ticker.addEventListener(&quot;tick&quot;, tick);\n    }\n\n\n    /**\n      * 定时器-重绘舞台\n      */\n    function tick(event) {\n      // event.delta -- 上一次tick到当前tick的ms\n      let deltaS = event.delta / 1000;\n      // 雪碧图人物移动距离\n      let position = grant.x + 150 * deltaS;\n\n      // getBounds() -- 返回当前帧相对于雪碧图原点的边界\n      let grantW = grant.getBounds().width * grant.scaleX;\n      grant.x = (position &gt;= w + grantW) ? -grantW : position;\n\n      ground.x = (ground.x - deltaS * 150) % ground.tileW;\n\n      // 从右至左移动山脉\n      hill.x = (hill.x - deltaS * 30);\n      // 如果山脉从左侧离开屏幕\n      if (hill.x + hill.image.width * hill.scaleX &lt;= 0) {\n        hill.x = w;     // 重置回屏幕最右侧\n      }\n\n      // 处理如上\n      hill2.x = (hill2.x - deltaS * 45);\n      if (hill2.x + hill2.image.width * hill2.scaleX &lt;= 0) {\n        hill2.x = w;\n      }\n\n      stage.update();\n    }\n\n    // 程序主入口-初始化\n    init()\n  }\n&lt;/script&gt;\n</code></pre><h3 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h3><blockquote>\n<p>示例demo的GitHub地址：<a href=\"https://github.com/webCaolixin/study-notes/tree/master/create-js\" target=\"_blank\" rel=\"noopener\">完整代码</a></p>\n</blockquote>\n<!-- 图片链接定义-->\n","site":{"data":{}},"excerpt":"<h3 id=\"什么是CreateJS\"><a href=\"#什么是CreateJS\" class=\"headerlink\" title=\"什么是CreateJS\"></a>什么是CreateJS</h3><blockquote>\n<p><a href=\"https://www.createjs.com/\" target=\"_blank\" rel=\"noopener\">官网介绍</a> （<a href=\"http://www.createjs.cc/\" target=\"_blank\" rel=\"noopener\">中文</a>）：CreateJS 是一组模块化代码库和工具套件，可以独立工作也可以组合工作，用于通过HTML5技术来在网页上开发丰富的交互式内容。</p>\n</blockquote>\n<h3 id=\"四个核心库\"><a href=\"#四个核心库\" class=\"headerlink\" title=\"四个核心库\"></a>四个核心库</h3><p>CreateJS主要包含如下四个类库：</p>\n<ul>\n<li><code>EaselJS</code> – 简化处理HTML5画布（核心）</li>\n<li><code>TweenJS</code> – 用来帮助设计H5动画，调整HTML5属性</li>\n<li><code>SoundJS</code> – 用来简化处理HTML5 audio 音频</li>\n<li><code>PreloadJS</code> – 帮助管理和协调加载中的一些资源</li>\n</ul>","more":"<p><strong>今天，主要来了解一下 <code>EaselJS</code> 库</strong></p>\n<h3 id=\"EaselJS\"><a href=\"#EaselJS\" class=\"headerlink\" title=\"EaselJS\"></a>EaselJS</h3><p><img src=\"/medias/article/coding/create-js/easeljs.jpg\" alt=\"EaselJS\"></p>\n<h4 id=\"EaselJS-简介\"><a href=\"#EaselJS-简介\" class=\"headerlink\" title=\"EaselJS 简介\"></a>EaselJS 简介</h4><blockquote>\n<p><code>EaselJS</code> 是一个JavaScript库,用来简单快捷的操作 <code>HTML5 Canvas</code> 标签。在创建H5游戏，生成艺术作品、处理其他高级图形化等工作中有着很友好的体验。</p>\n</blockquote>\n<h4 id=\"EaselJS中的一些核心类\"><a href=\"#EaselJS中的一些核心类\" class=\"headerlink\" title=\"EaselJS中的一些核心类\"></a>EaselJS中的一些核心类</h4><ol>\n<li><code>Stage Class</code> – 创建舞台</li>\n<li><code>Text Class</code> – 绘制文字</li>\n<li><code>Graphics Class</code> – 绘制图形</li>\n<li><code>Shape Class</code> – 绘制图形</li>\n<li><code>Bitmap Class</code> – 绘制图片</li>\n<li><code>Ticker Class</code> – 定时广播</li>\n<li>……等</li>\n</ol>\n<h3 id=\"一些”栗子”\"><a href=\"#一些”栗子”\" class=\"headerlink\" title=\"一些”栗子”\"></a>一些”栗子”</h3><h4 id=\"绘制文本-Text-Class\"><a href=\"#绘制文本-Text-Class\" class=\"headerlink\" title=\"绘制文本(Text Class)\"></a>绘制文本(Text Class)</h4><p>定义一个<code>&lt;canvas&gt; &lt;/canvas&gt;</code> 画布。</p>\n<pre><code>// HTML:\n&lt;!-- Text Class 文本类--&gt;\n&lt;canvas id=&quot;demo1&quot; width=&quot;650&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;\n</code></pre><p>调用<code>EaselJS</code>提供的<code>API - new createjs.Text()</code>，绘制文字</p>\n<pre><code>// JS\n&lt;script src=&quot;https://code.createjs.com/1.0.0/createjs.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.onload = () =&gt; {\n    /**\n      * Test Class 文本类 -- demo\n      */\n    let stage1 = new createjs.Stage(&quot;demo1&quot;);\n\n    let text1 = new createjs.Text(&quot;Text 1 !&quot;, &quot;bold 26px Arial&quot;, &quot;#ff7700&quot;);\n    text1.regX = -50;     // 沿X轴负方向的偏移量\n    text1.regY = -50;     // 沿Y轴负方向的偏移量\n    text1.x = 100;        // 绘制源点 X坐标\n    text1.y = 50;         // 绘制源点 Y坐标\n\n    let text2 = new createjs.Text(&quot;旋转+XY拉伸！&quot;, &quot;bold 18px Arial&quot;, &quot;#ff7700&quot;);\n    text2.x = 50;\n    text2.y = 50;\n    text2.rotation = 50;      // 旋转角度 DEG\n    text2.scaleX = 3;         // X轴放大(拉伸)\n    text2.scaleY = 2;         // X轴放大(拉伸)\n\n    let text3 = new createjs.Text(&quot;XY轴倾斜&quot;, &quot;bold 50px Arial&quot;, &quot;#ff7700&quot;);\n    text3.x = 300;\n    text3.y = 200;\n    text3.skewX = 45;         // X轴倾斜角度 DEG\n    text3.skewY = 20;         // Y周倾斜角度 DEG\n\n    let text4 = new createjs.Text(&quot;文字shadow&quot;, &quot;bold 30px Arial&quot;, &quot;#ff7700&quot;);\n    text4.x = 400;\n    text4.y = 100;\n    text4.shadow = new createjs.Shadow(&quot;#000000&quot;, 5, 5, 10);      // 创建一个shadow实例Object\n\n    stage1.addChild(text1, text2, text3, text4);\n    stage1.update();    // 更新舞台，每次修改操作后需要更新真个舞台才有效果\n  }\n&lt;/script&gt;\n</code></pre><h4 id=\"绘制图形-Graphics-Class\"><a href=\"#绘制图形-Graphics-Class\" class=\"headerlink\" title=\"绘制图形(Graphics Class)\"></a>绘制图形(Graphics Class)</h4><p>定义一个<code>&lt;canvas&gt; &lt;/canvas&gt;</code> 画布。</p>\n<pre><code>// HTML:\n&lt;!-- Graphics Class 文本类--&gt;\n&lt;canvas id=&quot;demo2&quot; width=&quot;650&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;\n</code></pre><p>调用<code>EaselJS</code>提供的<code>API - new createjs.Graphics()</code>，绘制图形</p>\n<pre><code>// JS\n&lt;script src=&quot;https://code.createjs.com/1.0.0/createjs.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.onload = () =&gt; {\n    /**\n      * Graphics Class 绘图类 -- demo\n      * 用于生成矢量绘图指令\n      */\n    let stage2 = new createjs.Stage(&#39;demo2&#39;)\n\n    // 画线\n    let g = new createjs.Graphics();\n    /* 同一个 Graphics 实例， 可以多次绘制，以下线段、折线都是用 g 实例绘制的*/\n    g.setStrokeStyle(10).beginStroke(&quot;#d23c4f&quot;).moveTo(400,10).lineTo(600,100)\n    // 简写形式\n    g.ss(20).s(&#39;#fafa35&#39;).mt(400,100).lt(400,260)\n    // 多点折线的简写形式\n    g.ss(1).s(&#39;#000&#39;).mt(600,400).lt(600, 200).lt(400,300).lt(500, 550)\n\n    // Graphics 实例不能直接 addChild() 到舞台 stage 中，实例化为 Shape 实例后才可以\n    let line = new createjs.Shape(g)\n\n    // 圆\n    let g1 = new createjs.Graphics();\n    g1.setStrokeStyle(1);         // 描边\n    g1.beginStroke(&quot;#000000&quot;);    // 描边颜色\n    g1.beginFill(&quot;red&quot;);          // 图形填充\n    g1.drawCircle(0,0,100);        // 绘制 (X, X, R)\n    let c1 = new createjs.Shape(g1)     // 实例化Shape对象\n\n    // 矩形\n    let g2 = new createjs.Graphics().beginStroke(&quot;red&quot;).beginFill(&quot;blue&quot;).drawRect(150, 0, 200, 100);     // X, Y, W, H\n    let c2 = new createjs.Shape(g2)\n\n    // 命令对象\n    let g3 = new createjs.Graphics();\n    // 每个图形接口调用后会生成一个命令对象，可以使用.command访问，它保存对已创建或附加的最后一个命令的引用\n    let fillCommand = g3.beginFill(&quot;green&quot;).command;\n    g3.drawCircle(200,200,50);        // 绘制 (X, X, R)\n    let c3 = new createjs.Shape(g3);\n\n    // 一些异步操作后，更新填充样式/颜色:\n    setTimeout(() =&gt; {\n      fillCommand.style = &quot;gray&quot;;\n      stage2.update();                // 不更新舞台，不会重新渲染\n    }, 2000);\n\n    // 点击事件\n    //c3.addEventListener(&#39;click&#39;, () =&gt; {\n    // alert(123)\n    // fillCommand.style = &quot;gray&quot;;\n    // stage2.update();          // 不更新舞台，不会重新渲染\n    //})\n\n    stage2.addChild(c1, c2, c3, line);\n    stage2.update();\n  }\n&lt;/script&gt;\n</code></pre><h4 id=\"绘制图像imgaes-Bitmap-Class\"><a href=\"#绘制图像imgaes-Bitmap-Class\" class=\"headerlink\" title=\"绘制图像imgaes(Bitmap Class)\"></a>绘制图像imgaes(Bitmap Class)</h4><p>定义一个<code>&lt;canvas&gt; &lt;/canvas&gt;</code> 画布。</p>\n<pre><code>// HTML:\n&lt;!-- Bitmap Class 图像类--&gt;\n&lt;canvas id=&quot;demo3&quot; width=&quot;650&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;\n</code></pre><p>调用<code>EaselJS</code>提供的<code>API - new createjs.Bitmap()</code>，绘制图像</p>\n<pre><code>// JS\n&lt;script src=&quot;https://code.createjs.com/1.0.0/createjs.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.onload = () =&gt; {\n    /**\n      * bitmap Class 图像类\n      * 用于在画布显示列表中渲染图像\n      */\n    let stage3 = new createjs.Stage(&#39;demo3&#39;)\n\n    // 渲染图片\n    let bitmap = new createjs.Bitmap(&#39;./assets/img/hill1.png&#39;)\n    bitmap.alpha = 0.6      // 透明度\n    bitmap.cursor = &#39;help&#39;\n    // 创建一个shadow实例Object(color, offsetX, offsetY, blur)\n    bitmap.shadow = new createjs.Shadow(&quot;#97c89e&quot;, 20, 10, 20);\n\n    // 给图片添加遮罩\n    let bitmap2 = new createjs.Bitmap(&#39;./assets/img/avatar.jpg&#39;)\n    bitmap2.x = 400;        // 图片绘制的起始点X坐标\n    bitmap2.y = 0;          // 图片绘制的起始点Y坐标\n    //遮罩图形\n    let shape = new createjs.Shape();\n    shape.graphics.beginFill(&#39;#000&#39;).drawCircle(0, 0, 100);\n    shape.x = 500;          // 圆心X坐标\n    shape.y = 100;          // 圆心Y坐标\n    bitmap2.mask = shape;   //给图片bg添加遮罩\n\n    // 绘制一片草地\n    let groundBg = new createjs.Bitmap(&quot;./assets/img/ground.png&quot;).image;\n    let ground = new createjs.Shape();\n    w = stage3.canvas.width;      // 650\n    h = stage3.canvas.height;     // 400\n    stage3.addChild(ground)\n\n    stage3.addChild(bitmap, bitmap2)\n    stage3.update()       // 此处刷新无效\n\n    // 监听定时广播\n    createjs.Ticker.timingMode = createjs.Ticker.RAF;\n    createjs.Ticker.addEventListener(&#39;tick&#39;,(event) =&gt; {\n      ground.tileW = groundBg.width;\n      ground.y = h - groundBg.height;\n      ground.graphics.beginBitmapFill(groundBg).drawRect(0, 0, w, groundBg.height);\n      ground.cache(0, 0, w, groundBg.height);\n\n      stage3.update()\n    });\n  }\n&lt;/script&gt;\n</code></pre><h3 id=\"一个小游戏-来自官网Demo-Running-man\"><a href=\"#一个小游戏-来自官网Demo-Running-man\" class=\"headerlink\" title=\"一个小游戏(来自官网Demo) Running man\"></a>一个小游戏(来自官网Demo) Running man</h3><h4 id=\"定义一个-lt-canvas-gt-lt-canvas-gt-画布\"><a href=\"#定义一个-lt-canvas-gt-lt-canvas-gt-画布\" class=\"headerlink\" title=\"定义一个&lt;canvas&gt;&lt;/canvas&gt;画布\"></a>定义一个<code>&lt;canvas&gt;&lt;/canvas&gt;</code>画布</h4><pre><code>&lt;!-- HTML --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;\n  &lt;title&gt;running-man game&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;canvas id=&quot;demoCanvas&quot; width=&quot;960&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><h4 id=\"JS代码\"><a href=\"#JS代码\" class=\"headerlink\" title=\"JS代码\"></a>JS代码</h4><p>这里就不写具体思路分析了，代码不长，注释也很详细，方便理解，直接上代码。</p>\n<pre><code>// JS\n&lt;script src=&quot;https://code.createjs.com/1.0.0/createjs.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.onload = () =&gt; {\n    let stage, w, h, loader;\n    let sky, grant, ground, hill, hill2;\n\n    function init() {\n      stage = new createjs.StageGL(&quot;demoCanvas&quot;);\n\n      // 获取画布的宽和高，后面计算使用\n      w = stage.canvas.width;     // 960\n      h = stage.canvas.height;    // 400\n\n      // 定义静态资源\n      let manifest = [{\n        src: &quot;spritesheet_grant.png&quot;, id: &quot;grant&quot;}, {     // 人物动作雪碧图\n        src: &quot;sky.png&quot;, id: &quot;sky&quot;}, {           // 天空\n        src: &quot;ground.png&quot;, id: &quot;ground&quot;}, {     // 地面\n        src: &quot;hill1.png&quot;, id: &quot;hill&quot;}, {        // 远山\n        src: &quot;hill2.png&quot;, id: &quot;hill2&quot;           // 近山\n      }];     // Array, String, Object\n\n      // 创建资源加载队列\n      // (Boolean) 用XHR还是用HTML标签来加载\n      // 如果是false的时候，就用标签来加载，如果不能用标签的话，就用XHR来加载。默认是true，用XHR来加载。\n      loader = new createjs.LoadQueue(false);\n      // 添加&quot;资源加载完成&quot;事件\n      loader.addEventListener(&quot;complete&quot;, handleComplete);\n      // 加载资源\n      loader.loadManifest(manifest, true, &quot;./assets/img/&quot;);  // (manifest, loadNow, basePath)\n    }\n\n    /**\n      * 静态资源加载完成，处理函数\n      */\n    function handleComplete() {\n      // 渲染天空\n      sky = new createjs.Shape();\n      sky.graphics.beginBitmapFill(loader.getResult(&quot;sky&quot;)).drawRect(0, 0, w, h);\n      // 定义缓存区域(整个天空的区域))\n      sky.cache(0, 0, w, h);\n\n      // 渲染地面\n      let groundImg = loader.getResult(&quot;ground&quot;);\n      ground = new createjs.Shape();\n      // 注意：drawRect()宽度要躲绘制一个单位\n      ground.graphics.beginBitmapFill(groundImg).drawRect(0, 0, w + groundImg.width, groundImg.height);\n      ground.tileW = groundImg.width;\n      ground.y = h - groundImg.height;\n      // 缓存区域(地面的区域)\n      ground.cache(0, 0, w + groundImg.width, groundImg.height);\n\n      // 随机渲染远处山脉\n      hill = new createjs.Bitmap(loader.getResult(&quot;hill&quot;));\n      // 设置图像转换\n      // setTransform([x=0], [y=0], [scaleX=1], [scaleY=1], [rotation=0], [skewX=0], [skewY=0], [regX=0], [regY=0])\n      hill.setTransform(Math.random() * w, h - hill.image.height * 4 - groundImg.height, 4, 4);\n      hill.alpha = 0.5;     // 设置透明度\n\n      // 随机渲染近处山脉\n      hill2 = new createjs.Bitmap(loader.getResult(&quot;hill2&quot;));\n      hill2.setTransform(Math.random() * w, h - hill2.image.height * 3 - groundImg.height, 3, 3);\n\n      // 创建雪碧图动画\n      let spriteSheet = new createjs.SpriteSheet({\n        framerate: 30,      // 帧率 FPS\n        &quot;images&quot;: [loader.getResult(&quot;grant&quot;)],      // 雪碧图原图\n        &quot;frames&quot;: {&quot;width&quot;: 165, &quot;height&quot;: 292, &quot;count&quot;: 64, &quot;regX&quot;: 82, &quot;regY&quot;: 0},  // 初始化\n        // 定义动画\n        &quot;animations&quot;: {\n          &quot;run&quot;: [0, 25, &quot;run&quot;],     // name: [开始索引, 结束索引, &#39;下一个动画名称&#39;, 倍率]\n          &quot;jump&quot;: [26, 63, &quot;run&quot;]\n        }\n      });\n\n      // 绘制动画\n      grant = new createjs.Sprite(spriteSheet, &quot;run&quot;);\n      // 处理雪碧图人物下方空白\n      grant.y = 35;\n\n      // 将生成的所有内容渲染至舞台\n      stage.addChild(sky, ground, hill, hill2, grant);\n\n      // 监听舞台上的鼠标点击事件\n      stage.addEventListener(&quot;stagemousedown&quot;, () =&gt; {\n        // 跳转播放 jump 动画\n        grant.gotoAndPlay(&quot;jump&quot;);\n      });\n\n      createjs.Ticker.timingMode = createjs.Ticker.RAF;     // RAF / RAF_SYNCHED / TIMEOUT\n      createjs.Ticker.addEventListener(&quot;tick&quot;, tick);\n    }\n\n\n    /**\n      * 定时器-重绘舞台\n      */\n    function tick(event) {\n      // event.delta -- 上一次tick到当前tick的ms\n      let deltaS = event.delta / 1000;\n      // 雪碧图人物移动距离\n      let position = grant.x + 150 * deltaS;\n\n      // getBounds() -- 返回当前帧相对于雪碧图原点的边界\n      let grantW = grant.getBounds().width * grant.scaleX;\n      grant.x = (position &gt;= w + grantW) ? -grantW : position;\n\n      ground.x = (ground.x - deltaS * 150) % ground.tileW;\n\n      // 从右至左移动山脉\n      hill.x = (hill.x - deltaS * 30);\n      // 如果山脉从左侧离开屏幕\n      if (hill.x + hill.image.width * hill.scaleX &lt;= 0) {\n        hill.x = w;     // 重置回屏幕最右侧\n      }\n\n      // 处理如上\n      hill2.x = (hill2.x - deltaS * 45);\n      if (hill2.x + hill2.image.width * hill2.scaleX &lt;= 0) {\n        hill2.x = w;\n      }\n\n      stage.update();\n    }\n\n    // 程序主入口-初始化\n    init()\n  }\n&lt;/script&gt;\n</code></pre><h3 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h3><blockquote>\n<p>示例demo的GitHub地址：<a href=\"https://github.com/webCaolixin/study-notes/tree/master/create-js\" target=\"_blank\" rel=\"noopener\">完整代码</a></p>\n</blockquote>\n<!-- 图片链接定义-->"},{"title":"倒影","date":"2018-09-29T06:28:13.000Z","img":"/medias/galleries/reflection/20180920_193229.jpg","_content":"\n> 几月前，于微博中见一题为——`“摄影师眼里雨后的世界”`的博文，摄影师将镜头倒转，在雨后的一汪小水潭中捕捉到一个美丽的`“镜像世界”`，幽蓝的夜色下，车水马龙、灯火阑珊的街头，却给人一种平静祥和来自现实的梦幻般的美，观之实为惊叹。\n\n<img id=\"sina-blog\" src=\"/medias/galleries/reflection/sina-blog.jpg\" alt=\"摄影师眼里雨后的世界”引用博文(侵删)\"/>\n<div class=\"gallery-tip-ceter\">“摄影师眼里雨后的世界”引用博文(侵删)</div>\n\n<img id=\"sina-blog-img\" src=\"/medias/galleries/reflection/sina-blog-img.jpg\" alt=\"摄影师眼里雨后的世界”视频截图(侵删)\"/>\n<div class=\"gallery-tip-ceter\">“摄影师眼里雨后的世界”视频截图(侵删)</div>\n\n\n>个人同样爱好摄影，但并不专业，平日里自己琢磨，纯属“自娱自乐”。看到这一博文，从此便迷上这个角度，闲暇之时幸遇一些相似的景致，用手机记录下一个个瞬间，便有了这`《倒影》`影集。若有专业人士不吝赐教，也欢迎点评指正。\n\n![2018.09.20-摄于西安市高新区][1]\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n![2018.09.20-摄于西安市高新区][2]\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n![2018.09.20-摄于西安市高新区][3]\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n![2018.09.19-摄于西安市高新区][4]\n<div class=\"gallery-tip-ceter\">2018.09.19-摄于西安市高新区</div>\n\n![2018.09.05-摄于西安市高新区][5]\n<div class=\"gallery-tip-ceter\">2018.09.05-摄于西安市高新区</div>\n\n![2018.07.04-摄于西安市高新区][6]\n<div class=\"gallery-tip-ceter\">2018.07.04-摄于西安市高新区</div>\n\n![2018.06.26-摄于西安市高新区][7]\n<div class=\"gallery-tip-ceter\">2018.06.26-摄于西安市高新区</div>\n\n\n[1]: /medias/galleries/reflection/20180920_193227.jpg\n[2]: /medias/galleries/reflection/20180920_193229.jpg\n[3]: /medias/galleries/reflection/20180920_193340.jpg\n[4]: /medias/galleries/reflection/20180919_184602.jpg\n[5]: /medias/galleries/reflection/20180905_191759.jpg\n[6]: /medias/galleries/reflection/20180704_211340.jpg\n[7]: /medias/galleries/reflection/20180626_191742.jpg\n\n\n<style>\n  #galleryContent img#sina-blog-img,\n  #galleryContent img#sina-blog {\n    width: auto;\n  }\n</style>","source":"_posts/gallery-1.md","raw":"---\ntitle: 倒影\ndate: 2018-09-29 14:28:13\ncategories: 影集\ntags: 风景(影集)\nimg: /medias/galleries/reflection/20180920_193229.jpg\n---\n\n> 几月前，于微博中见一题为——`“摄影师眼里雨后的世界”`的博文，摄影师将镜头倒转，在雨后的一汪小水潭中捕捉到一个美丽的`“镜像世界”`，幽蓝的夜色下，车水马龙、灯火阑珊的街头，却给人一种平静祥和来自现实的梦幻般的美，观之实为惊叹。\n\n<img id=\"sina-blog\" src=\"/medias/galleries/reflection/sina-blog.jpg\" alt=\"摄影师眼里雨后的世界”引用博文(侵删)\"/>\n<div class=\"gallery-tip-ceter\">“摄影师眼里雨后的世界”引用博文(侵删)</div>\n\n<img id=\"sina-blog-img\" src=\"/medias/galleries/reflection/sina-blog-img.jpg\" alt=\"摄影师眼里雨后的世界”视频截图(侵删)\"/>\n<div class=\"gallery-tip-ceter\">“摄影师眼里雨后的世界”视频截图(侵删)</div>\n\n\n>个人同样爱好摄影，但并不专业，平日里自己琢磨，纯属“自娱自乐”。看到这一博文，从此便迷上这个角度，闲暇之时幸遇一些相似的景致，用手机记录下一个个瞬间，便有了这`《倒影》`影集。若有专业人士不吝赐教，也欢迎点评指正。\n\n![2018.09.20-摄于西安市高新区][1]\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n![2018.09.20-摄于西安市高新区][2]\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n![2018.09.20-摄于西安市高新区][3]\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n![2018.09.19-摄于西安市高新区][4]\n<div class=\"gallery-tip-ceter\">2018.09.19-摄于西安市高新区</div>\n\n![2018.09.05-摄于西安市高新区][5]\n<div class=\"gallery-tip-ceter\">2018.09.05-摄于西安市高新区</div>\n\n![2018.07.04-摄于西安市高新区][6]\n<div class=\"gallery-tip-ceter\">2018.07.04-摄于西安市高新区</div>\n\n![2018.06.26-摄于西安市高新区][7]\n<div class=\"gallery-tip-ceter\">2018.06.26-摄于西安市高新区</div>\n\n\n[1]: /medias/galleries/reflection/20180920_193227.jpg\n[2]: /medias/galleries/reflection/20180920_193229.jpg\n[3]: /medias/galleries/reflection/20180920_193340.jpg\n[4]: /medias/galleries/reflection/20180919_184602.jpg\n[5]: /medias/galleries/reflection/20180905_191759.jpg\n[6]: /medias/galleries/reflection/20180704_211340.jpg\n[7]: /medias/galleries/reflection/20180626_191742.jpg\n\n\n<style>\n  #galleryContent img#sina-blog-img,\n  #galleryContent img#sina-blog {\n    width: auto;\n  }\n</style>","slug":"gallery-1","published":1,"updated":"2018-11-26T12:45:16.266Z","_id":"cjoxr0vfn0002ogsmp78al7dv","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>几月前，于微博中见一题为——<code>“摄影师眼里雨后的世界”</code>的博文，摄影师将镜头倒转，在雨后的一汪小水潭中捕捉到一个美丽的<code>“镜像世界”</code>，幽蓝的夜色下，车水马龙、灯火阑珊的街头，却给人一种平静祥和来自现实的梦幻般的美，观之实为惊叹。</p>\n</blockquote>\n<p><img id=\"sina-blog\" src=\"/medias/galleries/reflection/sina-blog.jpg\" alt=\"摄影师眼里雨后的世界”引用博文(侵删)\"></p>\n<div class=\"gallery-tip-ceter\">“摄影师眼里雨后的世界”引用博文(侵删)</div>\n\n<p><img id=\"sina-blog-img\" src=\"/medias/galleries/reflection/sina-blog-img.jpg\" alt=\"摄影师眼里雨后的世界”视频截图(侵删)\"></p>\n<div class=\"gallery-tip-ceter\">“摄影师眼里雨后的世界”视频截图(侵删)</div>\n\n\n<blockquote>\n<p>个人同样爱好摄影，但并不专业，平日里自己琢磨，纯属“自娱自乐”。看到这一博文，从此便迷上这个角度，闲暇之时幸遇一些相似的景致，用手机记录下一个个瞬间，便有了这<code>《倒影》</code>影集。若有专业人士不吝赐教，也欢迎点评指正。</p>\n</blockquote>\n<p><img src=\"/medias/galleries/reflection/20180920_193227.jpg\" alt=\"2018.09.20-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180920_193229.jpg\" alt=\"2018.09.20-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180920_193340.jpg\" alt=\"2018.09.20-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180919_184602.jpg\" alt=\"2018.09.19-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.19-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180905_191759.jpg\" alt=\"2018.09.05-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.05-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180704_211340.jpg\" alt=\"2018.07.04-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.07.04-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180626_191742.jpg\" alt=\"2018.06.26-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.06.26-摄于西安市高新区</div>\n\n\n<style>\n  #galleryContent img#sina-blog-img,\n  #galleryContent img#sina-blog {\n    width: auto;\n  }\n</style>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>几月前，于微博中见一题为——<code>“摄影师眼里雨后的世界”</code>的博文，摄影师将镜头倒转，在雨后的一汪小水潭中捕捉到一个美丽的<code>“镜像世界”</code>，幽蓝的夜色下，车水马龙、灯火阑珊的街头，却给人一种平静祥和来自现实的梦幻般的美，观之实为惊叹。</p>\n</blockquote>\n<p><img id=\"sina-blog\" src=\"/medias/galleries/reflection/sina-blog.jpg\" alt=\"摄影师眼里雨后的世界”引用博文(侵删)\"></p>\n<div class=\"gallery-tip-ceter\">“摄影师眼里雨后的世界”引用博文(侵删)</div>\n\n<p><img id=\"sina-blog-img\" src=\"/medias/galleries/reflection/sina-blog-img.jpg\" alt=\"摄影师眼里雨后的世界”视频截图(侵删)\"></p>\n<div class=\"gallery-tip-ceter\">“摄影师眼里雨后的世界”视频截图(侵删)</div>\n\n\n<blockquote>\n<p>个人同样爱好摄影，但并不专业，平日里自己琢磨，纯属“自娱自乐”。看到这一博文，从此便迷上这个角度，闲暇之时幸遇一些相似的景致，用手机记录下一个个瞬间，便有了这<code>《倒影》</code>影集。若有专业人士不吝赐教，也欢迎点评指正。</p>\n</blockquote>\n<p><img src=\"/medias/galleries/reflection/20180920_193227.jpg\" alt=\"2018.09.20-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180920_193229.jpg\" alt=\"2018.09.20-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180920_193340.jpg\" alt=\"2018.09.20-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.20-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180919_184602.jpg\" alt=\"2018.09.19-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.19-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180905_191759.jpg\" alt=\"2018.09.05-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.09.05-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180704_211340.jpg\" alt=\"2018.07.04-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.07.04-摄于西安市高新区</div>\n\n<p><img src=\"/medias/galleries/reflection/20180626_191742.jpg\" alt=\"2018.06.26-摄于西安市高新区\"></p>\n<div class=\"gallery-tip-ceter\">2018.06.26-摄于西安市高新区</div>\n\n\n<style>\n  #galleryContent img#sina-blog-img,\n  #galleryContent img#sina-blog {\n    width: auto;\n  }\n</style>"},{"title":"伊 始","date":"2018-07-11T06:34:49.000Z","_content":"\n### 开始的开始\n\n最近几天的西安城，阴雨绵绵，到哪都是湿漉漉的一片，给人一种身处烟雨江南的感觉。走在人少路窄的街道上，你也许能体会到戴望舒那“独自徘徊在悠长、悠长又寂寥的雨巷”朦胧而又幽深的美感，还会期待着“逢着一个丁香一样的结着愁怨的姑娘”。说实话，这不是西安第一次让我产生这样的错觉，今年夏天的西安，似乎更受雨水的青睐，总在温度快速攀升至30多度的时候迎来一场及时雨，之后又快速回落，这便被网友玩成了“满30立减20”的梗。的确，今年夏天西安少了一些往年的燥热，多了几分夏末秋初的凉爽。\n\n<!--more-->\n\n### 善“思”\n\n我喜欢下雨天，不仅仅是因为雨天凉快，更重要的是我喜欢雨后万物如新洗的明丽和纯粹，洗去一身尘垢，显得本真色彩，这种雨后独有的清新秀丽在其他时间是看不到、体会不到的。其实，还有一个重要原因是我喜欢时不时地“胡思乱想”。一直觉得雨天最适合“天马行空”，尤其是雨后，觅一幽静之处，檐下雨水滴答，袖间凉风习习，雾气散尽之后，溢成满屋花香。这个时候，放空脑袋，忘却平日的紧张与忙碌，心随着眼睛漫无目的的在近处、远处、高处、低处肆意游荡。当有趣的事物映入眼帘，定睛多瞧几眼，之后会心一笑。仰望天空，乌云未散，依旧能感受到“黑云压城城欲摧”的气势。凝望着天空，就好似凝望着无尽的深渊，而此时，深渊也在凝望着你，看得愈久，陷得愈深，这便开始了天马行空般的“胡思乱想”。可能会从日常闲事想到人生哲理，也许会从方隅之间想到世界宇宙，会想东想西，会“思前想后”。这种思考不一定有多大意义，甚至可能有人认为毫无意义，但最重要的是这可以放松身心，在匆忙疲惫的生活中在精神上宽慰自己。心里的豁然开朗、风轻云淡，还有思维的释放，用语言很难表达出那种奇妙的感觉。据说每天给自己一定时间的冥想，能很好地平静内心，缓解压力，促进身心健康，更重要的是，也许某一时刻的灵光闪动，就会是改变你一生的“箴言”。\n\n最近一直阴雨天，加上近来工作也相对清闲，便有了较多的时间做自己想做的事情，这对于我，可以说是如获至宝。因为真正忙碌的时候，没有时间更重要是没有心思去做其他的事情，也可能是长时间的“养老”氛围让我有些安逸和懒惰了。这一段时间，一直觉得过得有些浑浑噩噩，过于单调乏味。白天上班，空余看看技术文章，找找技术盲点研究研究，时间长了就会有些许疲惫。下班之后，便起身回到住处（我不太喜欢把租的公寓称之为“家”，不论是合租还是自己一个人住，因为在我觉得那不是“家”，称之为“住处”更为合适），回去便是“咸鱼躺”，然后刷刷新闻、微博，看看综艺（《向往的生活》一直是我很喜欢的一档综艺，很慢生活，很田园，推荐可以看看），隔三差五洗洗衣服。几乎每天都是这样，这让我每天起床睁眼，总觉得被“困”在了同一天，循环这一天所有的事情，就像电影[《土拨鼠之日》](https://baike.baidu.com/item/%E5%9C%9F%E6%8B%A8%E9%BC%A0%E4%B9%8B%E6%97%A5/3687686)一样。\n\n这样的生活也有一段时了，刚开始没感到有什么不妥，也没察觉其中的可怕之处。这几天，总是觉得被这一天“困”得无法前进，觉得自己更像是一个“智能机器”，醒来之后便重复着几乎相同的事情，睡着后什么都像是忘掉了，可能连“梦”都没有。都说不做梦，是因为睡眠质量好，可一直不做梦是不是也有些可怜甚至可悲呢？这种循环最可怕的在于，你的记忆里就只有了早上起床洗漱、挤公交上班、枯燥地工作八小时甚至十几个小时、挤公交下班、洗漱睡觉这些事情，然后一天天地反复循环，没有尽头......这样的生活还会给人一种可怕的错觉 —— “时间过得真快”，对于一般的工薪上班族，这种感觉应该是格外明显。在我看来，这种生活是可怜的，也是可怕的，时间久了，如果渐渐适应或者说妥协，是一件很可怕的事情，就像[“青蛙效应”](https://baike.baidu.com/item/%E9%9D%92%E8%9B%99%E6%95%88%E5%BA%94/9627267)。毕竟从“智人”进化而来的人类，是“智”、“思考”造就了今天的我们，生而为人，如果每天扮演一个“智能机器”的角色，还真是很不甘心啊......\n\n### 善“思”，亦应善“行”\n\n与其被困在原地，每天浑浑噩噩，那不如做一些改变。如果说没有意识到，或者说习惯了循环式的生活，那就另当别论。但如果选择改变，选择不妥协，那就应该做出改变。工作学习之余，合理安排时间，看看书，练练字，写写博客，跑跑步，健健身，学学厨艺，学学摄影，随处走走停停......对了，每天给自己冥想的时间，也是一个不错的选择，在善“思”的同时，亦应该做到善“行”。\n\n每个人都应该有自己的爱好，有自己的乐趣所在，也应该有自己想要做但没来得及做的事情。一切都不算晚，一切都还有机会，最重要的是学会开始，毕竟“万事开头难”。改变并不意味着要短时间的巨变，给自己一个过渡的时间，一个循序渐进的过程，“量变到质变”是一个永恒不变的真理。\n\n所以，我想，首先学会写博客，把自己的生活记录下来，再分享给大家。不一定要有很多人看，更不奢求有什么粉丝，只是希望看到文章的人在读到某一行，某一句的时候会心一笑，或者能帮你拨去心头的乌云。其实最简单的目的还是为了记录自己生活的点滴，记录自己的心路历程，同时也记录自己思想转变的过程，我相信日后回味起来，这将是一杯世间最醇的“美酒”......\n\n最后，把我很喜欢的一段话分享给大家，这是国产电影《大鱼·海棠》中女主人公 —— 椿 的一段独白：\n\n> **你相信奇迹吗？**\n> **生命是一场旅程，我们等了多少个轮回，才有机会去享受这一次旅程。**\n> **这短短的一生，我们最终都会失去，不妨大胆一些，爱一个人，攀一座山，追一个梦。是的，不妨大胆一些。**\n> **很多事我都不了解，很多问题也没有答案。但我相信，上天给我们生命，一定是为了让我们创造奇迹的。**\n> **—— 电影《大鱼·海棠》**\n","source":"_posts/beginning.md","raw":"---\ntitle: 伊 始\ndate: 2018-07-11 14:34:49\ncategories: 日志\ntags: 生活工作\n---\n\n### 开始的开始\n\n最近几天的西安城，阴雨绵绵，到哪都是湿漉漉的一片，给人一种身处烟雨江南的感觉。走在人少路窄的街道上，你也许能体会到戴望舒那“独自徘徊在悠长、悠长又寂寥的雨巷”朦胧而又幽深的美感，还会期待着“逢着一个丁香一样的结着愁怨的姑娘”。说实话，这不是西安第一次让我产生这样的错觉，今年夏天的西安，似乎更受雨水的青睐，总在温度快速攀升至30多度的时候迎来一场及时雨，之后又快速回落，这便被网友玩成了“满30立减20”的梗。的确，今年夏天西安少了一些往年的燥热，多了几分夏末秋初的凉爽。\n\n<!--more-->\n\n### 善“思”\n\n我喜欢下雨天，不仅仅是因为雨天凉快，更重要的是我喜欢雨后万物如新洗的明丽和纯粹，洗去一身尘垢，显得本真色彩，这种雨后独有的清新秀丽在其他时间是看不到、体会不到的。其实，还有一个重要原因是我喜欢时不时地“胡思乱想”。一直觉得雨天最适合“天马行空”，尤其是雨后，觅一幽静之处，檐下雨水滴答，袖间凉风习习，雾气散尽之后，溢成满屋花香。这个时候，放空脑袋，忘却平日的紧张与忙碌，心随着眼睛漫无目的的在近处、远处、高处、低处肆意游荡。当有趣的事物映入眼帘，定睛多瞧几眼，之后会心一笑。仰望天空，乌云未散，依旧能感受到“黑云压城城欲摧”的气势。凝望着天空，就好似凝望着无尽的深渊，而此时，深渊也在凝望着你，看得愈久，陷得愈深，这便开始了天马行空般的“胡思乱想”。可能会从日常闲事想到人生哲理，也许会从方隅之间想到世界宇宙，会想东想西，会“思前想后”。这种思考不一定有多大意义，甚至可能有人认为毫无意义，但最重要的是这可以放松身心，在匆忙疲惫的生活中在精神上宽慰自己。心里的豁然开朗、风轻云淡，还有思维的释放，用语言很难表达出那种奇妙的感觉。据说每天给自己一定时间的冥想，能很好地平静内心，缓解压力，促进身心健康，更重要的是，也许某一时刻的灵光闪动，就会是改变你一生的“箴言”。\n\n最近一直阴雨天，加上近来工作也相对清闲，便有了较多的时间做自己想做的事情，这对于我，可以说是如获至宝。因为真正忙碌的时候，没有时间更重要是没有心思去做其他的事情，也可能是长时间的“养老”氛围让我有些安逸和懒惰了。这一段时间，一直觉得过得有些浑浑噩噩，过于单调乏味。白天上班，空余看看技术文章，找找技术盲点研究研究，时间长了就会有些许疲惫。下班之后，便起身回到住处（我不太喜欢把租的公寓称之为“家”，不论是合租还是自己一个人住，因为在我觉得那不是“家”，称之为“住处”更为合适），回去便是“咸鱼躺”，然后刷刷新闻、微博，看看综艺（《向往的生活》一直是我很喜欢的一档综艺，很慢生活，很田园，推荐可以看看），隔三差五洗洗衣服。几乎每天都是这样，这让我每天起床睁眼，总觉得被“困”在了同一天，循环这一天所有的事情，就像电影[《土拨鼠之日》](https://baike.baidu.com/item/%E5%9C%9F%E6%8B%A8%E9%BC%A0%E4%B9%8B%E6%97%A5/3687686)一样。\n\n这样的生活也有一段时了，刚开始没感到有什么不妥，也没察觉其中的可怕之处。这几天，总是觉得被这一天“困”得无法前进，觉得自己更像是一个“智能机器”，醒来之后便重复着几乎相同的事情，睡着后什么都像是忘掉了，可能连“梦”都没有。都说不做梦，是因为睡眠质量好，可一直不做梦是不是也有些可怜甚至可悲呢？这种循环最可怕的在于，你的记忆里就只有了早上起床洗漱、挤公交上班、枯燥地工作八小时甚至十几个小时、挤公交下班、洗漱睡觉这些事情，然后一天天地反复循环，没有尽头......这样的生活还会给人一种可怕的错觉 —— “时间过得真快”，对于一般的工薪上班族，这种感觉应该是格外明显。在我看来，这种生活是可怜的，也是可怕的，时间久了，如果渐渐适应或者说妥协，是一件很可怕的事情，就像[“青蛙效应”](https://baike.baidu.com/item/%E9%9D%92%E8%9B%99%E6%95%88%E5%BA%94/9627267)。毕竟从“智人”进化而来的人类，是“智”、“思考”造就了今天的我们，生而为人，如果每天扮演一个“智能机器”的角色，还真是很不甘心啊......\n\n### 善“思”，亦应善“行”\n\n与其被困在原地，每天浑浑噩噩，那不如做一些改变。如果说没有意识到，或者说习惯了循环式的生活，那就另当别论。但如果选择改变，选择不妥协，那就应该做出改变。工作学习之余，合理安排时间，看看书，练练字，写写博客，跑跑步，健健身，学学厨艺，学学摄影，随处走走停停......对了，每天给自己冥想的时间，也是一个不错的选择，在善“思”的同时，亦应该做到善“行”。\n\n每个人都应该有自己的爱好，有自己的乐趣所在，也应该有自己想要做但没来得及做的事情。一切都不算晚，一切都还有机会，最重要的是学会开始，毕竟“万事开头难”。改变并不意味着要短时间的巨变，给自己一个过渡的时间，一个循序渐进的过程，“量变到质变”是一个永恒不变的真理。\n\n所以，我想，首先学会写博客，把自己的生活记录下来，再分享给大家。不一定要有很多人看，更不奢求有什么粉丝，只是希望看到文章的人在读到某一行，某一句的时候会心一笑，或者能帮你拨去心头的乌云。其实最简单的目的还是为了记录自己生活的点滴，记录自己的心路历程，同时也记录自己思想转变的过程，我相信日后回味起来，这将是一杯世间最醇的“美酒”......\n\n最后，把我很喜欢的一段话分享给大家，这是国产电影《大鱼·海棠》中女主人公 —— 椿 的一段独白：\n\n> **你相信奇迹吗？**\n> **生命是一场旅程，我们等了多少个轮回，才有机会去享受这一次旅程。**\n> **这短短的一生，我们最终都会失去，不妨大胆一些，爱一个人，攀一座山，追一个梦。是的，不妨大胆一些。**\n> **很多事我都不了解，很多问题也没有答案。但我相信，上天给我们生命，一定是为了让我们创造奇迹的。**\n> **—— 电影《大鱼·海棠》**\n","slug":"beginning","published":1,"updated":"2018-09-19T06:08:27.125Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vfn0005ogsm9rcyai08","content":"<h3 id=\"开始的开始\"><a href=\"#开始的开始\" class=\"headerlink\" title=\"开始的开始\"></a>开始的开始</h3><p>最近几天的西安城，阴雨绵绵，到哪都是湿漉漉的一片，给人一种身处烟雨江南的感觉。走在人少路窄的街道上，你也许能体会到戴望舒那“独自徘徊在悠长、悠长又寂寥的雨巷”朦胧而又幽深的美感，还会期待着“逢着一个丁香一样的结着愁怨的姑娘”。说实话，这不是西安第一次让我产生这样的错觉，今年夏天的西安，似乎更受雨水的青睐，总在温度快速攀升至30多度的时候迎来一场及时雨，之后又快速回落，这便被网友玩成了“满30立减20”的梗。的确，今年夏天西安少了一些往年的燥热，多了几分夏末秋初的凉爽。</p>\n<a id=\"more\"></a>\n<h3 id=\"善“思”\"><a href=\"#善“思”\" class=\"headerlink\" title=\"善“思”\"></a>善“思”</h3><p>我喜欢下雨天，不仅仅是因为雨天凉快，更重要的是我喜欢雨后万物如新洗的明丽和纯粹，洗去一身尘垢，显得本真色彩，这种雨后独有的清新秀丽在其他时间是看不到、体会不到的。其实，还有一个重要原因是我喜欢时不时地“胡思乱想”。一直觉得雨天最适合“天马行空”，尤其是雨后，觅一幽静之处，檐下雨水滴答，袖间凉风习习，雾气散尽之后，溢成满屋花香。这个时候，放空脑袋，忘却平日的紧张与忙碌，心随着眼睛漫无目的的在近处、远处、高处、低处肆意游荡。当有趣的事物映入眼帘，定睛多瞧几眼，之后会心一笑。仰望天空，乌云未散，依旧能感受到“黑云压城城欲摧”的气势。凝望着天空，就好似凝望着无尽的深渊，而此时，深渊也在凝望着你，看得愈久，陷得愈深，这便开始了天马行空般的“胡思乱想”。可能会从日常闲事想到人生哲理，也许会从方隅之间想到世界宇宙，会想东想西，会“思前想后”。这种思考不一定有多大意义，甚至可能有人认为毫无意义，但最重要的是这可以放松身心，在匆忙疲惫的生活中在精神上宽慰自己。心里的豁然开朗、风轻云淡，还有思维的释放，用语言很难表达出那种奇妙的感觉。据说每天给自己一定时间的冥想，能很好地平静内心，缓解压力，促进身心健康，更重要的是，也许某一时刻的灵光闪动，就会是改变你一生的“箴言”。</p>\n<p>最近一直阴雨天，加上近来工作也相对清闲，便有了较多的时间做自己想做的事情，这对于我，可以说是如获至宝。因为真正忙碌的时候，没有时间更重要是没有心思去做其他的事情，也可能是长时间的“养老”氛围让我有些安逸和懒惰了。这一段时间，一直觉得过得有些浑浑噩噩，过于单调乏味。白天上班，空余看看技术文章，找找技术盲点研究研究，时间长了就会有些许疲惫。下班之后，便起身回到住处（我不太喜欢把租的公寓称之为“家”，不论是合租还是自己一个人住，因为在我觉得那不是“家”，称之为“住处”更为合适），回去便是“咸鱼躺”，然后刷刷新闻、微博，看看综艺（《向往的生活》一直是我很喜欢的一档综艺，很慢生活，很田园，推荐可以看看），隔三差五洗洗衣服。几乎每天都是这样，这让我每天起床睁眼，总觉得被“困”在了同一天，循环这一天所有的事情，就像电影<a href=\"https://baike.baidu.com/item/%E5%9C%9F%E6%8B%A8%E9%BC%A0%E4%B9%8B%E6%97%A5/3687686\" target=\"_blank\" rel=\"noopener\">《土拨鼠之日》</a>一样。</p>\n<p>这样的生活也有一段时了，刚开始没感到有什么不妥，也没察觉其中的可怕之处。这几天，总是觉得被这一天“困”得无法前进，觉得自己更像是一个“智能机器”，醒来之后便重复着几乎相同的事情，睡着后什么都像是忘掉了，可能连“梦”都没有。都说不做梦，是因为睡眠质量好，可一直不做梦是不是也有些可怜甚至可悲呢？这种循环最可怕的在于，你的记忆里就只有了早上起床洗漱、挤公交上班、枯燥地工作八小时甚至十几个小时、挤公交下班、洗漱睡觉这些事情，然后一天天地反复循环，没有尽头……这样的生活还会给人一种可怕的错觉 —— “时间过得真快”，对于一般的工薪上班族，这种感觉应该是格外明显。在我看来，这种生活是可怜的，也是可怕的，时间久了，如果渐渐适应或者说妥协，是一件很可怕的事情，就像<a href=\"https://baike.baidu.com/item/%E9%9D%92%E8%9B%99%E6%95%88%E5%BA%94/9627267\" target=\"_blank\" rel=\"noopener\">“青蛙效应”</a>。毕竟从“智人”进化而来的人类，是“智”、“思考”造就了今天的我们，生而为人，如果每天扮演一个“智能机器”的角色，还真是很不甘心啊……</p>\n<h3 id=\"善“思”，亦应善“行”\"><a href=\"#善“思”，亦应善“行”\" class=\"headerlink\" title=\"善“思”，亦应善“行”\"></a>善“思”，亦应善“行”</h3><p>与其被困在原地，每天浑浑噩噩，那不如做一些改变。如果说没有意识到，或者说习惯了循环式的生活，那就另当别论。但如果选择改变，选择不妥协，那就应该做出改变。工作学习之余，合理安排时间，看看书，练练字，写写博客，跑跑步，健健身，学学厨艺，学学摄影，随处走走停停……对了，每天给自己冥想的时间，也是一个不错的选择，在善“思”的同时，亦应该做到善“行”。</p>\n<p>每个人都应该有自己的爱好，有自己的乐趣所在，也应该有自己想要做但没来得及做的事情。一切都不算晚，一切都还有机会，最重要的是学会开始，毕竟“万事开头难”。改变并不意味着要短时间的巨变，给自己一个过渡的时间，一个循序渐进的过程，“量变到质变”是一个永恒不变的真理。</p>\n<p>所以，我想，首先学会写博客，把自己的生活记录下来，再分享给大家。不一定要有很多人看，更不奢求有什么粉丝，只是希望看到文章的人在读到某一行，某一句的时候会心一笑，或者能帮你拨去心头的乌云。其实最简单的目的还是为了记录自己生活的点滴，记录自己的心路历程，同时也记录自己思想转变的过程，我相信日后回味起来，这将是一杯世间最醇的“美酒”……</p>\n<p>最后，把我很喜欢的一段话分享给大家，这是国产电影《大鱼·海棠》中女主人公 —— 椿 的一段独白：</p>\n<blockquote>\n<p><strong>你相信奇迹吗？</strong><br><strong>生命是一场旅程，我们等了多少个轮回，才有机会去享受这一次旅程。</strong><br><strong>这短短的一生，我们最终都会失去，不妨大胆一些，爱一个人，攀一座山，追一个梦。是的，不妨大胆一些。</strong><br><strong>很多事我都不了解，很多问题也没有答案。但我相信，上天给我们生命，一定是为了让我们创造奇迹的。</strong><br><strong>—— 电影《大鱼·海棠》</strong></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h3 id=\"开始的开始\"><a href=\"#开始的开始\" class=\"headerlink\" title=\"开始的开始\"></a>开始的开始</h3><p>最近几天的西安城，阴雨绵绵，到哪都是湿漉漉的一片，给人一种身处烟雨江南的感觉。走在人少路窄的街道上，你也许能体会到戴望舒那“独自徘徊在悠长、悠长又寂寥的雨巷”朦胧而又幽深的美感，还会期待着“逢着一个丁香一样的结着愁怨的姑娘”。说实话，这不是西安第一次让我产生这样的错觉，今年夏天的西安，似乎更受雨水的青睐，总在温度快速攀升至30多度的时候迎来一场及时雨，之后又快速回落，这便被网友玩成了“满30立减20”的梗。的确，今年夏天西安少了一些往年的燥热，多了几分夏末秋初的凉爽。</p>","more":"<h3 id=\"善“思”\"><a href=\"#善“思”\" class=\"headerlink\" title=\"善“思”\"></a>善“思”</h3><p>我喜欢下雨天，不仅仅是因为雨天凉快，更重要的是我喜欢雨后万物如新洗的明丽和纯粹，洗去一身尘垢，显得本真色彩，这种雨后独有的清新秀丽在其他时间是看不到、体会不到的。其实，还有一个重要原因是我喜欢时不时地“胡思乱想”。一直觉得雨天最适合“天马行空”，尤其是雨后，觅一幽静之处，檐下雨水滴答，袖间凉风习习，雾气散尽之后，溢成满屋花香。这个时候，放空脑袋，忘却平日的紧张与忙碌，心随着眼睛漫无目的的在近处、远处、高处、低处肆意游荡。当有趣的事物映入眼帘，定睛多瞧几眼，之后会心一笑。仰望天空，乌云未散，依旧能感受到“黑云压城城欲摧”的气势。凝望着天空，就好似凝望着无尽的深渊，而此时，深渊也在凝望着你，看得愈久，陷得愈深，这便开始了天马行空般的“胡思乱想”。可能会从日常闲事想到人生哲理，也许会从方隅之间想到世界宇宙，会想东想西，会“思前想后”。这种思考不一定有多大意义，甚至可能有人认为毫无意义，但最重要的是这可以放松身心，在匆忙疲惫的生活中在精神上宽慰自己。心里的豁然开朗、风轻云淡，还有思维的释放，用语言很难表达出那种奇妙的感觉。据说每天给自己一定时间的冥想，能很好地平静内心，缓解压力，促进身心健康，更重要的是，也许某一时刻的灵光闪动，就会是改变你一生的“箴言”。</p>\n<p>最近一直阴雨天，加上近来工作也相对清闲，便有了较多的时间做自己想做的事情，这对于我，可以说是如获至宝。因为真正忙碌的时候，没有时间更重要是没有心思去做其他的事情，也可能是长时间的“养老”氛围让我有些安逸和懒惰了。这一段时间，一直觉得过得有些浑浑噩噩，过于单调乏味。白天上班，空余看看技术文章，找找技术盲点研究研究，时间长了就会有些许疲惫。下班之后，便起身回到住处（我不太喜欢把租的公寓称之为“家”，不论是合租还是自己一个人住，因为在我觉得那不是“家”，称之为“住处”更为合适），回去便是“咸鱼躺”，然后刷刷新闻、微博，看看综艺（《向往的生活》一直是我很喜欢的一档综艺，很慢生活，很田园，推荐可以看看），隔三差五洗洗衣服。几乎每天都是这样，这让我每天起床睁眼，总觉得被“困”在了同一天，循环这一天所有的事情，就像电影<a href=\"https://baike.baidu.com/item/%E5%9C%9F%E6%8B%A8%E9%BC%A0%E4%B9%8B%E6%97%A5/3687686\" target=\"_blank\" rel=\"noopener\">《土拨鼠之日》</a>一样。</p>\n<p>这样的生活也有一段时了，刚开始没感到有什么不妥，也没察觉其中的可怕之处。这几天，总是觉得被这一天“困”得无法前进，觉得自己更像是一个“智能机器”，醒来之后便重复着几乎相同的事情，睡着后什么都像是忘掉了，可能连“梦”都没有。都说不做梦，是因为睡眠质量好，可一直不做梦是不是也有些可怜甚至可悲呢？这种循环最可怕的在于，你的记忆里就只有了早上起床洗漱、挤公交上班、枯燥地工作八小时甚至十几个小时、挤公交下班、洗漱睡觉这些事情，然后一天天地反复循环，没有尽头……这样的生活还会给人一种可怕的错觉 —— “时间过得真快”，对于一般的工薪上班族，这种感觉应该是格外明显。在我看来，这种生活是可怜的，也是可怕的，时间久了，如果渐渐适应或者说妥协，是一件很可怕的事情，就像<a href=\"https://baike.baidu.com/item/%E9%9D%92%E8%9B%99%E6%95%88%E5%BA%94/9627267\" target=\"_blank\" rel=\"noopener\">“青蛙效应”</a>。毕竟从“智人”进化而来的人类，是“智”、“思考”造就了今天的我们，生而为人，如果每天扮演一个“智能机器”的角色，还真是很不甘心啊……</p>\n<h3 id=\"善“思”，亦应善“行”\"><a href=\"#善“思”，亦应善“行”\" class=\"headerlink\" title=\"善“思”，亦应善“行”\"></a>善“思”，亦应善“行”</h3><p>与其被困在原地，每天浑浑噩噩，那不如做一些改变。如果说没有意识到，或者说习惯了循环式的生活，那就另当别论。但如果选择改变，选择不妥协，那就应该做出改变。工作学习之余，合理安排时间，看看书，练练字，写写博客，跑跑步，健健身，学学厨艺，学学摄影，随处走走停停……对了，每天给自己冥想的时间，也是一个不错的选择，在善“思”的同时，亦应该做到善“行”。</p>\n<p>每个人都应该有自己的爱好，有自己的乐趣所在，也应该有自己想要做但没来得及做的事情。一切都不算晚，一切都还有机会，最重要的是学会开始，毕竟“万事开头难”。改变并不意味着要短时间的巨变，给自己一个过渡的时间，一个循序渐进的过程，“量变到质变”是一个永恒不变的真理。</p>\n<p>所以，我想，首先学会写博客，把自己的生活记录下来，再分享给大家。不一定要有很多人看，更不奢求有什么粉丝，只是希望看到文章的人在读到某一行，某一句的时候会心一笑，或者能帮你拨去心头的乌云。其实最简单的目的还是为了记录自己生活的点滴，记录自己的心路历程，同时也记录自己思想转变的过程，我相信日后回味起来，这将是一杯世间最醇的“美酒”……</p>\n<p>最后，把我很喜欢的一段话分享给大家，这是国产电影《大鱼·海棠》中女主人公 —— 椿 的一段独白：</p>\n<blockquote>\n<p><strong>你相信奇迹吗？</strong><br><strong>生命是一场旅程，我们等了多少个轮回，才有机会去享受这一次旅程。</strong><br><strong>这短短的一生，我们最终都会失去，不妨大胆一些，爱一个人，攀一座山，追一个梦。是的，不妨大胆一些。</strong><br><strong>很多事我都不了解，很多问题也没有答案。但我相信，上天给我们生命，一定是为了让我们创造奇迹的。</strong><br><strong>—— 电影《大鱼·海棠》</strong></p>\n</blockquote>"},{"title":"生命难以承受的“2 ℃\"","date":"2018-08-10T08:43:21.000Z","_content":"\n### “番茄炒蛋”\n\n近一个月来的西安城高温持续不下，与阴雨绵绵、凉爽怡人的7月初的差距算得上是天冠地屦，近几日的气温用“烁石流金”形容也是毫无夸张之嫌。在七八月份华南华北甚至全国“一片火热”的形势下，西安的温度也算是遥遥领先。当华南华北高温在地图上连上一片时，西安城的气温很多时候就像冬日那傲然的梅花，真可谓一枝独秀，也算是“雄鸡”中心最瞩目的一点。夏季的西安，在高温预报图上就是一个又红又紫，红得发紫的城市。\n\n西安所处地理位置典型的温带季风性气候——夏季高温多雨，冬季寒冷干燥。看起来降水充足，但以个人的感受，西安的高温实在是有过之而无不及。下图是2018年8月13日，中央气象台发布的全国高温预报图，说西安“一枝独秀”、红得发紫，真的是名副其实。\n\n<!--more-->\n\n![中央气象台2018.08.13 06:00:00全国高温预报图][1]\n\n\n下图是2018.07.14 - 2018.08.12全国高温分布图。每年七八月份，不仅是西安城，全国的气温预报图便成了一片又红又紫的“雄鸡”。网友也调侃着说，全国气温图看起来就像是一盘“番茄炒蛋”。\n\n![全国近一个月温度分布图][2]\n\n<p class=\"data-resource\">以上数据来源，[中央气象台](http://www.nmc.cn/)</p>\n\n### 最近的地球\n\n2018年，好像全球都比往年更加“火热”。** `地球，好像发烧了，而且，高烧不退...` **\n\n今年7月初，多个北非国家也出现热浪，撒哈拉沙漠地区最高气温达到51.3℃。世界气象组织说，这应该是阿尔及利亚可靠的温度记录中的最高值。持续的高温同样袭击了整个欧洲，瑞典、西班牙、葡萄牙、法国、意大利、德国、芬兰等几乎所有欧洲国家都出现了历史上罕见的高温天气。地处东欧的波兰，往年被视为避暑好去处，最近却连续遭遇30℃以上罕见高温，最高气温34℃。\n\n>**[北晚新视觉 - 《欧洲多地持续高温：局地或超47℃ 瑞典最高峰冰川融化4米》](http://www.takefoto.cn/viewnews-1532649.html)**\n\n此外，就连北极圈内也出现了罕见的超过30℃的高温，冰川融化，甚至严重威胁到北极熊的生存。茫茫无边的北极圈海面上天空阴沉昏暗，让人窒息，冰冷刺骨的海面上飘着一块孤零零的来自极地的冰山，一只北极熊蜷缩在上面睡着了。饥饿、劳累，但对于它来说，比海更广阔的是内心的孤独...\n\n![比海更广阔的是内心的孤独][3]\n\n>**[澎湃新闻 - 《四大洲同现极端高温北极圈罕见32℃，北极熊或40年内灭绝》](https://www.thepaper.cn/newsDetail_forward_2322066)**\n>**[百度百家号新闻 - 《北极圈出现罕见高温，北极熊将消失？》](https://baijiahao.baidu.com/s?id=1608148193270009243&wfr=spider&for=pc)**\n\n**[这里](https://www.thepaper.cn/newsDetail_forward_2335388)**，有一封来自北极熊的独白信。充满悲伤、孤独和无奈... 人类用了几十年就使几百万年的北极冰川大面积融化... 因饥饿与劳累北极熊溺死在北极冰冷的海水中... 以海豹为主食的北极熊，开始捕食鸟蛋、海豚，甚至撕碎并吃掉自己的孩子... 最后的图文中有一句话**`“不知道人类还记不记得，北极，Arctic，这个词源自希腊语，意思是 —— 被熊照耀的地方...”`** 如今的北极，好像也生病了... 而且，无法康复...\n\n\n### 一串数字\n\n下面这一串数字，访问**[这里](http://trillionthtonne.org/)**，你可以看到它在飞速增长。`6240多亿`（截止于2018.08.13，相信以后会越来越多），粗略估计大约每`2秒`就会增加`1000`。它代表什么？你所拥有的财富的增长？某个国家GDP总量的增长？地球氧气总量的增长？你可能会有很多猜测... \n\n![飞速增长的全球二氧化碳排放总量][4]\n\n<p class=\"data-resource\">数据来源，[这里](http://trillionthtonne.org/)</p>\n\n其实，它代表的是** `自工业化以来，全球范围内人类在化石燃料使用、水泥制造、土地利用等活动中排放的二氧化碳总量，并且在实时更新` **，值得注意的是，该数值的单位是 **`吨`**。这就表示，自工业化以来全球目前排放二氧化碳** `6240多亿吨` **。第一次知道它代表的含义，在看着这飞速增长的数字，我心惊肉跳。我想让它走得慢一些... 我恨不得抓住它，抑制住它。可是，我无能为力，心有余而力不足... 那种焦虑和无助感，真的可以让你抓耳挠心塞。在这个网站页面主体的右下方，还有一个倒计时，目前，预计在2036年2月全球二氧化碳排放量达到10000亿吨，意味着那时全球平均温度较现在升高2℃左右。每一秒看着时间的走近，就让人觉得恐慌，灾难在一步步靠近...\n\n![全球二氧化碳排放量达到10000亿吨倒计时][5]\n\n>笔者注：这一数据信息是我在阅读阮一峰大佬的**[这一片博客](http://www.ruanyifeng.com/blog/2018/08/weekly-issue-17.html)**时获取到的，相信数据的真实性。个人对于这个数据，个人还存在一些疑问。\n>1. 目前我还没有搞清楚该网站如何获得这一数据值的，同时也不清楚该网站如何做到实时同步全球二氧化碳排放量的。\n>2. 这应该是一个估计值，个人感觉实际的二氧化碳排放量肯定是有过之而无不及。\n\n全球变暖已经是活生生的现实。化石燃料的过度使用，温室气体大量排放，滥砍滥发，绿色植被逐年大幅减少，海平面上升... 现在的地球就像是一个天然的`“烤炉”`。\n\n> <p class=\"data-resource\">以下信息，引用自[阮一峰博客](http://www.ruanyifeng.com/blog/2018/08/weekly-issue-17.html)</p>\n>科学家估计，目前的年平均气温比工业革命前已经升高了`1度`。《巴黎气候协议》的目标是，气温升高控制在`2度`，但是成功的希望据说只有`5%`。如果学过统计学，你就知道，`5%`的机会在统计学上可以视作不会发生。现在的计算是，如果人类排放`10000亿吨`二氧化碳，地球就会升高`2度`，千万不要觉得，`2度`不算什么，**[《纽约时报》](https://www.nytimes.com/interactive/2018/08/01/magazine/climate-change-losing-earth.html)**描述了后果：\n>* 升高`2度`：热带珊瑚礁灭绝，海平面上升几米，波斯湾不适合人类居住。\n>* 升高`3度`：北极的森林和大多数沿海城市被淹没。\n>* 升高`4度`：欧洲永久干旱， 中国、印度和孟加拉国大部分地区变成沙漠，美国科罗拉多河接近干涸，美国西南部将不适合居住。\n>* 升高`5度`：人类文明终结。\n\n### 我们到底要拯救谁\n\n第二次工业革命以来，人类社会飞速发展。起初，我们天真地以为地球资源取之不尽用之不竭，各个国家费劲一切力气开发一切可用资源——土地、石油、煤炭、天然气、海洋资源等等，为掠夺资源而发动战争也是屡见不鲜。我们错误地认为所谓位于食物链顶端的自由就是可以随意地拥有，我们陷入迷途肆意地挥洒，我们神仙迷途却毫不清楚、“义无反顾”... 到最后却要穷尽地球的所有... \n\n我们的行为，极大地改变了地球生态，曾经的辉煌变成如今眼前的荒芜。全球气温升高，冰川面积锐减，海平面上升，极端天气骤多，臭氧层破坏，酸雨频发，生物多样性破坏，土地退化及荒漠化，森林面积锐减... 地球，愈来愈伤痕累累...\n\n后来，我们“长大了”，意识到了问题的严重性。政府颁布各种法律禁令，国际组织签订个多项协议公约，目的就是想尽力保护地球生态，而这些行为有一个几乎相同的口号——“保护地球，保护我们赖以生存的家园”。以前觉得这一口号言简意赅、目的明确，知错就改，还是“好孩子”。直到最近，在网上看到下面这样一段话，感触很深。\n\n>比起拯救地球，人类最需要拯救的是自己。地球她并不担心，因为她经历过更严重的灾难，毁灭般的气候变换，五次绝世大爆炸，数次核爆炸，数不清的火山喷发，社会动乱，彗星撞击，难以想象的冰川时期，各大洲错位的情况也时有发生，但是她都挺过来了，而且过得好好的。但，在这45亿年来，地球上96%的水生动物和70%的陆地脊椎动物都灭绝了。\n\n太阳的寿命100亿年，它已经走过了漫长的50亿年，地球也已经46亿岁了。以一个最简单的模型估计，太阳的终结伴随着地球的湮灭，那么地球还有40多亿年的寿命。前45亿年，经历了那么多的“坎坷”，地球依旧好好的，我相信以后的40多亿年，也不会坏到哪去，可这并不代表人类就能一直好好好的。**`对于地球的“一生”来说，人类的出现好似沧海一粟那么渺小，在慢慢长河中，甚至比不上弹指一挥间的短暂。我们的出现，就像你在春日里看到的路边的野花，就像是夜晚昙花那一瞬的闪耀。`** 我们要明白，拯救地球，拯救的不是地球本身，地球也不需要我们来拯救。**`我们要拯救的，是自己，而这其中更多的是对人类自己过往的一种救赎`**。\n\n也许，对于地球来说，在不久的将来，她会回到自己最初的模样，一切归于沉寂，一切会从头来过。而那时，她已失去所有，失去了日出月落，失去了碧海蓝天，失去了草长莺飞，失去了寒梅傲雪。更重要的，她失去了自己的“孩子”，失去了欢声笑语，失去了曾经的辉煌，曾经的一切... 可，她还在,在宇宙的一隅，叹一口长长的太息，哀婉于曾经“孩子”的欲望与迷途...\n\n\n### 一首歌\n\n> 最后，把我最喜欢的一位歌手——**[李健](https://www.baidu.com/link?url=BsltTzlHbDVY83hcXfq3fs1sPLee1fFXhRZperHgpnpGYrvNA1pkm_tIOWp6uwExDNz7hzr-4fK3XXpcLC3cvZElHhODunSKMhXqKqAcjTu&wd=&eqid=a1ae7140000804bc000000035b7167a3)**的一首歌曲**[《深海之寻》](https://baike.baidu.com/item/%E6%B7%B1%E6%B5%B7%E4%B9%8B%E5%AF%BB/18337760?fr=aladdin)**分享给大家。这是李健作为`“国家海洋公益形象大使”`为`“世界海洋日暨中国海洋公益日”`创作的宣传曲。在歌中采用与海洋“对话”式的表达，用反思的方式，写出了自然对人类的失望，人类对自然的亏欠。\n<div id=\"content-ctn\">\n  <div class=\"centerContent\">\n** 深海之寻 **\n作词：李健\n作曲：李健\n编曲：赵兆\n\n这无穷宇宙谁能看得透\n不知不觉中你已经远走\n我以为自由 是随意的拥有\n可是到最后 快一无所有\n我的辉煌让你黯淡了很久\n我的挥洒穷尽了你的所有\n在那拥挤的天空何止乌云密布\n我已经深陷迷途还不清楚\n竟义无反顾\n\n这无边海洋装不下欲望\n每一朵浪花都历经沧桑\n我的辉煌让你黯淡了很久\n我的挥洒穷尽了你的所有\n在那拥挤的天空何止乌云密布\n我已经深陷迷途还不清楚\n竟义无反顾\n\n曾经辉煌的地方如今已荒芜\n一路孤独铺满了你的去处\n在那风平浪静的下面暗流涌动\n我已经踏上征途 狂奔向你\n竟义无反顾\n\nWu~ 这无穷宇宙\nWu~ 谁能看得透\nWu~ 让我奔向你\nWu~ 给你我所有\n  </div>\n </div>\n\n\n\n[1]: /medias/article/journal/temperature-1.jpg\n[2]: /medias/article/journal/temperature-2.jpg\n[3]: /medias/article/journal/arctic.jpg\n[4]: /medias/article/journal/carbon.jpg\n[5]: /medias/article/journal/reserve-time.jpg\n\n<style>\n  #iframe-ctn {\n    padding: 0px;\n    margin: 30px auto 30px;\n    overflow: hidden;\n    width: 800px;\n    height: 95px;\n  }\n  #page-iframe {\n    position: relative;\n    left: 0px;\n    top: -205px;\n  }\n  .data-resource {\n    text-align:right;\n    font-size: 12px;\n    color: #999;\n  }\n  #arctic-pic img {\n    float: left;\n    height: 500px;\n  }\n</style>","source":"_posts/journal-2.md","raw":"---\ntitle: 生命难以承受的“2 ℃\"\ndate: 2018-08-10 16:43:21\ncategories: 日志\ntags: 阅读感悟\n---\n\n### “番茄炒蛋”\n\n近一个月来的西安城高温持续不下，与阴雨绵绵、凉爽怡人的7月初的差距算得上是天冠地屦，近几日的气温用“烁石流金”形容也是毫无夸张之嫌。在七八月份华南华北甚至全国“一片火热”的形势下，西安的温度也算是遥遥领先。当华南华北高温在地图上连上一片时，西安城的气温很多时候就像冬日那傲然的梅花，真可谓一枝独秀，也算是“雄鸡”中心最瞩目的一点。夏季的西安，在高温预报图上就是一个又红又紫，红得发紫的城市。\n\n西安所处地理位置典型的温带季风性气候——夏季高温多雨，冬季寒冷干燥。看起来降水充足，但以个人的感受，西安的高温实在是有过之而无不及。下图是2018年8月13日，中央气象台发布的全国高温预报图，说西安“一枝独秀”、红得发紫，真的是名副其实。\n\n<!--more-->\n\n![中央气象台2018.08.13 06:00:00全国高温预报图][1]\n\n\n下图是2018.07.14 - 2018.08.12全国高温分布图。每年七八月份，不仅是西安城，全国的气温预报图便成了一片又红又紫的“雄鸡”。网友也调侃着说，全国气温图看起来就像是一盘“番茄炒蛋”。\n\n![全国近一个月温度分布图][2]\n\n<p class=\"data-resource\">以上数据来源，[中央气象台](http://www.nmc.cn/)</p>\n\n### 最近的地球\n\n2018年，好像全球都比往年更加“火热”。** `地球，好像发烧了，而且，高烧不退...` **\n\n今年7月初，多个北非国家也出现热浪，撒哈拉沙漠地区最高气温达到51.3℃。世界气象组织说，这应该是阿尔及利亚可靠的温度记录中的最高值。持续的高温同样袭击了整个欧洲，瑞典、西班牙、葡萄牙、法国、意大利、德国、芬兰等几乎所有欧洲国家都出现了历史上罕见的高温天气。地处东欧的波兰，往年被视为避暑好去处，最近却连续遭遇30℃以上罕见高温，最高气温34℃。\n\n>**[北晚新视觉 - 《欧洲多地持续高温：局地或超47℃ 瑞典最高峰冰川融化4米》](http://www.takefoto.cn/viewnews-1532649.html)**\n\n此外，就连北极圈内也出现了罕见的超过30℃的高温，冰川融化，甚至严重威胁到北极熊的生存。茫茫无边的北极圈海面上天空阴沉昏暗，让人窒息，冰冷刺骨的海面上飘着一块孤零零的来自极地的冰山，一只北极熊蜷缩在上面睡着了。饥饿、劳累，但对于它来说，比海更广阔的是内心的孤独...\n\n![比海更广阔的是内心的孤独][3]\n\n>**[澎湃新闻 - 《四大洲同现极端高温北极圈罕见32℃，北极熊或40年内灭绝》](https://www.thepaper.cn/newsDetail_forward_2322066)**\n>**[百度百家号新闻 - 《北极圈出现罕见高温，北极熊将消失？》](https://baijiahao.baidu.com/s?id=1608148193270009243&wfr=spider&for=pc)**\n\n**[这里](https://www.thepaper.cn/newsDetail_forward_2335388)**，有一封来自北极熊的独白信。充满悲伤、孤独和无奈... 人类用了几十年就使几百万年的北极冰川大面积融化... 因饥饿与劳累北极熊溺死在北极冰冷的海水中... 以海豹为主食的北极熊，开始捕食鸟蛋、海豚，甚至撕碎并吃掉自己的孩子... 最后的图文中有一句话**`“不知道人类还记不记得，北极，Arctic，这个词源自希腊语，意思是 —— 被熊照耀的地方...”`** 如今的北极，好像也生病了... 而且，无法康复...\n\n\n### 一串数字\n\n下面这一串数字，访问**[这里](http://trillionthtonne.org/)**，你可以看到它在飞速增长。`6240多亿`（截止于2018.08.13，相信以后会越来越多），粗略估计大约每`2秒`就会增加`1000`。它代表什么？你所拥有的财富的增长？某个国家GDP总量的增长？地球氧气总量的增长？你可能会有很多猜测... \n\n![飞速增长的全球二氧化碳排放总量][4]\n\n<p class=\"data-resource\">数据来源，[这里](http://trillionthtonne.org/)</p>\n\n其实，它代表的是** `自工业化以来，全球范围内人类在化石燃料使用、水泥制造、土地利用等活动中排放的二氧化碳总量，并且在实时更新` **，值得注意的是，该数值的单位是 **`吨`**。这就表示，自工业化以来全球目前排放二氧化碳** `6240多亿吨` **。第一次知道它代表的含义，在看着这飞速增长的数字，我心惊肉跳。我想让它走得慢一些... 我恨不得抓住它，抑制住它。可是，我无能为力，心有余而力不足... 那种焦虑和无助感，真的可以让你抓耳挠心塞。在这个网站页面主体的右下方，还有一个倒计时，目前，预计在2036年2月全球二氧化碳排放量达到10000亿吨，意味着那时全球平均温度较现在升高2℃左右。每一秒看着时间的走近，就让人觉得恐慌，灾难在一步步靠近...\n\n![全球二氧化碳排放量达到10000亿吨倒计时][5]\n\n>笔者注：这一数据信息是我在阅读阮一峰大佬的**[这一片博客](http://www.ruanyifeng.com/blog/2018/08/weekly-issue-17.html)**时获取到的，相信数据的真实性。个人对于这个数据，个人还存在一些疑问。\n>1. 目前我还没有搞清楚该网站如何获得这一数据值的，同时也不清楚该网站如何做到实时同步全球二氧化碳排放量的。\n>2. 这应该是一个估计值，个人感觉实际的二氧化碳排放量肯定是有过之而无不及。\n\n全球变暖已经是活生生的现实。化石燃料的过度使用，温室气体大量排放，滥砍滥发，绿色植被逐年大幅减少，海平面上升... 现在的地球就像是一个天然的`“烤炉”`。\n\n> <p class=\"data-resource\">以下信息，引用自[阮一峰博客](http://www.ruanyifeng.com/blog/2018/08/weekly-issue-17.html)</p>\n>科学家估计，目前的年平均气温比工业革命前已经升高了`1度`。《巴黎气候协议》的目标是，气温升高控制在`2度`，但是成功的希望据说只有`5%`。如果学过统计学，你就知道，`5%`的机会在统计学上可以视作不会发生。现在的计算是，如果人类排放`10000亿吨`二氧化碳，地球就会升高`2度`，千万不要觉得，`2度`不算什么，**[《纽约时报》](https://www.nytimes.com/interactive/2018/08/01/magazine/climate-change-losing-earth.html)**描述了后果：\n>* 升高`2度`：热带珊瑚礁灭绝，海平面上升几米，波斯湾不适合人类居住。\n>* 升高`3度`：北极的森林和大多数沿海城市被淹没。\n>* 升高`4度`：欧洲永久干旱， 中国、印度和孟加拉国大部分地区变成沙漠，美国科罗拉多河接近干涸，美国西南部将不适合居住。\n>* 升高`5度`：人类文明终结。\n\n### 我们到底要拯救谁\n\n第二次工业革命以来，人类社会飞速发展。起初，我们天真地以为地球资源取之不尽用之不竭，各个国家费劲一切力气开发一切可用资源——土地、石油、煤炭、天然气、海洋资源等等，为掠夺资源而发动战争也是屡见不鲜。我们错误地认为所谓位于食物链顶端的自由就是可以随意地拥有，我们陷入迷途肆意地挥洒，我们神仙迷途却毫不清楚、“义无反顾”... 到最后却要穷尽地球的所有... \n\n我们的行为，极大地改变了地球生态，曾经的辉煌变成如今眼前的荒芜。全球气温升高，冰川面积锐减，海平面上升，极端天气骤多，臭氧层破坏，酸雨频发，生物多样性破坏，土地退化及荒漠化，森林面积锐减... 地球，愈来愈伤痕累累...\n\n后来，我们“长大了”，意识到了问题的严重性。政府颁布各种法律禁令，国际组织签订个多项协议公约，目的就是想尽力保护地球生态，而这些行为有一个几乎相同的口号——“保护地球，保护我们赖以生存的家园”。以前觉得这一口号言简意赅、目的明确，知错就改，还是“好孩子”。直到最近，在网上看到下面这样一段话，感触很深。\n\n>比起拯救地球，人类最需要拯救的是自己。地球她并不担心，因为她经历过更严重的灾难，毁灭般的气候变换，五次绝世大爆炸，数次核爆炸，数不清的火山喷发，社会动乱，彗星撞击，难以想象的冰川时期，各大洲错位的情况也时有发生，但是她都挺过来了，而且过得好好的。但，在这45亿年来，地球上96%的水生动物和70%的陆地脊椎动物都灭绝了。\n\n太阳的寿命100亿年，它已经走过了漫长的50亿年，地球也已经46亿岁了。以一个最简单的模型估计，太阳的终结伴随着地球的湮灭，那么地球还有40多亿年的寿命。前45亿年，经历了那么多的“坎坷”，地球依旧好好的，我相信以后的40多亿年，也不会坏到哪去，可这并不代表人类就能一直好好好的。**`对于地球的“一生”来说，人类的出现好似沧海一粟那么渺小，在慢慢长河中，甚至比不上弹指一挥间的短暂。我们的出现，就像你在春日里看到的路边的野花，就像是夜晚昙花那一瞬的闪耀。`** 我们要明白，拯救地球，拯救的不是地球本身，地球也不需要我们来拯救。**`我们要拯救的，是自己，而这其中更多的是对人类自己过往的一种救赎`**。\n\n也许，对于地球来说，在不久的将来，她会回到自己最初的模样，一切归于沉寂，一切会从头来过。而那时，她已失去所有，失去了日出月落，失去了碧海蓝天，失去了草长莺飞，失去了寒梅傲雪。更重要的，她失去了自己的“孩子”，失去了欢声笑语，失去了曾经的辉煌，曾经的一切... 可，她还在,在宇宙的一隅，叹一口长长的太息，哀婉于曾经“孩子”的欲望与迷途...\n\n\n### 一首歌\n\n> 最后，把我最喜欢的一位歌手——**[李健](https://www.baidu.com/link?url=BsltTzlHbDVY83hcXfq3fs1sPLee1fFXhRZperHgpnpGYrvNA1pkm_tIOWp6uwExDNz7hzr-4fK3XXpcLC3cvZElHhODunSKMhXqKqAcjTu&wd=&eqid=a1ae7140000804bc000000035b7167a3)**的一首歌曲**[《深海之寻》](https://baike.baidu.com/item/%E6%B7%B1%E6%B5%B7%E4%B9%8B%E5%AF%BB/18337760?fr=aladdin)**分享给大家。这是李健作为`“国家海洋公益形象大使”`为`“世界海洋日暨中国海洋公益日”`创作的宣传曲。在歌中采用与海洋“对话”式的表达，用反思的方式，写出了自然对人类的失望，人类对自然的亏欠。\n<div id=\"content-ctn\">\n  <div class=\"centerContent\">\n** 深海之寻 **\n作词：李健\n作曲：李健\n编曲：赵兆\n\n这无穷宇宙谁能看得透\n不知不觉中你已经远走\n我以为自由 是随意的拥有\n可是到最后 快一无所有\n我的辉煌让你黯淡了很久\n我的挥洒穷尽了你的所有\n在那拥挤的天空何止乌云密布\n我已经深陷迷途还不清楚\n竟义无反顾\n\n这无边海洋装不下欲望\n每一朵浪花都历经沧桑\n我的辉煌让你黯淡了很久\n我的挥洒穷尽了你的所有\n在那拥挤的天空何止乌云密布\n我已经深陷迷途还不清楚\n竟义无反顾\n\n曾经辉煌的地方如今已荒芜\n一路孤独铺满了你的去处\n在那风平浪静的下面暗流涌动\n我已经踏上征途 狂奔向你\n竟义无反顾\n\nWu~ 这无穷宇宙\nWu~ 谁能看得透\nWu~ 让我奔向你\nWu~ 给你我所有\n  </div>\n </div>\n\n\n\n[1]: /medias/article/journal/temperature-1.jpg\n[2]: /medias/article/journal/temperature-2.jpg\n[3]: /medias/article/journal/arctic.jpg\n[4]: /medias/article/journal/carbon.jpg\n[5]: /medias/article/journal/reserve-time.jpg\n\n<style>\n  #iframe-ctn {\n    padding: 0px;\n    margin: 30px auto 30px;\n    overflow: hidden;\n    width: 800px;\n    height: 95px;\n  }\n  #page-iframe {\n    position: relative;\n    left: 0px;\n    top: -205px;\n  }\n  .data-resource {\n    text-align:right;\n    font-size: 12px;\n    color: #999;\n  }\n  #arctic-pic img {\n    float: left;\n    height: 500px;\n  }\n</style>","slug":"journal-2","published":1,"updated":"2018-09-26T10:42:27.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vfn0006ogsmq946bdf9","content":"<h3 id=\"“番茄炒蛋”\"><a href=\"#“番茄炒蛋”\" class=\"headerlink\" title=\"“番茄炒蛋”\"></a>“番茄炒蛋”</h3><p>近一个月来的西安城高温持续不下，与阴雨绵绵、凉爽怡人的7月初的差距算得上是天冠地屦，近几日的气温用“烁石流金”形容也是毫无夸张之嫌。在七八月份华南华北甚至全国“一片火热”的形势下，西安的温度也算是遥遥领先。当华南华北高温在地图上连上一片时，西安城的气温很多时候就像冬日那傲然的梅花，真可谓一枝独秀，也算是“雄鸡”中心最瞩目的一点。夏季的西安，在高温预报图上就是一个又红又紫，红得发紫的城市。</p>\n<p>西安所处地理位置典型的温带季风性气候——夏季高温多雨，冬季寒冷干燥。看起来降水充足，但以个人的感受，西安的高温实在是有过之而无不及。下图是2018年8月13日，中央气象台发布的全国高温预报图，说西安“一枝独秀”、红得发紫，真的是名副其实。</p>\n<a id=\"more\"></a>\n<p><img src=\"/medias/article/journal/temperature-1.jpg\" alt=\"中央气象台2018.08.13 06:00:00全国高温预报图\"></p>\n<p>下图是2018.07.14 - 2018.08.12全国高温分布图。每年七八月份，不仅是西安城，全国的气温预报图便成了一片又红又紫的“雄鸡”。网友也调侃着说，全国气温图看起来就像是一盘“番茄炒蛋”。</p>\n<p><img src=\"/medias/article/journal/temperature-2.jpg\" alt=\"全国近一个月温度分布图\"></p>\n<p class=\"data-resource\">以上数据来源，<a href=\"http://www.nmc.cn/\" target=\"_blank\" rel=\"noopener\">中央气象台</a></p>\n\n<h3 id=\"最近的地球\"><a href=\"#最近的地球\" class=\"headerlink\" title=\"最近的地球\"></a>最近的地球</h3><p>2018年，好像全球都比往年更加“火热”。<strong> <code>地球，好像发烧了，而且，高烧不退...</code> </strong></p>\n<p>今年7月初，多个北非国家也出现热浪，撒哈拉沙漠地区最高气温达到51.3℃。世界气象组织说，这应该是阿尔及利亚可靠的温度记录中的最高值。持续的高温同样袭击了整个欧洲，瑞典、西班牙、葡萄牙、法国、意大利、德国、芬兰等几乎所有欧洲国家都出现了历史上罕见的高温天气。地处东欧的波兰，往年被视为避暑好去处，最近却连续遭遇30℃以上罕见高温，最高气温34℃。</p>\n<blockquote>\n<p><strong><a href=\"http://www.takefoto.cn/viewnews-1532649.html\" target=\"_blank\" rel=\"noopener\">北晚新视觉 - 《欧洲多地持续高温：局地或超47℃ 瑞典最高峰冰川融化4米》</a></strong></p>\n</blockquote>\n<p>此外，就连北极圈内也出现了罕见的超过30℃的高温，冰川融化，甚至严重威胁到北极熊的生存。茫茫无边的北极圈海面上天空阴沉昏暗，让人窒息，冰冷刺骨的海面上飘着一块孤零零的来自极地的冰山，一只北极熊蜷缩在上面睡着了。饥饿、劳累，但对于它来说，比海更广阔的是内心的孤独…</p>\n<p><img src=\"/medias/article/journal/arctic.jpg\" alt=\"比海更广阔的是内心的孤独\"></p>\n<blockquote>\n<p><strong><a href=\"https://www.thepaper.cn/newsDetail_forward_2322066\" target=\"_blank\" rel=\"noopener\">澎湃新闻 - 《四大洲同现极端高温北极圈罕见32℃，北极熊或40年内灭绝》</a></strong><br><strong><a href=\"https://baijiahao.baidu.com/s?id=1608148193270009243&amp;wfr=spider&amp;for=pc\" target=\"_blank\" rel=\"noopener\">百度百家号新闻 - 《北极圈出现罕见高温，北极熊将消失？》</a></strong></p>\n</blockquote>\n<p><strong><a href=\"https://www.thepaper.cn/newsDetail_forward_2335388\" target=\"_blank\" rel=\"noopener\">这里</a></strong>，有一封来自北极熊的独白信。充满悲伤、孤独和无奈… 人类用了几十年就使几百万年的北极冰川大面积融化… 因饥饿与劳累北极熊溺死在北极冰冷的海水中… 以海豹为主食的北极熊，开始捕食鸟蛋、海豚，甚至撕碎并吃掉自己的孩子… 最后的图文中有一句话<strong><code>“不知道人类还记不记得，北极，Arctic，这个词源自希腊语，意思是 —— 被熊照耀的地方...”</code></strong> 如今的北极，好像也生病了… 而且，无法康复…</p>\n<h3 id=\"一串数字\"><a href=\"#一串数字\" class=\"headerlink\" title=\"一串数字\"></a>一串数字</h3><p>下面这一串数字，访问<strong><a href=\"http://trillionthtonne.org/\" target=\"_blank\" rel=\"noopener\">这里</a></strong>，你可以看到它在飞速增长。<code>6240多亿</code>（截止于2018.08.13，相信以后会越来越多），粗略估计大约每<code>2秒</code>就会增加<code>1000</code>。它代表什么？你所拥有的财富的增长？某个国家GDP总量的增长？地球氧气总量的增长？你可能会有很多猜测… </p>\n<p><img src=\"/medias/article/journal/carbon.jpg\" alt=\"飞速增长的全球二氧化碳排放总量\"></p>\n<p class=\"data-resource\">数据来源，<a href=\"http://trillionthtonne.org/\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n\n<p>其实，它代表的是<strong> <code>自工业化以来，全球范围内人类在化石燃料使用、水泥制造、土地利用等活动中排放的二氧化碳总量，并且在实时更新</code> </strong>，值得注意的是，该数值的单位是 <strong><code>吨</code></strong>。这就表示，自工业化以来全球目前排放二氧化碳<strong> <code>6240多亿吨</code> </strong>。第一次知道它代表的含义，在看着这飞速增长的数字，我心惊肉跳。我想让它走得慢一些… 我恨不得抓住它，抑制住它。可是，我无能为力，心有余而力不足… 那种焦虑和无助感，真的可以让你抓耳挠心塞。在这个网站页面主体的右下方，还有一个倒计时，目前，预计在2036年2月全球二氧化碳排放量达到10000亿吨，意味着那时全球平均温度较现在升高2℃左右。每一秒看着时间的走近，就让人觉得恐慌，灾难在一步步靠近…</p>\n<p><img src=\"/medias/article/journal/reserve-time.jpg\" alt=\"全球二氧化碳排放量达到10000亿吨倒计时\"></p>\n<blockquote>\n<p>笔者注：这一数据信息是我在阅读阮一峰大佬的<strong><a href=\"http://www.ruanyifeng.com/blog/2018/08/weekly-issue-17.html\" target=\"_blank\" rel=\"noopener\">这一片博客</a></strong>时获取到的，相信数据的真实性。个人对于这个数据，个人还存在一些疑问。</p>\n<ol>\n<li>目前我还没有搞清楚该网站如何获得这一数据值的，同时也不清楚该网站如何做到实时同步全球二氧化碳排放量的。</li>\n<li>这应该是一个估计值，个人感觉实际的二氧化碳排放量肯定是有过之而无不及。</li>\n</ol>\n</blockquote>\n<p>全球变暖已经是活生生的现实。化石燃料的过度使用，温室气体大量排放，滥砍滥发，绿色植被逐年大幅减少，海平面上升… 现在的地球就像是一个天然的<code>“烤炉”</code>。</p>\n<blockquote>\n<p></p><p class=\"data-resource\">以下信息，引用自<a href=\"http://www.ruanyifeng.com/blog/2018/08/weekly-issue-17.html\" target=\"_blank\" rel=\"noopener\">阮一峰博客</a></p><br>科学家估计，目前的年平均气温比工业革命前已经升高了<code>1度</code>。《巴黎气候协议》的目标是，气温升高控制在<code>2度</code>，但是成功的希望据说只有<code>5%</code>。如果学过统计学，你就知道，<code>5%</code>的机会在统计学上可以视作不会发生。现在的计算是，如果人类排放<code>10000亿吨</code>二氧化碳，地球就会升高<code>2度</code>，千万不要觉得，<code>2度</code>不算什么，<strong><a href=\"https://www.nytimes.com/interactive/2018/08/01/magazine/climate-change-losing-earth.html\" target=\"_blank\" rel=\"noopener\">《纽约时报》</a></strong>描述了后果：<p></p>\n<ul>\n<li>升高<code>2度</code>：热带珊瑚礁灭绝，海平面上升几米，波斯湾不适合人类居住。</li>\n<li>升高<code>3度</code>：北极的森林和大多数沿海城市被淹没。</li>\n<li>升高<code>4度</code>：欧洲永久干旱， 中国、印度和孟加拉国大部分地区变成沙漠，美国科罗拉多河接近干涸，美国西南部将不适合居住。</li>\n<li>升高<code>5度</code>：人类文明终结。</li>\n</ul>\n</blockquote>\n<h3 id=\"我们到底要拯救谁\"><a href=\"#我们到底要拯救谁\" class=\"headerlink\" title=\"我们到底要拯救谁\"></a>我们到底要拯救谁</h3><p>第二次工业革命以来，人类社会飞速发展。起初，我们天真地以为地球资源取之不尽用之不竭，各个国家费劲一切力气开发一切可用资源——土地、石油、煤炭、天然气、海洋资源等等，为掠夺资源而发动战争也是屡见不鲜。我们错误地认为所谓位于食物链顶端的自由就是可以随意地拥有，我们陷入迷途肆意地挥洒，我们神仙迷途却毫不清楚、“义无反顾”… 到最后却要穷尽地球的所有… </p>\n<p>我们的行为，极大地改变了地球生态，曾经的辉煌变成如今眼前的荒芜。全球气温升高，冰川面积锐减，海平面上升，极端天气骤多，臭氧层破坏，酸雨频发，生物多样性破坏，土地退化及荒漠化，森林面积锐减… 地球，愈来愈伤痕累累…</p>\n<p>后来，我们“长大了”，意识到了问题的严重性。政府颁布各种法律禁令，国际组织签订个多项协议公约，目的就是想尽力保护地球生态，而这些行为有一个几乎相同的口号——“保护地球，保护我们赖以生存的家园”。以前觉得这一口号言简意赅、目的明确，知错就改，还是“好孩子”。直到最近，在网上看到下面这样一段话，感触很深。</p>\n<blockquote>\n<p>比起拯救地球，人类最需要拯救的是自己。地球她并不担心，因为她经历过更严重的灾难，毁灭般的气候变换，五次绝世大爆炸，数次核爆炸，数不清的火山喷发，社会动乱，彗星撞击，难以想象的冰川时期，各大洲错位的情况也时有发生，但是她都挺过来了，而且过得好好的。但，在这45亿年来，地球上96%的水生动物和70%的陆地脊椎动物都灭绝了。</p>\n</blockquote>\n<p>太阳的寿命100亿年，它已经走过了漫长的50亿年，地球也已经46亿岁了。以一个最简单的模型估计，太阳的终结伴随着地球的湮灭，那么地球还有40多亿年的寿命。前45亿年，经历了那么多的“坎坷”，地球依旧好好的，我相信以后的40多亿年，也不会坏到哪去，可这并不代表人类就能一直好好好的。<strong><code>对于地球的“一生”来说，人类的出现好似沧海一粟那么渺小，在慢慢长河中，甚至比不上弹指一挥间的短暂。我们的出现，就像你在春日里看到的路边的野花，就像是夜晚昙花那一瞬的闪耀。</code></strong> 我们要明白，拯救地球，拯救的不是地球本身，地球也不需要我们来拯救。<strong><code>我们要拯救的，是自己，而这其中更多的是对人类自己过往的一种救赎</code></strong>。</p>\n<p>也许，对于地球来说，在不久的将来，她会回到自己最初的模样，一切归于沉寂，一切会从头来过。而那时，她已失去所有，失去了日出月落，失去了碧海蓝天，失去了草长莺飞，失去了寒梅傲雪。更重要的，她失去了自己的“孩子”，失去了欢声笑语，失去了曾经的辉煌，曾经的一切… 可，她还在,在宇宙的一隅，叹一口长长的太息，哀婉于曾经“孩子”的欲望与迷途…</p>\n<h3 id=\"一首歌\"><a href=\"#一首歌\" class=\"headerlink\" title=\"一首歌\"></a>一首歌</h3><blockquote>\n<p>最后，把我最喜欢的一位歌手——<strong><a href=\"https://www.baidu.com/link?url=BsltTzlHbDVY83hcXfq3fs1sPLee1fFXhRZperHgpnpGYrvNA1pkm_tIOWp6uwExDNz7hzr-4fK3XXpcLC3cvZElHhODunSKMhXqKqAcjTu&amp;wd=&amp;eqid=a1ae7140000804bc000000035b7167a3\" target=\"_blank\" rel=\"noopener\">李健</a></strong>的一首歌曲<strong><a href=\"https://baike.baidu.com/item/%E6%B7%B1%E6%B5%B7%E4%B9%8B%E5%AF%BB/18337760?fr=aladdin\" target=\"_blank\" rel=\"noopener\">《深海之寻》</a></strong>分享给大家。这是李健作为<code>“国家海洋公益形象大使”</code>为<code>“世界海洋日暨中国海洋公益日”</code>创作的宣传曲。在歌中采用与海洋“对话”式的表达，用反思的方式，写出了自然对人类的失望，人类对自然的亏欠。</p>\n</blockquote>\n<div id=\"content-ctn\"><br>  <div class=\"centerContent\"><br><strong> 深海之寻 </strong><br>作词：李健<br>作曲：李健<br>编曲：赵兆<br><br>这无穷宇宙谁能看得透<br>不知不觉中你已经远走<br>我以为自由 是随意的拥有<br>可是到最后 快一无所有<br>我的辉煌让你黯淡了很久<br>我的挥洒穷尽了你的所有<br>在那拥挤的天空何止乌云密布<br>我已经深陷迷途还不清楚<br>竟义无反顾<br><br>这无边海洋装不下欲望<br>每一朵浪花都历经沧桑<br>我的辉煌让你黯淡了很久<br>我的挥洒穷尽了你的所有<br>在那拥挤的天空何止乌云密布<br>我已经深陷迷途还不清楚<br>竟义无反顾<br><br>曾经辉煌的地方如今已荒芜<br>一路孤独铺满了你的去处<br>在那风平浪静的下面暗流涌动<br>我已经踏上征途 狂奔向你<br>竟义无反顾<br><br>Wu~ 这无穷宇宙<br>Wu~ 谁能看得透<br>Wu~ 让我奔向你<br>Wu~ 给你我所有<br>  </div><br> </div>\n\n\n\n<style>\n  #iframe-ctn {\n    padding: 0px;\n    margin: 30px auto 30px;\n    overflow: hidden;\n    width: 800px;\n    height: 95px;\n  }\n  #page-iframe {\n    position: relative;\n    left: 0px;\n    top: -205px;\n  }\n  .data-resource {\n    text-align:right;\n    font-size: 12px;\n    color: #999;\n  }\n  #arctic-pic img {\n    float: left;\n    height: 500px;\n  }\n</style>","site":{"data":{}},"excerpt":"<h3 id=\"“番茄炒蛋”\"><a href=\"#“番茄炒蛋”\" class=\"headerlink\" title=\"“番茄炒蛋”\"></a>“番茄炒蛋”</h3><p>近一个月来的西安城高温持续不下，与阴雨绵绵、凉爽怡人的7月初的差距算得上是天冠地屦，近几日的气温用“烁石流金”形容也是毫无夸张之嫌。在七八月份华南华北甚至全国“一片火热”的形势下，西安的温度也算是遥遥领先。当华南华北高温在地图上连上一片时，西安城的气温很多时候就像冬日那傲然的梅花，真可谓一枝独秀，也算是“雄鸡”中心最瞩目的一点。夏季的西安，在高温预报图上就是一个又红又紫，红得发紫的城市。</p>\n<p>西安所处地理位置典型的温带季风性气候——夏季高温多雨，冬季寒冷干燥。看起来降水充足，但以个人的感受，西安的高温实在是有过之而无不及。下图是2018年8月13日，中央气象台发布的全国高温预报图，说西安“一枝独秀”、红得发紫，真的是名副其实。</p>","more":"<p><img src=\"/medias/article/journal/temperature-1.jpg\" alt=\"中央气象台2018.08.13 06:00:00全国高温预报图\"></p>\n<p>下图是2018.07.14 - 2018.08.12全国高温分布图。每年七八月份，不仅是西安城，全国的气温预报图便成了一片又红又紫的“雄鸡”。网友也调侃着说，全国气温图看起来就像是一盘“番茄炒蛋”。</p>\n<p><img src=\"/medias/article/journal/temperature-2.jpg\" alt=\"全国近一个月温度分布图\"></p>\n<p class=\"data-resource\">以上数据来源，<a href=\"http://www.nmc.cn/\" target=\"_blank\" rel=\"noopener\">中央气象台</a></p>\n\n<h3 id=\"最近的地球\"><a href=\"#最近的地球\" class=\"headerlink\" title=\"最近的地球\"></a>最近的地球</h3><p>2018年，好像全球都比往年更加“火热”。<strong> <code>地球，好像发烧了，而且，高烧不退...</code> </strong></p>\n<p>今年7月初，多个北非国家也出现热浪，撒哈拉沙漠地区最高气温达到51.3℃。世界气象组织说，这应该是阿尔及利亚可靠的温度记录中的最高值。持续的高温同样袭击了整个欧洲，瑞典、西班牙、葡萄牙、法国、意大利、德国、芬兰等几乎所有欧洲国家都出现了历史上罕见的高温天气。地处东欧的波兰，往年被视为避暑好去处，最近却连续遭遇30℃以上罕见高温，最高气温34℃。</p>\n<blockquote>\n<p><strong><a href=\"http://www.takefoto.cn/viewnews-1532649.html\" target=\"_blank\" rel=\"noopener\">北晚新视觉 - 《欧洲多地持续高温：局地或超47℃ 瑞典最高峰冰川融化4米》</a></strong></p>\n</blockquote>\n<p>此外，就连北极圈内也出现了罕见的超过30℃的高温，冰川融化，甚至严重威胁到北极熊的生存。茫茫无边的北极圈海面上天空阴沉昏暗，让人窒息，冰冷刺骨的海面上飘着一块孤零零的来自极地的冰山，一只北极熊蜷缩在上面睡着了。饥饿、劳累，但对于它来说，比海更广阔的是内心的孤独…</p>\n<p><img src=\"/medias/article/journal/arctic.jpg\" alt=\"比海更广阔的是内心的孤独\"></p>\n<blockquote>\n<p><strong><a href=\"https://www.thepaper.cn/newsDetail_forward_2322066\" target=\"_blank\" rel=\"noopener\">澎湃新闻 - 《四大洲同现极端高温北极圈罕见32℃，北极熊或40年内灭绝》</a></strong><br><strong><a href=\"https://baijiahao.baidu.com/s?id=1608148193270009243&amp;wfr=spider&amp;for=pc\" target=\"_blank\" rel=\"noopener\">百度百家号新闻 - 《北极圈出现罕见高温，北极熊将消失？》</a></strong></p>\n</blockquote>\n<p><strong><a href=\"https://www.thepaper.cn/newsDetail_forward_2335388\" target=\"_blank\" rel=\"noopener\">这里</a></strong>，有一封来自北极熊的独白信。充满悲伤、孤独和无奈… 人类用了几十年就使几百万年的北极冰川大面积融化… 因饥饿与劳累北极熊溺死在北极冰冷的海水中… 以海豹为主食的北极熊，开始捕食鸟蛋、海豚，甚至撕碎并吃掉自己的孩子… 最后的图文中有一句话<strong><code>“不知道人类还记不记得，北极，Arctic，这个词源自希腊语，意思是 —— 被熊照耀的地方...”</code></strong> 如今的北极，好像也生病了… 而且，无法康复…</p>\n<h3 id=\"一串数字\"><a href=\"#一串数字\" class=\"headerlink\" title=\"一串数字\"></a>一串数字</h3><p>下面这一串数字，访问<strong><a href=\"http://trillionthtonne.org/\" target=\"_blank\" rel=\"noopener\">这里</a></strong>，你可以看到它在飞速增长。<code>6240多亿</code>（截止于2018.08.13，相信以后会越来越多），粗略估计大约每<code>2秒</code>就会增加<code>1000</code>。它代表什么？你所拥有的财富的增长？某个国家GDP总量的增长？地球氧气总量的增长？你可能会有很多猜测… </p>\n<p><img src=\"/medias/article/journal/carbon.jpg\" alt=\"飞速增长的全球二氧化碳排放总量\"></p>\n<p class=\"data-resource\">数据来源，<a href=\"http://trillionthtonne.org/\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n\n<p>其实，它代表的是<strong> <code>自工业化以来，全球范围内人类在化石燃料使用、水泥制造、土地利用等活动中排放的二氧化碳总量，并且在实时更新</code> </strong>，值得注意的是，该数值的单位是 <strong><code>吨</code></strong>。这就表示，自工业化以来全球目前排放二氧化碳<strong> <code>6240多亿吨</code> </strong>。第一次知道它代表的含义，在看着这飞速增长的数字，我心惊肉跳。我想让它走得慢一些… 我恨不得抓住它，抑制住它。可是，我无能为力，心有余而力不足… 那种焦虑和无助感，真的可以让你抓耳挠心塞。在这个网站页面主体的右下方，还有一个倒计时，目前，预计在2036年2月全球二氧化碳排放量达到10000亿吨，意味着那时全球平均温度较现在升高2℃左右。每一秒看着时间的走近，就让人觉得恐慌，灾难在一步步靠近…</p>\n<p><img src=\"/medias/article/journal/reserve-time.jpg\" alt=\"全球二氧化碳排放量达到10000亿吨倒计时\"></p>\n<blockquote>\n<p>笔者注：这一数据信息是我在阅读阮一峰大佬的<strong><a href=\"http://www.ruanyifeng.com/blog/2018/08/weekly-issue-17.html\" target=\"_blank\" rel=\"noopener\">这一片博客</a></strong>时获取到的，相信数据的真实性。个人对于这个数据，个人还存在一些疑问。</p>\n<ol>\n<li>目前我还没有搞清楚该网站如何获得这一数据值的，同时也不清楚该网站如何做到实时同步全球二氧化碳排放量的。</li>\n<li>这应该是一个估计值，个人感觉实际的二氧化碳排放量肯定是有过之而无不及。</li>\n</ol>\n</blockquote>\n<p>全球变暖已经是活生生的现实。化石燃料的过度使用，温室气体大量排放，滥砍滥发，绿色植被逐年大幅减少，海平面上升… 现在的地球就像是一个天然的<code>“烤炉”</code>。</p>\n<blockquote>\n<p></p><p class=\"data-resource\">以下信息，引用自<a href=\"http://www.ruanyifeng.com/blog/2018/08/weekly-issue-17.html\" target=\"_blank\" rel=\"noopener\">阮一峰博客</a></p><br>科学家估计，目前的年平均气温比工业革命前已经升高了<code>1度</code>。《巴黎气候协议》的目标是，气温升高控制在<code>2度</code>，但是成功的希望据说只有<code>5%</code>。如果学过统计学，你就知道，<code>5%</code>的机会在统计学上可以视作不会发生。现在的计算是，如果人类排放<code>10000亿吨</code>二氧化碳，地球就会升高<code>2度</code>，千万不要觉得，<code>2度</code>不算什么，<strong><a href=\"https://www.nytimes.com/interactive/2018/08/01/magazine/climate-change-losing-earth.html\" target=\"_blank\" rel=\"noopener\">《纽约时报》</a></strong>描述了后果：<p></p>\n<ul>\n<li>升高<code>2度</code>：热带珊瑚礁灭绝，海平面上升几米，波斯湾不适合人类居住。</li>\n<li>升高<code>3度</code>：北极的森林和大多数沿海城市被淹没。</li>\n<li>升高<code>4度</code>：欧洲永久干旱， 中国、印度和孟加拉国大部分地区变成沙漠，美国科罗拉多河接近干涸，美国西南部将不适合居住。</li>\n<li>升高<code>5度</code>：人类文明终结。</li>\n</ul>\n</blockquote>\n<h3 id=\"我们到底要拯救谁\"><a href=\"#我们到底要拯救谁\" class=\"headerlink\" title=\"我们到底要拯救谁\"></a>我们到底要拯救谁</h3><p>第二次工业革命以来，人类社会飞速发展。起初，我们天真地以为地球资源取之不尽用之不竭，各个国家费劲一切力气开发一切可用资源——土地、石油、煤炭、天然气、海洋资源等等，为掠夺资源而发动战争也是屡见不鲜。我们错误地认为所谓位于食物链顶端的自由就是可以随意地拥有，我们陷入迷途肆意地挥洒，我们神仙迷途却毫不清楚、“义无反顾”… 到最后却要穷尽地球的所有… </p>\n<p>我们的行为，极大地改变了地球生态，曾经的辉煌变成如今眼前的荒芜。全球气温升高，冰川面积锐减，海平面上升，极端天气骤多，臭氧层破坏，酸雨频发，生物多样性破坏，土地退化及荒漠化，森林面积锐减… 地球，愈来愈伤痕累累…</p>\n<p>后来，我们“长大了”，意识到了问题的严重性。政府颁布各种法律禁令，国际组织签订个多项协议公约，目的就是想尽力保护地球生态，而这些行为有一个几乎相同的口号——“保护地球，保护我们赖以生存的家园”。以前觉得这一口号言简意赅、目的明确，知错就改，还是“好孩子”。直到最近，在网上看到下面这样一段话，感触很深。</p>\n<blockquote>\n<p>比起拯救地球，人类最需要拯救的是自己。地球她并不担心，因为她经历过更严重的灾难，毁灭般的气候变换，五次绝世大爆炸，数次核爆炸，数不清的火山喷发，社会动乱，彗星撞击，难以想象的冰川时期，各大洲错位的情况也时有发生，但是她都挺过来了，而且过得好好的。但，在这45亿年来，地球上96%的水生动物和70%的陆地脊椎动物都灭绝了。</p>\n</blockquote>\n<p>太阳的寿命100亿年，它已经走过了漫长的50亿年，地球也已经46亿岁了。以一个最简单的模型估计，太阳的终结伴随着地球的湮灭，那么地球还有40多亿年的寿命。前45亿年，经历了那么多的“坎坷”，地球依旧好好的，我相信以后的40多亿年，也不会坏到哪去，可这并不代表人类就能一直好好好的。<strong><code>对于地球的“一生”来说，人类的出现好似沧海一粟那么渺小，在慢慢长河中，甚至比不上弹指一挥间的短暂。我们的出现，就像你在春日里看到的路边的野花，就像是夜晚昙花那一瞬的闪耀。</code></strong> 我们要明白，拯救地球，拯救的不是地球本身，地球也不需要我们来拯救。<strong><code>我们要拯救的，是自己，而这其中更多的是对人类自己过往的一种救赎</code></strong>。</p>\n<p>也许，对于地球来说，在不久的将来，她会回到自己最初的模样，一切归于沉寂，一切会从头来过。而那时，她已失去所有，失去了日出月落，失去了碧海蓝天，失去了草长莺飞，失去了寒梅傲雪。更重要的，她失去了自己的“孩子”，失去了欢声笑语，失去了曾经的辉煌，曾经的一切… 可，她还在,在宇宙的一隅，叹一口长长的太息，哀婉于曾经“孩子”的欲望与迷途…</p>\n<h3 id=\"一首歌\"><a href=\"#一首歌\" class=\"headerlink\" title=\"一首歌\"></a>一首歌</h3><blockquote>\n<p>最后，把我最喜欢的一位歌手——<strong><a href=\"https://www.baidu.com/link?url=BsltTzlHbDVY83hcXfq3fs1sPLee1fFXhRZperHgpnpGYrvNA1pkm_tIOWp6uwExDNz7hzr-4fK3XXpcLC3cvZElHhODunSKMhXqKqAcjTu&amp;wd=&amp;eqid=a1ae7140000804bc000000035b7167a3\" target=\"_blank\" rel=\"noopener\">李健</a></strong>的一首歌曲<strong><a href=\"https://baike.baidu.com/item/%E6%B7%B1%E6%B5%B7%E4%B9%8B%E5%AF%BB/18337760?fr=aladdin\" target=\"_blank\" rel=\"noopener\">《深海之寻》</a></strong>分享给大家。这是李健作为<code>“国家海洋公益形象大使”</code>为<code>“世界海洋日暨中国海洋公益日”</code>创作的宣传曲。在歌中采用与海洋“对话”式的表达，用反思的方式，写出了自然对人类的失望，人类对自然的亏欠。</p>\n</blockquote>\n<div id=\"content-ctn\"><br>  <div class=\"centerContent\"><br><strong> 深海之寻 </strong><br>作词：李健<br>作曲：李健<br>编曲：赵兆<br><br>这无穷宇宙谁能看得透<br>不知不觉中你已经远走<br>我以为自由 是随意的拥有<br>可是到最后 快一无所有<br>我的辉煌让你黯淡了很久<br>我的挥洒穷尽了你的所有<br>在那拥挤的天空何止乌云密布<br>我已经深陷迷途还不清楚<br>竟义无反顾<br><br>这无边海洋装不下欲望<br>每一朵浪花都历经沧桑<br>我的辉煌让你黯淡了很久<br>我的挥洒穷尽了你的所有<br>在那拥挤的天空何止乌云密布<br>我已经深陷迷途还不清楚<br>竟义无反顾<br><br>曾经辉煌的地方如今已荒芜<br>一路孤独铺满了你的去处<br>在那风平浪静的下面暗流涌动<br>我已经踏上征途 狂奔向你<br>竟义无反顾<br><br>Wu~ 这无穷宇宙<br>Wu~ 谁能看得透<br>Wu~ 让我奔向你<br>Wu~ 给你我所有<br>  </div><br> </div>\n\n\n\n<style>\n  #iframe-ctn {\n    padding: 0px;\n    margin: 30px auto 30px;\n    overflow: hidden;\n    width: 800px;\n    height: 95px;\n  }\n  #page-iframe {\n    position: relative;\n    left: 0px;\n    top: -205px;\n  }\n  .data-resource {\n    text-align:right;\n    font-size: 12px;\n    color: #999;\n  }\n  #arctic-pic img {\n    float: left;\n    height: 500px;\n  }\n</style>"},{"title":"你的工作是对生命的极大浪费","date":"2018-08-01T01:26:11.000Z","_content":"\n### 序言\n\n> 这篇文章有一些桥段是我生活的影子，但本文的主人公完全虚构，不代表我和周围任何一个同事朋友。文章内容是我根据自己的经历更多是和不同朋友交流时了解到的加工而来。文章没有什么华丽的词藻，内容平铺直叙，但是我相信读下去你也许能在其中找到自己的影子或者是曾经熟悉的一幕。更多的是文章带有一些`“魔幻”`色彩，就是这一点点的`“魔幻”`成分才是文章中最大的暗示和思考。希望有兴趣的朋友能读下去，谢谢大家的支持！\n\n### 正文\n\n窗外，已经倾泻了一整夜的雨好像还是没有停下来的迹象。雨声伴着街道上汽车急促的鸣笛声再夹杂着发动机的轰鸣声传入屋内，又是一个繁忙嘈杂的早晨。窗内，昏昏沉沉，还在睡梦中的欧阳面色有些凝重，他应该又做梦了...\n\n<!--more-->\n\n经济管理专业的欧阳，大学毕业后选择留在当地的一家民营私企从事行政相关的工作。平时就和一个朋友住在一起合租的小区公寓内。最近公司业务繁重，经常加班，他连续好几天加班到很晚，最近睡眠质量也不是很好。欧阳计划着，忙过这一阵，出去转一转，放松放松。\n\n已经响过三次闹铃的手机再次响起，欧阳凭着仅仅清醒的些许意识，用手在枕边、枕头下一次次地摸索试探着，终于，在被窝里找到了“吵闹”了半天的手机。他缓缓睁开眼睛，眼皮重的就像是压在眼睛上的两座大山，双眼迷离，看了下时间 —— 2018年7月30日，早上8:00整。按下最后一遍闹铃开关，拖着“灌了铅”后又不听使唤的身躯，欧阳起身坐在床边，又闭上了眼睛，睁眼... 闭眼... 再睁眼... 每天起床就是一场持久的他和“周公”与“梦想”的拉锯战。一轮轮的交锋后，欧阳睁开眼睛，下床，懒散地拖着拖鞋，拿起洗漱用品，拖沓着身体走到卫生间，打开水龙头，欧阳看着镜子里的人，陌生又熟悉... 水漫出牙杯好一会儿，他才回过神，牙膏被肆意地挤在牙刷上，伸到嘴里漫无目的地游走一会儿，漱口。用冷水打湿面部，快速地搓一搓，反复几次，擦干，洗漱完毕。一瓶快要被挤得变形的“大宝”，勉勉强强地挤出一点到手上，在脸上四面八方地搓一搓，算是给他原本还帅气的脸上唯一“精致”的保养。穿上衣服，换上鞋，背上包，出门... 一天的工作又要开始了...\n\n公寓电梯口，几乎层层都停的电梯好不容易停在自己面前，人快要挤满了... 欧阳挤进电梯，昨天好像也是这些人... 因为住在同一栋，遇到很正常，欧阳也没有多想。而所有人都像极了刚刚镜子里的自己，面无表情，睡眼惺忪，可能甚至都有人不知道电梯里又多了一个他。电梯下行，人越来越多，狭小的空间里越来越拥挤，早些进来的人也越来越着急。终于，几分钟过去，到了一层，所有人都急匆匆地涌出电梯，向小区门口赶去。欧阳似乎不善于争抢，踉踉跄跄的最后一个挤了出来。\n\n外面还下着雨，公司离公寓说远不远，说近，将近5公里的距离，开“11路”走过去也不现实，况且早上时间本就不充裕。挤公交，住处到公司没有直达车，倒车、等车的时间换做骑车他骑个来回，这就很尴尬了... 所以，上班一年多以来，不论春夏秋冬，刮风下雨还是下雪，他都是骑车上班，也练就了一手撑伞一手骑车的“绝技”。撑着伞，在小区门口东张西望，不凑巧，今天运气不佳，“坐骑”被抢光了。欧阳住的小区是工薪族聚集地，一个小区八成左右都是上班族，每天早上稍微晚点,门口的共享单车就没你的份了。他也习以为常，老样子，沿着去公司的路先开“11路”吧，运气好路上还能捡到“宝”...几分钟后，他在街角发现一辆“某拜”，急匆匆赶过去，还没到跟前，被别人“截胡”了... 看着那人，欧阳脸上就是一幅复制版的“尴尬又不失礼貌的微笑”的表情包。再走一段路，又看见一辆，欧阳冲了过去，再被“截胡”的话今天就要迟到了！还好，没人和他抢，掏出手机，打开车锁，跨上车，刚骑没几米，发现后车轮有点瓢...“点儿真背！”，欧阳嘴里嘀咕着，“算了，赶时间，凑活着骑”，欧阳一手撑着伞，一手骑车把着方向，一路“哐啷...哐啷...”地往公司赶去... 一路晃荡，欧阳边骑边想：“早上看手机，今天是几号来着？”他在盘算着还有几天能休息？什么时候能放假，他想出去走走。一个不留神，车轮好像压到一块硬硬的东西，加上雨天路滑和这不争气的“坐骑”，欧阳连人带车就要摔倒在地上...\n\n一瞬间，躺在床上的欧阳睁开眼睛，一身冷汗... 幸亏，幸亏，原来是个梦... 他看了一眼手机，2018年7月30日，早上8点10分，星期一。“靠！要迟到了！”，他下意识地喊了一句。着急忙慌穿上拖鞋，拿起洗漱用品来到卫生间，镜子里的自己依旧陌生又熟悉，这场景好像在哪见过？哪有功夫想那么多，同样的步骤，刷牙，洗脸，换衣服，背上包，出门，挤进依旧人满为患的电梯下楼，来到小区门口“抢”到一辆单车，今天还算幸运。一路狂飙来到公司楼下，电梯口长长的队伍，欧阳心里暗想：“妹的，又要迟到了...”。夏天高温，电梯里又闷又热，各种“迷人”的汗味混杂着各式早餐的味道，有点辣眼睛...\n\n走进公司，伸手去打卡的瞬间，欧阳楞了一下，“咦，是不是已经打过卡了？”很快，他就否定了自己这个愚蠢的疑问。今天刚到公司，怎么可能打过卡？过糊涂了？没再多想，欧阳朝着自己的工位走了过去。跟往常一样，和同事打过招呼之后，欧阳坐在工位上，一刹那好像回到了昨天。“昨天同样如此坐在这，就好像是几小时甚至几分钟前的事”，欧阳心里一阵感叹... 看着电脑屏幕上隐约倒映出来的自己的脸，越看越陌生，越看越不像自己。毕业一年多来，由于工作和生活的压力，欧阳的确看起来憔悴了许多。每天的工作排得满满当当，加班几乎成了家常便饭，工作到凌晨一两点也是时不时会有的事。慢慢的，他也适应习惯了，唯一的就是身体逐渐消瘦了下来，还好，总体状况倒也健康。\n\n“欧阳！”，背后的声音才让他回过神来，是老大 —— 一个最近让他烦透也恶心透了的人。平时大小事都不管，关键时刻总爱抛头露面装个13，没事总爱跪舔上级，最主要的，时不时话语中还不尊重同事。以前没发现，日子久了，欧阳真的是看不惯这种自以为是又没有素质的人，越看越觉得恶心。但，人家是领导，能有什么办法...? “昨天让你准备的材料真被好了没？今天郑总开会要用呢！”讨厌归讨厌，欧阳还是一脸不悲不喜的回到：“好了...” 他顺手把材料递过去，老大转身的时候欧阳一脸不屑的竖起中指。忙碌的一天又要开始了...欧阳像往常一样东奔西跑，前答后应，忙个不停，而这，只是他工作的日常罢了...\n\n好不容易熬到中午，可以喘口气了。公司中午有两个小时的休息时间，也是白天唯一能放松的时段。七八月份，正是一年中最热的时候，欧阳和同事一起在楼下的小店里买了一份九块钱的快餐，因为公司能吹空调就带回了公司，坐在工位上开始了自己的午餐时间。一份快餐，三四个菜，荤腥少的可怜，吃饱可以，但毫无质量可言。十几分钟后，一天的主食也就结束了，简单收拾停当，欧阳趴在工位上玩起了手机，这是他一天中为数不多可以了解到“外面世界”的机会。刷一刷各类新闻，看一看明星八卦，欧阳又在盘算着，希望忙过这一段能出去转一转。毕竟，世界那么大，他也想去看看... 搁下手机，放下座椅靠背，躺下去，很快他就睡着了...\n\n“叮铃铃铃...”，一阵铃声在耳边响起，欧阳睁开眼睛确是傻了眼，“我靠！什么情况？怎么还躺在床上！？” 欧阳像见鬼了一样不敢相信眼前的自己竟然还躺在公寓的床上！“玩什么？‘盗梦空间’么？梦中梦！？还是...现在还是在做梦？”欧阳脑子飞转，却怎么也想不明白，刚才梦里的一切也太真实了吧！越像越瘆得慌，欧阳学电视里掐了一下自己，“靠，真的疼，不是梦...”拿起手机看了看时间，2018年7月30日，早上8:00整,到了上班的时间。上班第一，欧阳也没敢再想太多，还是每天按部就班的流程，洗漱，换衣服，出门，挤电梯，抢“坐骑”... 欧阳一路赶到公司，又开始了一天的忙碌...\n\n“欧阳，这堆报表按日期整理一下！”，“欧阳，这些财报一会给郑总送过去！”，“欧阳，公司该买电了！”，“欧阳，最近招聘季，注意注意有没有求职者应聘！”，“欧阳，明天张总要过来，提前联系一下！”，“欧阳”，“欧阳”...  因为公司规模不大，一个人顶两个人用，加上欧阳本身又比较勤恳办事也靠谱，所以作为行政岗的欧阳其实做了很多非本岗位的事情。就这样不可开交，“前赴后继”，等大事小事真正忙完又将近晚上11点了。欧阳看着窗外的夜色，街道上车水马龙黑，远处灯火阑珊，渐渐地他的眼神有些迷离。黑夜就像是深渊，盯着太久了，就出不来了，欧阳陷进去，沉思了很久.....\n\n回过神来，欧阳收拾收拾工位，关了电脑，关上公司大门，乘着电梯下楼去了... 刚出写字楼，温热的风还在静静的吹，因为时间太晚，视野里已经找不到共享单车的踪迹，欧阳沿着回去的路，独自一人，慢慢地往回走... 回到公寓的时候已经近子夜时分了，夏天的夜晚温度依旧不低，这一路走来一身黏腻，卸下一身疲惫，欧阳简单地冲了个凉就躺下了。很快，他睡着了... 明天，又是普通却繁忙的一天，所有的一切还会继续...\n\n当清晨的第一缕阳光划破天际，窗外，雨水好像早已停歇，鸣笛声和发动机的声音依旧“热热闹闹”。窗内，光线还是那么的昏暗。欧阳被最后一遍闹铃叫醒，惺忪的睡眼慢慢睁开，关掉闹钟，当看到手机上显示的时间，欧阳怔了一下，瞳孔瞬间扩大。他双手颤抖着把手机拿进，白色的眼球上瞬间布满血丝，全身寒毛卓竖，因为，手机上赫然是显示着时间：2028年7月31日，早上8:00整，星期一......\n\n![盗梦空间-旋转的陀螺][1]\n\n### 后记\n\n> 谢谢您能读完这篇文章。就像`“序言”`中全所言，全文内容并不华丽，但略带`“魔幻”`的`“盗梦空间”`情节，是文章最大的暗示，也是最发人深省的部分。主人公欧阳一天中总感觉很多事似乎刚发生，很多场景也很熟悉，其实是因为他每一天都在重复着相同的事情，被工作占据了几乎所有的生活，所以脑海中只有这些事情记忆最深刻。还有隐藏的一点，按照逻辑全文看似几乎都发生在2018年7月30日这一天，其实这一天只是欧阳一天天工作生活的一个缩影和循环。每一次从梦中醒来，实际暗示着已经过去了一天甚至是很多天。直到最后，欧阳再一次醒来，才发现，时间飞逝，已经是10年之后的2028年了。\n\n> 其实很多时候，我们会发现繁忙的工作和沉重的生活压力，让我们每天都过得失去了色彩，更甚至我们每天都在重复做着几乎相同的事情，日复一日...... 转眼间，可能就是几年甚至十几年。这也是现代人经常感叹时间很快的一个重要原因。所以，希望大家能在繁重的工作之余，给自己的生活增添一抹亮丽的色彩。毕竟，这个世界以及来到这个世界的幸运从来不值得被我们辜负。\n\n\n[1]: /medias/article/journal/timg.gif","source":"_posts/journal-1.md","raw":"---\ntitle: 你的工作是对生命的极大浪费\ndate: 2018-08-01 09:26:11\ncategories: 日志\ntags: 生活工作\n---\n\n### 序言\n\n> 这篇文章有一些桥段是我生活的影子，但本文的主人公完全虚构，不代表我和周围任何一个同事朋友。文章内容是我根据自己的经历更多是和不同朋友交流时了解到的加工而来。文章没有什么华丽的词藻，内容平铺直叙，但是我相信读下去你也许能在其中找到自己的影子或者是曾经熟悉的一幕。更多的是文章带有一些`“魔幻”`色彩，就是这一点点的`“魔幻”`成分才是文章中最大的暗示和思考。希望有兴趣的朋友能读下去，谢谢大家的支持！\n\n### 正文\n\n窗外，已经倾泻了一整夜的雨好像还是没有停下来的迹象。雨声伴着街道上汽车急促的鸣笛声再夹杂着发动机的轰鸣声传入屋内，又是一个繁忙嘈杂的早晨。窗内，昏昏沉沉，还在睡梦中的欧阳面色有些凝重，他应该又做梦了...\n\n<!--more-->\n\n经济管理专业的欧阳，大学毕业后选择留在当地的一家民营私企从事行政相关的工作。平时就和一个朋友住在一起合租的小区公寓内。最近公司业务繁重，经常加班，他连续好几天加班到很晚，最近睡眠质量也不是很好。欧阳计划着，忙过这一阵，出去转一转，放松放松。\n\n已经响过三次闹铃的手机再次响起，欧阳凭着仅仅清醒的些许意识，用手在枕边、枕头下一次次地摸索试探着，终于，在被窝里找到了“吵闹”了半天的手机。他缓缓睁开眼睛，眼皮重的就像是压在眼睛上的两座大山，双眼迷离，看了下时间 —— 2018年7月30日，早上8:00整。按下最后一遍闹铃开关，拖着“灌了铅”后又不听使唤的身躯，欧阳起身坐在床边，又闭上了眼睛，睁眼... 闭眼... 再睁眼... 每天起床就是一场持久的他和“周公”与“梦想”的拉锯战。一轮轮的交锋后，欧阳睁开眼睛，下床，懒散地拖着拖鞋，拿起洗漱用品，拖沓着身体走到卫生间，打开水龙头，欧阳看着镜子里的人，陌生又熟悉... 水漫出牙杯好一会儿，他才回过神，牙膏被肆意地挤在牙刷上，伸到嘴里漫无目的地游走一会儿，漱口。用冷水打湿面部，快速地搓一搓，反复几次，擦干，洗漱完毕。一瓶快要被挤得变形的“大宝”，勉勉强强地挤出一点到手上，在脸上四面八方地搓一搓，算是给他原本还帅气的脸上唯一“精致”的保养。穿上衣服，换上鞋，背上包，出门... 一天的工作又要开始了...\n\n公寓电梯口，几乎层层都停的电梯好不容易停在自己面前，人快要挤满了... 欧阳挤进电梯，昨天好像也是这些人... 因为住在同一栋，遇到很正常，欧阳也没有多想。而所有人都像极了刚刚镜子里的自己，面无表情，睡眼惺忪，可能甚至都有人不知道电梯里又多了一个他。电梯下行，人越来越多，狭小的空间里越来越拥挤，早些进来的人也越来越着急。终于，几分钟过去，到了一层，所有人都急匆匆地涌出电梯，向小区门口赶去。欧阳似乎不善于争抢，踉踉跄跄的最后一个挤了出来。\n\n外面还下着雨，公司离公寓说远不远，说近，将近5公里的距离，开“11路”走过去也不现实，况且早上时间本就不充裕。挤公交，住处到公司没有直达车，倒车、等车的时间换做骑车他骑个来回，这就很尴尬了... 所以，上班一年多以来，不论春夏秋冬，刮风下雨还是下雪，他都是骑车上班，也练就了一手撑伞一手骑车的“绝技”。撑着伞，在小区门口东张西望，不凑巧，今天运气不佳，“坐骑”被抢光了。欧阳住的小区是工薪族聚集地，一个小区八成左右都是上班族，每天早上稍微晚点,门口的共享单车就没你的份了。他也习以为常，老样子，沿着去公司的路先开“11路”吧，运气好路上还能捡到“宝”...几分钟后，他在街角发现一辆“某拜”，急匆匆赶过去，还没到跟前，被别人“截胡”了... 看着那人，欧阳脸上就是一幅复制版的“尴尬又不失礼貌的微笑”的表情包。再走一段路，又看见一辆，欧阳冲了过去，再被“截胡”的话今天就要迟到了！还好，没人和他抢，掏出手机，打开车锁，跨上车，刚骑没几米，发现后车轮有点瓢...“点儿真背！”，欧阳嘴里嘀咕着，“算了，赶时间，凑活着骑”，欧阳一手撑着伞，一手骑车把着方向，一路“哐啷...哐啷...”地往公司赶去... 一路晃荡，欧阳边骑边想：“早上看手机，今天是几号来着？”他在盘算着还有几天能休息？什么时候能放假，他想出去走走。一个不留神，车轮好像压到一块硬硬的东西，加上雨天路滑和这不争气的“坐骑”，欧阳连人带车就要摔倒在地上...\n\n一瞬间，躺在床上的欧阳睁开眼睛，一身冷汗... 幸亏，幸亏，原来是个梦... 他看了一眼手机，2018年7月30日，早上8点10分，星期一。“靠！要迟到了！”，他下意识地喊了一句。着急忙慌穿上拖鞋，拿起洗漱用品来到卫生间，镜子里的自己依旧陌生又熟悉，这场景好像在哪见过？哪有功夫想那么多，同样的步骤，刷牙，洗脸，换衣服，背上包，出门，挤进依旧人满为患的电梯下楼，来到小区门口“抢”到一辆单车，今天还算幸运。一路狂飙来到公司楼下，电梯口长长的队伍，欧阳心里暗想：“妹的，又要迟到了...”。夏天高温，电梯里又闷又热，各种“迷人”的汗味混杂着各式早餐的味道，有点辣眼睛...\n\n走进公司，伸手去打卡的瞬间，欧阳楞了一下，“咦，是不是已经打过卡了？”很快，他就否定了自己这个愚蠢的疑问。今天刚到公司，怎么可能打过卡？过糊涂了？没再多想，欧阳朝着自己的工位走了过去。跟往常一样，和同事打过招呼之后，欧阳坐在工位上，一刹那好像回到了昨天。“昨天同样如此坐在这，就好像是几小时甚至几分钟前的事”，欧阳心里一阵感叹... 看着电脑屏幕上隐约倒映出来的自己的脸，越看越陌生，越看越不像自己。毕业一年多来，由于工作和生活的压力，欧阳的确看起来憔悴了许多。每天的工作排得满满当当，加班几乎成了家常便饭，工作到凌晨一两点也是时不时会有的事。慢慢的，他也适应习惯了，唯一的就是身体逐渐消瘦了下来，还好，总体状况倒也健康。\n\n“欧阳！”，背后的声音才让他回过神来，是老大 —— 一个最近让他烦透也恶心透了的人。平时大小事都不管，关键时刻总爱抛头露面装个13，没事总爱跪舔上级，最主要的，时不时话语中还不尊重同事。以前没发现，日子久了，欧阳真的是看不惯这种自以为是又没有素质的人，越看越觉得恶心。但，人家是领导，能有什么办法...? “昨天让你准备的材料真被好了没？今天郑总开会要用呢！”讨厌归讨厌，欧阳还是一脸不悲不喜的回到：“好了...” 他顺手把材料递过去，老大转身的时候欧阳一脸不屑的竖起中指。忙碌的一天又要开始了...欧阳像往常一样东奔西跑，前答后应，忙个不停，而这，只是他工作的日常罢了...\n\n好不容易熬到中午，可以喘口气了。公司中午有两个小时的休息时间，也是白天唯一能放松的时段。七八月份，正是一年中最热的时候，欧阳和同事一起在楼下的小店里买了一份九块钱的快餐，因为公司能吹空调就带回了公司，坐在工位上开始了自己的午餐时间。一份快餐，三四个菜，荤腥少的可怜，吃饱可以，但毫无质量可言。十几分钟后，一天的主食也就结束了，简单收拾停当，欧阳趴在工位上玩起了手机，这是他一天中为数不多可以了解到“外面世界”的机会。刷一刷各类新闻，看一看明星八卦，欧阳又在盘算着，希望忙过这一段能出去转一转。毕竟，世界那么大，他也想去看看... 搁下手机，放下座椅靠背，躺下去，很快他就睡着了...\n\n“叮铃铃铃...”，一阵铃声在耳边响起，欧阳睁开眼睛确是傻了眼，“我靠！什么情况？怎么还躺在床上！？” 欧阳像见鬼了一样不敢相信眼前的自己竟然还躺在公寓的床上！“玩什么？‘盗梦空间’么？梦中梦！？还是...现在还是在做梦？”欧阳脑子飞转，却怎么也想不明白，刚才梦里的一切也太真实了吧！越像越瘆得慌，欧阳学电视里掐了一下自己，“靠，真的疼，不是梦...”拿起手机看了看时间，2018年7月30日，早上8:00整,到了上班的时间。上班第一，欧阳也没敢再想太多，还是每天按部就班的流程，洗漱，换衣服，出门，挤电梯，抢“坐骑”... 欧阳一路赶到公司，又开始了一天的忙碌...\n\n“欧阳，这堆报表按日期整理一下！”，“欧阳，这些财报一会给郑总送过去！”，“欧阳，公司该买电了！”，“欧阳，最近招聘季，注意注意有没有求职者应聘！”，“欧阳，明天张总要过来，提前联系一下！”，“欧阳”，“欧阳”...  因为公司规模不大，一个人顶两个人用，加上欧阳本身又比较勤恳办事也靠谱，所以作为行政岗的欧阳其实做了很多非本岗位的事情。就这样不可开交，“前赴后继”，等大事小事真正忙完又将近晚上11点了。欧阳看着窗外的夜色，街道上车水马龙黑，远处灯火阑珊，渐渐地他的眼神有些迷离。黑夜就像是深渊，盯着太久了，就出不来了，欧阳陷进去，沉思了很久.....\n\n回过神来，欧阳收拾收拾工位，关了电脑，关上公司大门，乘着电梯下楼去了... 刚出写字楼，温热的风还在静静的吹，因为时间太晚，视野里已经找不到共享单车的踪迹，欧阳沿着回去的路，独自一人，慢慢地往回走... 回到公寓的时候已经近子夜时分了，夏天的夜晚温度依旧不低，这一路走来一身黏腻，卸下一身疲惫，欧阳简单地冲了个凉就躺下了。很快，他睡着了... 明天，又是普通却繁忙的一天，所有的一切还会继续...\n\n当清晨的第一缕阳光划破天际，窗外，雨水好像早已停歇，鸣笛声和发动机的声音依旧“热热闹闹”。窗内，光线还是那么的昏暗。欧阳被最后一遍闹铃叫醒，惺忪的睡眼慢慢睁开，关掉闹钟，当看到手机上显示的时间，欧阳怔了一下，瞳孔瞬间扩大。他双手颤抖着把手机拿进，白色的眼球上瞬间布满血丝，全身寒毛卓竖，因为，手机上赫然是显示着时间：2028年7月31日，早上8:00整，星期一......\n\n![盗梦空间-旋转的陀螺][1]\n\n### 后记\n\n> 谢谢您能读完这篇文章。就像`“序言”`中全所言，全文内容并不华丽，但略带`“魔幻”`的`“盗梦空间”`情节，是文章最大的暗示，也是最发人深省的部分。主人公欧阳一天中总感觉很多事似乎刚发生，很多场景也很熟悉，其实是因为他每一天都在重复着相同的事情，被工作占据了几乎所有的生活，所以脑海中只有这些事情记忆最深刻。还有隐藏的一点，按照逻辑全文看似几乎都发生在2018年7月30日这一天，其实这一天只是欧阳一天天工作生活的一个缩影和循环。每一次从梦中醒来，实际暗示着已经过去了一天甚至是很多天。直到最后，欧阳再一次醒来，才发现，时间飞逝，已经是10年之后的2028年了。\n\n> 其实很多时候，我们会发现繁忙的工作和沉重的生活压力，让我们每天都过得失去了色彩，更甚至我们每天都在重复做着几乎相同的事情，日复一日...... 转眼间，可能就是几年甚至十几年。这也是现代人经常感叹时间很快的一个重要原因。所以，希望大家能在繁重的工作之余，给自己的生活增添一抹亮丽的色彩。毕竟，这个世界以及来到这个世界的幸运从来不值得被我们辜负。\n\n\n[1]: /medias/article/journal/timg.gif","slug":"journal-1","published":1,"updated":"2018-09-19T05:06:11.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vg30007ogsmi75bsa2j","content":"<h3 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h3><blockquote>\n<p>这篇文章有一些桥段是我生活的影子，但本文的主人公完全虚构，不代表我和周围任何一个同事朋友。文章内容是我根据自己的经历更多是和不同朋友交流时了解到的加工而来。文章没有什么华丽的词藻，内容平铺直叙，但是我相信读下去你也许能在其中找到自己的影子或者是曾经熟悉的一幕。更多的是文章带有一些<code>“魔幻”</code>色彩，就是这一点点的<code>“魔幻”</code>成分才是文章中最大的暗示和思考。希望有兴趣的朋友能读下去，谢谢大家的支持！</p>\n</blockquote>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>窗外，已经倾泻了一整夜的雨好像还是没有停下来的迹象。雨声伴着街道上汽车急促的鸣笛声再夹杂着发动机的轰鸣声传入屋内，又是一个繁忙嘈杂的早晨。窗内，昏昏沉沉，还在睡梦中的欧阳面色有些凝重，他应该又做梦了…</p>\n<a id=\"more\"></a>\n<p>经济管理专业的欧阳，大学毕业后选择留在当地的一家民营私企从事行政相关的工作。平时就和一个朋友住在一起合租的小区公寓内。最近公司业务繁重，经常加班，他连续好几天加班到很晚，最近睡眠质量也不是很好。欧阳计划着，忙过这一阵，出去转一转，放松放松。</p>\n<p>已经响过三次闹铃的手机再次响起，欧阳凭着仅仅清醒的些许意识，用手在枕边、枕头下一次次地摸索试探着，终于，在被窝里找到了“吵闹”了半天的手机。他缓缓睁开眼睛，眼皮重的就像是压在眼睛上的两座大山，双眼迷离，看了下时间 —— 2018年7月30日，早上8:00整。按下最后一遍闹铃开关，拖着“灌了铅”后又不听使唤的身躯，欧阳起身坐在床边，又闭上了眼睛，睁眼… 闭眼… 再睁眼… 每天起床就是一场持久的他和“周公”与“梦想”的拉锯战。一轮轮的交锋后，欧阳睁开眼睛，下床，懒散地拖着拖鞋，拿起洗漱用品，拖沓着身体走到卫生间，打开水龙头，欧阳看着镜子里的人，陌生又熟悉… 水漫出牙杯好一会儿，他才回过神，牙膏被肆意地挤在牙刷上，伸到嘴里漫无目的地游走一会儿，漱口。用冷水打湿面部，快速地搓一搓，反复几次，擦干，洗漱完毕。一瓶快要被挤得变形的“大宝”，勉勉强强地挤出一点到手上，在脸上四面八方地搓一搓，算是给他原本还帅气的脸上唯一“精致”的保养。穿上衣服，换上鞋，背上包，出门… 一天的工作又要开始了…</p>\n<p>公寓电梯口，几乎层层都停的电梯好不容易停在自己面前，人快要挤满了… 欧阳挤进电梯，昨天好像也是这些人… 因为住在同一栋，遇到很正常，欧阳也没有多想。而所有人都像极了刚刚镜子里的自己，面无表情，睡眼惺忪，可能甚至都有人不知道电梯里又多了一个他。电梯下行，人越来越多，狭小的空间里越来越拥挤，早些进来的人也越来越着急。终于，几分钟过去，到了一层，所有人都急匆匆地涌出电梯，向小区门口赶去。欧阳似乎不善于争抢，踉踉跄跄的最后一个挤了出来。</p>\n<p>外面还下着雨，公司离公寓说远不远，说近，将近5公里的距离，开“11路”走过去也不现实，况且早上时间本就不充裕。挤公交，住处到公司没有直达车，倒车、等车的时间换做骑车他骑个来回，这就很尴尬了… 所以，上班一年多以来，不论春夏秋冬，刮风下雨还是下雪，他都是骑车上班，也练就了一手撑伞一手骑车的“绝技”。撑着伞，在小区门口东张西望，不凑巧，今天运气不佳，“坐骑”被抢光了。欧阳住的小区是工薪族聚集地，一个小区八成左右都是上班族，每天早上稍微晚点,门口的共享单车就没你的份了。他也习以为常，老样子，沿着去公司的路先开“11路”吧，运气好路上还能捡到“宝”…几分钟后，他在街角发现一辆“某拜”，急匆匆赶过去，还没到跟前，被别人“截胡”了… 看着那人，欧阳脸上就是一幅复制版的“尴尬又不失礼貌的微笑”的表情包。再走一段路，又看见一辆，欧阳冲了过去，再被“截胡”的话今天就要迟到了！还好，没人和他抢，掏出手机，打开车锁，跨上车，刚骑没几米，发现后车轮有点瓢…“点儿真背！”，欧阳嘴里嘀咕着，“算了，赶时间，凑活着骑”，欧阳一手撑着伞，一手骑车把着方向，一路“哐啷…哐啷…”地往公司赶去… 一路晃荡，欧阳边骑边想：“早上看手机，今天是几号来着？”他在盘算着还有几天能休息？什么时候能放假，他想出去走走。一个不留神，车轮好像压到一块硬硬的东西，加上雨天路滑和这不争气的“坐骑”，欧阳连人带车就要摔倒在地上…</p>\n<p>一瞬间，躺在床上的欧阳睁开眼睛，一身冷汗… 幸亏，幸亏，原来是个梦… 他看了一眼手机，2018年7月30日，早上8点10分，星期一。“靠！要迟到了！”，他下意识地喊了一句。着急忙慌穿上拖鞋，拿起洗漱用品来到卫生间，镜子里的自己依旧陌生又熟悉，这场景好像在哪见过？哪有功夫想那么多，同样的步骤，刷牙，洗脸，换衣服，背上包，出门，挤进依旧人满为患的电梯下楼，来到小区门口“抢”到一辆单车，今天还算幸运。一路狂飙来到公司楼下，电梯口长长的队伍，欧阳心里暗想：“妹的，又要迟到了…”。夏天高温，电梯里又闷又热，各种“迷人”的汗味混杂着各式早餐的味道，有点辣眼睛…</p>\n<p>走进公司，伸手去打卡的瞬间，欧阳楞了一下，“咦，是不是已经打过卡了？”很快，他就否定了自己这个愚蠢的疑问。今天刚到公司，怎么可能打过卡？过糊涂了？没再多想，欧阳朝着自己的工位走了过去。跟往常一样，和同事打过招呼之后，欧阳坐在工位上，一刹那好像回到了昨天。“昨天同样如此坐在这，就好像是几小时甚至几分钟前的事”，欧阳心里一阵感叹… 看着电脑屏幕上隐约倒映出来的自己的脸，越看越陌生，越看越不像自己。毕业一年多来，由于工作和生活的压力，欧阳的确看起来憔悴了许多。每天的工作排得满满当当，加班几乎成了家常便饭，工作到凌晨一两点也是时不时会有的事。慢慢的，他也适应习惯了，唯一的就是身体逐渐消瘦了下来，还好，总体状况倒也健康。</p>\n<p>“欧阳！”，背后的声音才让他回过神来，是老大 —— 一个最近让他烦透也恶心透了的人。平时大小事都不管，关键时刻总爱抛头露面装个13，没事总爱跪舔上级，最主要的，时不时话语中还不尊重同事。以前没发现，日子久了，欧阳真的是看不惯这种自以为是又没有素质的人，越看越觉得恶心。但，人家是领导，能有什么办法…? “昨天让你准备的材料真被好了没？今天郑总开会要用呢！”讨厌归讨厌，欧阳还是一脸不悲不喜的回到：“好了…” 他顺手把材料递过去，老大转身的时候欧阳一脸不屑的竖起中指。忙碌的一天又要开始了…欧阳像往常一样东奔西跑，前答后应，忙个不停，而这，只是他工作的日常罢了…</p>\n<p>好不容易熬到中午，可以喘口气了。公司中午有两个小时的休息时间，也是白天唯一能放松的时段。七八月份，正是一年中最热的时候，欧阳和同事一起在楼下的小店里买了一份九块钱的快餐，因为公司能吹空调就带回了公司，坐在工位上开始了自己的午餐时间。一份快餐，三四个菜，荤腥少的可怜，吃饱可以，但毫无质量可言。十几分钟后，一天的主食也就结束了，简单收拾停当，欧阳趴在工位上玩起了手机，这是他一天中为数不多可以了解到“外面世界”的机会。刷一刷各类新闻，看一看明星八卦，欧阳又在盘算着，希望忙过这一段能出去转一转。毕竟，世界那么大，他也想去看看… 搁下手机，放下座椅靠背，躺下去，很快他就睡着了…</p>\n<p>“叮铃铃铃…”，一阵铃声在耳边响起，欧阳睁开眼睛确是傻了眼，“我靠！什么情况？怎么还躺在床上！？” 欧阳像见鬼了一样不敢相信眼前的自己竟然还躺在公寓的床上！“玩什么？‘盗梦空间’么？梦中梦！？还是…现在还是在做梦？”欧阳脑子飞转，却怎么也想不明白，刚才梦里的一切也太真实了吧！越像越瘆得慌，欧阳学电视里掐了一下自己，“靠，真的疼，不是梦…”拿起手机看了看时间，2018年7月30日，早上8:00整,到了上班的时间。上班第一，欧阳也没敢再想太多，还是每天按部就班的流程，洗漱，换衣服，出门，挤电梯，抢“坐骑”… 欧阳一路赶到公司，又开始了一天的忙碌…</p>\n<p>“欧阳，这堆报表按日期整理一下！”，“欧阳，这些财报一会给郑总送过去！”，“欧阳，公司该买电了！”，“欧阳，最近招聘季，注意注意有没有求职者应聘！”，“欧阳，明天张总要过来，提前联系一下！”，“欧阳”，“欧阳”…  因为公司规模不大，一个人顶两个人用，加上欧阳本身又比较勤恳办事也靠谱，所以作为行政岗的欧阳其实做了很多非本岗位的事情。就这样不可开交，“前赴后继”，等大事小事真正忙完又将近晚上11点了。欧阳看着窗外的夜色，街道上车水马龙黑，远处灯火阑珊，渐渐地他的眼神有些迷离。黑夜就像是深渊，盯着太久了，就出不来了，欧阳陷进去，沉思了很久…..</p>\n<p>回过神来，欧阳收拾收拾工位，关了电脑，关上公司大门，乘着电梯下楼去了… 刚出写字楼，温热的风还在静静的吹，因为时间太晚，视野里已经找不到共享单车的踪迹，欧阳沿着回去的路，独自一人，慢慢地往回走… 回到公寓的时候已经近子夜时分了，夏天的夜晚温度依旧不低，这一路走来一身黏腻，卸下一身疲惫，欧阳简单地冲了个凉就躺下了。很快，他睡着了… 明天，又是普通却繁忙的一天，所有的一切还会继续…</p>\n<p>当清晨的第一缕阳光划破天际，窗外，雨水好像早已停歇，鸣笛声和发动机的声音依旧“热热闹闹”。窗内，光线还是那么的昏暗。欧阳被最后一遍闹铃叫醒，惺忪的睡眼慢慢睁开，关掉闹钟，当看到手机上显示的时间，欧阳怔了一下，瞳孔瞬间扩大。他双手颤抖着把手机拿进，白色的眼球上瞬间布满血丝，全身寒毛卓竖，因为，手机上赫然是显示着时间：2028年7月31日，早上8:00整，星期一……</p>\n<p><img src=\"/medias/article/journal/timg.gif\" alt=\"盗梦空间-旋转的陀螺\"></p>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><blockquote>\n<p>谢谢您能读完这篇文章。就像<code>“序言”</code>中全所言，全文内容并不华丽，但略带<code>“魔幻”</code>的<code>“盗梦空间”</code>情节，是文章最大的暗示，也是最发人深省的部分。主人公欧阳一天中总感觉很多事似乎刚发生，很多场景也很熟悉，其实是因为他每一天都在重复着相同的事情，被工作占据了几乎所有的生活，所以脑海中只有这些事情记忆最深刻。还有隐藏的一点，按照逻辑全文看似几乎都发生在2018年7月30日这一天，其实这一天只是欧阳一天天工作生活的一个缩影和循环。每一次从梦中醒来，实际暗示着已经过去了一天甚至是很多天。直到最后，欧阳再一次醒来，才发现，时间飞逝，已经是10年之后的2028年了。</p>\n</blockquote>\n<blockquote>\n<p>其实很多时候，我们会发现繁忙的工作和沉重的生活压力，让我们每天都过得失去了色彩，更甚至我们每天都在重复做着几乎相同的事情，日复一日…… 转眼间，可能就是几年甚至十几年。这也是现代人经常感叹时间很快的一个重要原因。所以，希望大家能在繁重的工作之余，给自己的生活增添一抹亮丽的色彩。毕竟，这个世界以及来到这个世界的幸运从来不值得被我们辜负。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h3 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h3><blockquote>\n<p>这篇文章有一些桥段是我生活的影子，但本文的主人公完全虚构，不代表我和周围任何一个同事朋友。文章内容是我根据自己的经历更多是和不同朋友交流时了解到的加工而来。文章没有什么华丽的词藻，内容平铺直叙，但是我相信读下去你也许能在其中找到自己的影子或者是曾经熟悉的一幕。更多的是文章带有一些<code>“魔幻”</code>色彩，就是这一点点的<code>“魔幻”</code>成分才是文章中最大的暗示和思考。希望有兴趣的朋友能读下去，谢谢大家的支持！</p>\n</blockquote>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>窗外，已经倾泻了一整夜的雨好像还是没有停下来的迹象。雨声伴着街道上汽车急促的鸣笛声再夹杂着发动机的轰鸣声传入屋内，又是一个繁忙嘈杂的早晨。窗内，昏昏沉沉，还在睡梦中的欧阳面色有些凝重，他应该又做梦了…</p>","more":"<p>经济管理专业的欧阳，大学毕业后选择留在当地的一家民营私企从事行政相关的工作。平时就和一个朋友住在一起合租的小区公寓内。最近公司业务繁重，经常加班，他连续好几天加班到很晚，最近睡眠质量也不是很好。欧阳计划着，忙过这一阵，出去转一转，放松放松。</p>\n<p>已经响过三次闹铃的手机再次响起，欧阳凭着仅仅清醒的些许意识，用手在枕边、枕头下一次次地摸索试探着，终于，在被窝里找到了“吵闹”了半天的手机。他缓缓睁开眼睛，眼皮重的就像是压在眼睛上的两座大山，双眼迷离，看了下时间 —— 2018年7月30日，早上8:00整。按下最后一遍闹铃开关，拖着“灌了铅”后又不听使唤的身躯，欧阳起身坐在床边，又闭上了眼睛，睁眼… 闭眼… 再睁眼… 每天起床就是一场持久的他和“周公”与“梦想”的拉锯战。一轮轮的交锋后，欧阳睁开眼睛，下床，懒散地拖着拖鞋，拿起洗漱用品，拖沓着身体走到卫生间，打开水龙头，欧阳看着镜子里的人，陌生又熟悉… 水漫出牙杯好一会儿，他才回过神，牙膏被肆意地挤在牙刷上，伸到嘴里漫无目的地游走一会儿，漱口。用冷水打湿面部，快速地搓一搓，反复几次，擦干，洗漱完毕。一瓶快要被挤得变形的“大宝”，勉勉强强地挤出一点到手上，在脸上四面八方地搓一搓，算是给他原本还帅气的脸上唯一“精致”的保养。穿上衣服，换上鞋，背上包，出门… 一天的工作又要开始了…</p>\n<p>公寓电梯口，几乎层层都停的电梯好不容易停在自己面前，人快要挤满了… 欧阳挤进电梯，昨天好像也是这些人… 因为住在同一栋，遇到很正常，欧阳也没有多想。而所有人都像极了刚刚镜子里的自己，面无表情，睡眼惺忪，可能甚至都有人不知道电梯里又多了一个他。电梯下行，人越来越多，狭小的空间里越来越拥挤，早些进来的人也越来越着急。终于，几分钟过去，到了一层，所有人都急匆匆地涌出电梯，向小区门口赶去。欧阳似乎不善于争抢，踉踉跄跄的最后一个挤了出来。</p>\n<p>外面还下着雨，公司离公寓说远不远，说近，将近5公里的距离，开“11路”走过去也不现实，况且早上时间本就不充裕。挤公交，住处到公司没有直达车，倒车、等车的时间换做骑车他骑个来回，这就很尴尬了… 所以，上班一年多以来，不论春夏秋冬，刮风下雨还是下雪，他都是骑车上班，也练就了一手撑伞一手骑车的“绝技”。撑着伞，在小区门口东张西望，不凑巧，今天运气不佳，“坐骑”被抢光了。欧阳住的小区是工薪族聚集地，一个小区八成左右都是上班族，每天早上稍微晚点,门口的共享单车就没你的份了。他也习以为常，老样子，沿着去公司的路先开“11路”吧，运气好路上还能捡到“宝”…几分钟后，他在街角发现一辆“某拜”，急匆匆赶过去，还没到跟前，被别人“截胡”了… 看着那人，欧阳脸上就是一幅复制版的“尴尬又不失礼貌的微笑”的表情包。再走一段路，又看见一辆，欧阳冲了过去，再被“截胡”的话今天就要迟到了！还好，没人和他抢，掏出手机，打开车锁，跨上车，刚骑没几米，发现后车轮有点瓢…“点儿真背！”，欧阳嘴里嘀咕着，“算了，赶时间，凑活着骑”，欧阳一手撑着伞，一手骑车把着方向，一路“哐啷…哐啷…”地往公司赶去… 一路晃荡，欧阳边骑边想：“早上看手机，今天是几号来着？”他在盘算着还有几天能休息？什么时候能放假，他想出去走走。一个不留神，车轮好像压到一块硬硬的东西，加上雨天路滑和这不争气的“坐骑”，欧阳连人带车就要摔倒在地上…</p>\n<p>一瞬间，躺在床上的欧阳睁开眼睛，一身冷汗… 幸亏，幸亏，原来是个梦… 他看了一眼手机，2018年7月30日，早上8点10分，星期一。“靠！要迟到了！”，他下意识地喊了一句。着急忙慌穿上拖鞋，拿起洗漱用品来到卫生间，镜子里的自己依旧陌生又熟悉，这场景好像在哪见过？哪有功夫想那么多，同样的步骤，刷牙，洗脸，换衣服，背上包，出门，挤进依旧人满为患的电梯下楼，来到小区门口“抢”到一辆单车，今天还算幸运。一路狂飙来到公司楼下，电梯口长长的队伍，欧阳心里暗想：“妹的，又要迟到了…”。夏天高温，电梯里又闷又热，各种“迷人”的汗味混杂着各式早餐的味道，有点辣眼睛…</p>\n<p>走进公司，伸手去打卡的瞬间，欧阳楞了一下，“咦，是不是已经打过卡了？”很快，他就否定了自己这个愚蠢的疑问。今天刚到公司，怎么可能打过卡？过糊涂了？没再多想，欧阳朝着自己的工位走了过去。跟往常一样，和同事打过招呼之后，欧阳坐在工位上，一刹那好像回到了昨天。“昨天同样如此坐在这，就好像是几小时甚至几分钟前的事”，欧阳心里一阵感叹… 看着电脑屏幕上隐约倒映出来的自己的脸，越看越陌生，越看越不像自己。毕业一年多来，由于工作和生活的压力，欧阳的确看起来憔悴了许多。每天的工作排得满满当当，加班几乎成了家常便饭，工作到凌晨一两点也是时不时会有的事。慢慢的，他也适应习惯了，唯一的就是身体逐渐消瘦了下来，还好，总体状况倒也健康。</p>\n<p>“欧阳！”，背后的声音才让他回过神来，是老大 —— 一个最近让他烦透也恶心透了的人。平时大小事都不管，关键时刻总爱抛头露面装个13，没事总爱跪舔上级，最主要的，时不时话语中还不尊重同事。以前没发现，日子久了，欧阳真的是看不惯这种自以为是又没有素质的人，越看越觉得恶心。但，人家是领导，能有什么办法…? “昨天让你准备的材料真被好了没？今天郑总开会要用呢！”讨厌归讨厌，欧阳还是一脸不悲不喜的回到：“好了…” 他顺手把材料递过去，老大转身的时候欧阳一脸不屑的竖起中指。忙碌的一天又要开始了…欧阳像往常一样东奔西跑，前答后应，忙个不停，而这，只是他工作的日常罢了…</p>\n<p>好不容易熬到中午，可以喘口气了。公司中午有两个小时的休息时间，也是白天唯一能放松的时段。七八月份，正是一年中最热的时候，欧阳和同事一起在楼下的小店里买了一份九块钱的快餐，因为公司能吹空调就带回了公司，坐在工位上开始了自己的午餐时间。一份快餐，三四个菜，荤腥少的可怜，吃饱可以，但毫无质量可言。十几分钟后，一天的主食也就结束了，简单收拾停当，欧阳趴在工位上玩起了手机，这是他一天中为数不多可以了解到“外面世界”的机会。刷一刷各类新闻，看一看明星八卦，欧阳又在盘算着，希望忙过这一段能出去转一转。毕竟，世界那么大，他也想去看看… 搁下手机，放下座椅靠背，躺下去，很快他就睡着了…</p>\n<p>“叮铃铃铃…”，一阵铃声在耳边响起，欧阳睁开眼睛确是傻了眼，“我靠！什么情况？怎么还躺在床上！？” 欧阳像见鬼了一样不敢相信眼前的自己竟然还躺在公寓的床上！“玩什么？‘盗梦空间’么？梦中梦！？还是…现在还是在做梦？”欧阳脑子飞转，却怎么也想不明白，刚才梦里的一切也太真实了吧！越像越瘆得慌，欧阳学电视里掐了一下自己，“靠，真的疼，不是梦…”拿起手机看了看时间，2018年7月30日，早上8:00整,到了上班的时间。上班第一，欧阳也没敢再想太多，还是每天按部就班的流程，洗漱，换衣服，出门，挤电梯，抢“坐骑”… 欧阳一路赶到公司，又开始了一天的忙碌…</p>\n<p>“欧阳，这堆报表按日期整理一下！”，“欧阳，这些财报一会给郑总送过去！”，“欧阳，公司该买电了！”，“欧阳，最近招聘季，注意注意有没有求职者应聘！”，“欧阳，明天张总要过来，提前联系一下！”，“欧阳”，“欧阳”…  因为公司规模不大，一个人顶两个人用，加上欧阳本身又比较勤恳办事也靠谱，所以作为行政岗的欧阳其实做了很多非本岗位的事情。就这样不可开交，“前赴后继”，等大事小事真正忙完又将近晚上11点了。欧阳看着窗外的夜色，街道上车水马龙黑，远处灯火阑珊，渐渐地他的眼神有些迷离。黑夜就像是深渊，盯着太久了，就出不来了，欧阳陷进去，沉思了很久…..</p>\n<p>回过神来，欧阳收拾收拾工位，关了电脑，关上公司大门，乘着电梯下楼去了… 刚出写字楼，温热的风还在静静的吹，因为时间太晚，视野里已经找不到共享单车的踪迹，欧阳沿着回去的路，独自一人，慢慢地往回走… 回到公寓的时候已经近子夜时分了，夏天的夜晚温度依旧不低，这一路走来一身黏腻，卸下一身疲惫，欧阳简单地冲了个凉就躺下了。很快，他睡着了… 明天，又是普通却繁忙的一天，所有的一切还会继续…</p>\n<p>当清晨的第一缕阳光划破天际，窗外，雨水好像早已停歇，鸣笛声和发动机的声音依旧“热热闹闹”。窗内，光线还是那么的昏暗。欧阳被最后一遍闹铃叫醒，惺忪的睡眼慢慢睁开，关掉闹钟，当看到手机上显示的时间，欧阳怔了一下，瞳孔瞬间扩大。他双手颤抖着把手机拿进，白色的眼球上瞬间布满血丝，全身寒毛卓竖，因为，手机上赫然是显示着时间：2028年7月31日，早上8:00整，星期一……</p>\n<p><img src=\"/medias/article/journal/timg.gif\" alt=\"盗梦空间-旋转的陀螺\"></p>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><blockquote>\n<p>谢谢您能读完这篇文章。就像<code>“序言”</code>中全所言，全文内容并不华丽，但略带<code>“魔幻”</code>的<code>“盗梦空间”</code>情节，是文章最大的暗示，也是最发人深省的部分。主人公欧阳一天中总感觉很多事似乎刚发生，很多场景也很熟悉，其实是因为他每一天都在重复着相同的事情，被工作占据了几乎所有的生活，所以脑海中只有这些事情记忆最深刻。还有隐藏的一点，按照逻辑全文看似几乎都发生在2018年7月30日这一天，其实这一天只是欧阳一天天工作生活的一个缩影和循环。每一次从梦中醒来，实际暗示着已经过去了一天甚至是很多天。直到最后，欧阳再一次醒来，才发现，时间飞逝，已经是10年之后的2028年了。</p>\n</blockquote>\n<blockquote>\n<p>其实很多时候，我们会发现繁忙的工作和沉重的生活压力，让我们每天都过得失去了色彩，更甚至我们每天都在重复做着几乎相同的事情，日复一日…… 转眼间，可能就是几年甚至十几年。这也是现代人经常感叹时间很快的一个重要原因。所以，希望大家能在繁重的工作之余，给自己的生活增添一抹亮丽的色彩。毕竟，这个世界以及来到这个世界的幸运从来不值得被我们辜负。</p>\n</blockquote>"},{"title":"一篇2016年的随想","date":"2018-08-01T06:47:00.000Z","_content":"\n### 序言\n这篇随想，其实不是近期的作品，实际写于2016年9月6日。当时的我还在读大三，按照学校的教学安排，那个时候需要进行生产实习，两种选择 —— 参加学校组织的或者自己找实习工作。我自己找了一家本地的互联网公司去实习，做前端开发工作，这也是真正意义上的第一份工作，这篇随想就写于实习期间。\n\n当时的我刚开始尝试着从一个学生向一个职场IT工作者转变。说实话，并不是很顺利，自己也很不适应，所以那一阵子很煎熬，对未来正式工作也产生了迷茫。主要的原因是很多工作上和技术上的要求在学校学到的还差得很远，工作的环境氛围、压力和自己之前预想的、准备的差距较大，所以一时半会儿不太适应，当时也比较焦虑。实习期间，我一直住在学校宿舍，一天下班后，路过熟悉的校园，回想起过去近三年的大学生活，走在一条昏暗的小路上，突然有了一些感慨，回去就顺手写下了这篇随想。\n\n<!--more-->\n\n![random-thoughts-1插图][1]\n<center>图片摄于2016年07月15日-西安理工大学金花校区</center>\n\n### 正文\n<div id=\"content-ctn\">\n  <div class=\"centerContent\">\n    每个夜晚，\n    他都会向影子招手，\n    与草木问好，\n    昏暗幽静的小路上，\n    铺满一层层的煎熬与落寞。\n    他步伐缓慢，\n    一次次回望，\n    望见身后的挣扎先生，\n    神情依旧，\n    同样迈着缓缓的步子，\n    时不时也无奈地回头看。\n    一转身，\n    却又被自己撞到。\n    撞乱了春秋冬夏，\n    撞散了意念魂灵。\n    <span class=\"date\">—— 2016.09.06</span>\n  </div>\n </div>\n\n<style>\n  #content-ctn span.date {\n    padding-left: 100px;\n  }\n</style>\n\n[1]: /medias/article/random-thoughts/plates-1.jpg","source":"_posts/random-thoughts-1.md","raw":"---\ntitle: 一篇2016年的随想\ndate: 2018-08-01 14:47:00\ncategories: 随想\ntags: 朝花夕拾\n---\n\n### 序言\n这篇随想，其实不是近期的作品，实际写于2016年9月6日。当时的我还在读大三，按照学校的教学安排，那个时候需要进行生产实习，两种选择 —— 参加学校组织的或者自己找实习工作。我自己找了一家本地的互联网公司去实习，做前端开发工作，这也是真正意义上的第一份工作，这篇随想就写于实习期间。\n\n当时的我刚开始尝试着从一个学生向一个职场IT工作者转变。说实话，并不是很顺利，自己也很不适应，所以那一阵子很煎熬，对未来正式工作也产生了迷茫。主要的原因是很多工作上和技术上的要求在学校学到的还差得很远，工作的环境氛围、压力和自己之前预想的、准备的差距较大，所以一时半会儿不太适应，当时也比较焦虑。实习期间，我一直住在学校宿舍，一天下班后，路过熟悉的校园，回想起过去近三年的大学生活，走在一条昏暗的小路上，突然有了一些感慨，回去就顺手写下了这篇随想。\n\n<!--more-->\n\n![random-thoughts-1插图][1]\n<center>图片摄于2016年07月15日-西安理工大学金花校区</center>\n\n### 正文\n<div id=\"content-ctn\">\n  <div class=\"centerContent\">\n    每个夜晚，\n    他都会向影子招手，\n    与草木问好，\n    昏暗幽静的小路上，\n    铺满一层层的煎熬与落寞。\n    他步伐缓慢，\n    一次次回望，\n    望见身后的挣扎先生，\n    神情依旧，\n    同样迈着缓缓的步子，\n    时不时也无奈地回头看。\n    一转身，\n    却又被自己撞到。\n    撞乱了春秋冬夏，\n    撞散了意念魂灵。\n    <span class=\"date\">—— 2016.09.06</span>\n  </div>\n </div>\n\n<style>\n  #content-ctn span.date {\n    padding-left: 100px;\n  }\n</style>\n\n[1]: /medias/article/random-thoughts/plates-1.jpg","slug":"random-thoughts-1","published":1,"updated":"2018-09-21T08:57:47.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vg3000bogsm7bzongtv","content":"<h3 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h3><p>这篇随想，其实不是近期的作品，实际写于2016年9月6日。当时的我还在读大三，按照学校的教学安排，那个时候需要进行生产实习，两种选择 —— 参加学校组织的或者自己找实习工作。我自己找了一家本地的互联网公司去实习，做前端开发工作，这也是真正意义上的第一份工作，这篇随想就写于实习期间。</p>\n<p>当时的我刚开始尝试着从一个学生向一个职场IT工作者转变。说实话，并不是很顺利，自己也很不适应，所以那一阵子很煎熬，对未来正式工作也产生了迷茫。主要的原因是很多工作上和技术上的要求在学校学到的还差得很远，工作的环境氛围、压力和自己之前预想的、准备的差距较大，所以一时半会儿不太适应，当时也比较焦虑。实习期间，我一直住在学校宿舍，一天下班后，路过熟悉的校园，回想起过去近三年的大学生活，走在一条昏暗的小路上，突然有了一些感慨，回去就顺手写下了这篇随想。</p>\n<a id=\"more\"></a>\n<p><img src=\"/medias/article/random-thoughts/plates-1.jpg\" alt=\"random-thoughts-1插图\"></p>\n<center>图片摄于2016年07月15日-西安理工大学金花校区</center>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><div id=\"content-ctn\"><br>  <div class=\"centerContent\"><br>    每个夜晚，<br>    他都会向影子招手，<br>    与草木问好，<br>    昏暗幽静的小路上，<br>    铺满一层层的煎熬与落寞。<br>    他步伐缓慢，<br>    一次次回望，<br>    望见身后的挣扎先生，<br>    神情依旧，<br>    同样迈着缓缓的步子，<br>    时不时也无奈地回头看。<br>    一转身，<br>    却又被自己撞到。<br>    撞乱了春秋冬夏，<br>    撞散了意念魂灵。<br>    <span class=\"date\">—— 2016.09.06</span><br>  </div><br> </div>\n\n<style>\n  #content-ctn span.date {\n    padding-left: 100px;\n  }\n</style>\n\n","site":{"data":{}},"excerpt":"<h3 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h3><p>这篇随想，其实不是近期的作品，实际写于2016年9月6日。当时的我还在读大三，按照学校的教学安排，那个时候需要进行生产实习，两种选择 —— 参加学校组织的或者自己找实习工作。我自己找了一家本地的互联网公司去实习，做前端开发工作，这也是真正意义上的第一份工作，这篇随想就写于实习期间。</p>\n<p>当时的我刚开始尝试着从一个学生向一个职场IT工作者转变。说实话，并不是很顺利，自己也很不适应，所以那一阵子很煎熬，对未来正式工作也产生了迷茫。主要的原因是很多工作上和技术上的要求在学校学到的还差得很远，工作的环境氛围、压力和自己之前预想的、准备的差距较大，所以一时半会儿不太适应，当时也比较焦虑。实习期间，我一直住在学校宿舍，一天下班后，路过熟悉的校园，回想起过去近三年的大学生活，走在一条昏暗的小路上，突然有了一些感慨，回去就顺手写下了这篇随想。</p>","more":"<p><img src=\"/medias/article/random-thoughts/plates-1.jpg\" alt=\"random-thoughts-1插图\"></p>\n<center>图片摄于2016年07月15日-西安理工大学金花校区</center>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><div id=\"content-ctn\"><br>  <div class=\"centerContent\"><br>    每个夜晚，<br>    他都会向影子招手，<br>    与草木问好，<br>    昏暗幽静的小路上，<br>    铺满一层层的煎熬与落寞。<br>    他步伐缓慢，<br>    一次次回望，<br>    望见身后的挣扎先生，<br>    神情依旧，<br>    同样迈着缓缓的步子，<br>    时不时也无奈地回头看。<br>    一转身，<br>    却又被自己撞到。<br>    撞乱了春秋冬夏，<br>    撞散了意念魂灵。<br>    <span class=\"date\">—— 2016.09.06</span><br>  </div><br> </div>\n\n<style>\n  #content-ctn span.date {\n    padding-left: 100px;\n  }\n</style>"},{"title":"愿你拥有“太阳”，亦拥有“繁星”","date":"2018-08-20T14:27:18.000Z","_content":"\n近来在网上读到一段话，很是触动。网上标注这段话出自英国著名女作家，2007年诺贝尔文学奖获得者[**多丽丝·莱莘**](https://baike.baidu.com/item/%E5%A4%9A%E4%B8%BD%E4%B8%9D%C2%B7%E8%8E%B1%E8%BE%9B/8307879?fromtitle=%E8%8E%B1%E8%BE%9B&fromid=13350458&fr=aladdin)的长篇小说[**《幸存者回忆录》**](https://baike.baidu.com/item/%E5%B9%B8%E5%AD%98%E8%80%85%E5%9B%9E%E5%BF%86%E5%BD%95)，我粗略地阅读原著后并未在文中找到这段话，但可以肯定的是这段话确实出自莱莘笔下。进来，计划通读此书，再对以上话语作出最后定论。\n\n![幸存者回忆录][1]\n\n不论最终结论肯定与否，最重要的是，这段话的内容，值得每一个读到他的人深思。原文如下所言：\n\n<!--more-->\n\n>做孩子的时候，感到无聊，盼望着长大。长大后，又向往返回童年。 \n>我们浪费自己的健康，去赢得个人的财富,\n>然后又浪费自己的财富去重建自己的健康。\n>**我们焦虑地憧憬着未来，忘记了眼前的生活，**\n>**活得既不是为了现在，也不是为了未来。**\n>**我们活得似乎永远不会死，我们死得好像从来没活过。**\n\n文中最后两句话，尤其触动我的内心。私以为，这两句话一针见血地、深刻地总结了很多人的生活方式和生活意义。莱莘，英国人，都说艺术源于生活但高于生活，我倒觉得，文中的话用来描述很多人的生活和生命历程也是再贴切不过了。\n\n我们拼命地奔波，没日没夜的工作，放弃了休息团聚，忘记了春夏秋冬，看不到世界的“千里丹青”...... 我们苦苦追求，追求心中“向往的生活”。认为这只要现在“拼命”，以后就能过上想要的日子，就不用再“受罪”。我们总觉得来日方长，此时苦点儿没什么，以后“赢了”总有机会享受，好日子还在后头。可到后来，慢慢的，我们发现脖子不好了，腰不好了，胃不好了，血糖高了，血压也高了...... 迫不得已，再用浪费健康换得的为数不多的财富支付昂贵的医药费去重建自己的健康，之后再因为巨额的花销更加“拼命”...... 就这样，一直“乐此不疲”、“义无反顾”地走在这个“死循环”里。`我们活得似乎永远不会死`。\n\n到最后回首往昔，这一路走来却艰辛无比，我们反而失去很多，陪家人的时间少了，挚友少了，感情淡了，思考的时间少了，欢声笑语少了，甚至浪费了健康，却未见赢得多少财富，“好日子”似乎依旧遥遥无期。其实，我们忽略了一点，**并非生活没有变好，也不是努力没有意义，真正在于需求与欲望也同样在膨胀，而且远远快于你努力的速度。**于是，我们变得焦虑，焦虑于现在的不如人意，焦虑于将来可能的“不堪”，渐渐地忘记了眼前的生活。这样的生活，`活得既不是为了现在，也不是为了未来`。直到将要“告别”的时候，一切走到尽头，才恍然发现，我们没留下多少，更没有带走什么，`我们死得好像从来没活过`。真正的悲哀，莫过于此......\n\n[**泰戈尔**](https://baike.baidu.com/item/%E6%8B%89%E5%AE%BE%E5%BE%B7%E6%8B%89%E7%BA%B3%E7%89%B9%C2%B7%E6%B3%B0%E6%88%88%E5%B0%94/490458?fromtitle=%E6%B3%B0%E6%88%88%E5%B0%94&fromid=189375&fr=aladdin)在[**《飞鸟集》**](https://baike.baidu.com/item/%E9%A3%9E%E9%B8%9F%E9%9B%86/732033?fr=aladdin)中有一首脍炙人口又富含哲理的诗：\n\n>**如果你因错过太阳而哭泣，那么你也将失去繁星。**\n\n作者在洞察自然的同时用妙笔告诫人们：不要过分悲伤于错过的美好，珍惜眼前。短短二十几言，告诉了我们失与得联系，告诉我们化失望为希望，化悲伤为幸福的方法。而莱莘的文字中，正好描写了“铜币的另一面”——我们不仅错过了“太阳”，我们也失去了“繁星”。\n\n[**大冰**](https://baike.baidu.com/item/%E5%A4%A7%E5%86%B0/349069?fr=aladdin)在[**《乖，摸摸头》**](https://baike.baidu.com/item/%E4%B9%96%EF%BC%8C%E6%91%B8%E6%91%B8%E5%A4%B4/15817286)如是说 ：\n\n>**你我都明白，这从来就不是公平的世界。人们起点不同，路径不同，乃至遭遇不同，命运不同。有人认命，有人顺命，有人抗命，有人玩命，希望和失望交错而生，倏尔一生。**\n\n短短的一生中，有的人真正意义上获得的只是短暂的欣喜，更多的却是长久的自我煎熬。愿你的生活，与之相反，愿你拥有“太阳”，亦拥有璀璨的“繁星”。\n\n\n[1]: /medias/article/random-thoughts/The-Mcmoirs-of-a-Survivor.jpg","source":"_posts/random-thoughts-2.md","raw":"---\ntitle: 愿你拥有“太阳”，亦拥有“繁星”\ndate: 2018-08-20 22:27:18\ncategories: 随想\ntags: 阅读感悟\n---\n\n近来在网上读到一段话，很是触动。网上标注这段话出自英国著名女作家，2007年诺贝尔文学奖获得者[**多丽丝·莱莘**](https://baike.baidu.com/item/%E5%A4%9A%E4%B8%BD%E4%B8%9D%C2%B7%E8%8E%B1%E8%BE%9B/8307879?fromtitle=%E8%8E%B1%E8%BE%9B&fromid=13350458&fr=aladdin)的长篇小说[**《幸存者回忆录》**](https://baike.baidu.com/item/%E5%B9%B8%E5%AD%98%E8%80%85%E5%9B%9E%E5%BF%86%E5%BD%95)，我粗略地阅读原著后并未在文中找到这段话，但可以肯定的是这段话确实出自莱莘笔下。进来，计划通读此书，再对以上话语作出最后定论。\n\n![幸存者回忆录][1]\n\n不论最终结论肯定与否，最重要的是，这段话的内容，值得每一个读到他的人深思。原文如下所言：\n\n<!--more-->\n\n>做孩子的时候，感到无聊，盼望着长大。长大后，又向往返回童年。 \n>我们浪费自己的健康，去赢得个人的财富,\n>然后又浪费自己的财富去重建自己的健康。\n>**我们焦虑地憧憬着未来，忘记了眼前的生活，**\n>**活得既不是为了现在，也不是为了未来。**\n>**我们活得似乎永远不会死，我们死得好像从来没活过。**\n\n文中最后两句话，尤其触动我的内心。私以为，这两句话一针见血地、深刻地总结了很多人的生活方式和生活意义。莱莘，英国人，都说艺术源于生活但高于生活，我倒觉得，文中的话用来描述很多人的生活和生命历程也是再贴切不过了。\n\n我们拼命地奔波，没日没夜的工作，放弃了休息团聚，忘记了春夏秋冬，看不到世界的“千里丹青”...... 我们苦苦追求，追求心中“向往的生活”。认为这只要现在“拼命”，以后就能过上想要的日子，就不用再“受罪”。我们总觉得来日方长，此时苦点儿没什么，以后“赢了”总有机会享受，好日子还在后头。可到后来，慢慢的，我们发现脖子不好了，腰不好了，胃不好了，血糖高了，血压也高了...... 迫不得已，再用浪费健康换得的为数不多的财富支付昂贵的医药费去重建自己的健康，之后再因为巨额的花销更加“拼命”...... 就这样，一直“乐此不疲”、“义无反顾”地走在这个“死循环”里。`我们活得似乎永远不会死`。\n\n到最后回首往昔，这一路走来却艰辛无比，我们反而失去很多，陪家人的时间少了，挚友少了，感情淡了，思考的时间少了，欢声笑语少了，甚至浪费了健康，却未见赢得多少财富，“好日子”似乎依旧遥遥无期。其实，我们忽略了一点，**并非生活没有变好，也不是努力没有意义，真正在于需求与欲望也同样在膨胀，而且远远快于你努力的速度。**于是，我们变得焦虑，焦虑于现在的不如人意，焦虑于将来可能的“不堪”，渐渐地忘记了眼前的生活。这样的生活，`活得既不是为了现在，也不是为了未来`。直到将要“告别”的时候，一切走到尽头，才恍然发现，我们没留下多少，更没有带走什么，`我们死得好像从来没活过`。真正的悲哀，莫过于此......\n\n[**泰戈尔**](https://baike.baidu.com/item/%E6%8B%89%E5%AE%BE%E5%BE%B7%E6%8B%89%E7%BA%B3%E7%89%B9%C2%B7%E6%B3%B0%E6%88%88%E5%B0%94/490458?fromtitle=%E6%B3%B0%E6%88%88%E5%B0%94&fromid=189375&fr=aladdin)在[**《飞鸟集》**](https://baike.baidu.com/item/%E9%A3%9E%E9%B8%9F%E9%9B%86/732033?fr=aladdin)中有一首脍炙人口又富含哲理的诗：\n\n>**如果你因错过太阳而哭泣，那么你也将失去繁星。**\n\n作者在洞察自然的同时用妙笔告诫人们：不要过分悲伤于错过的美好，珍惜眼前。短短二十几言，告诉了我们失与得联系，告诉我们化失望为希望，化悲伤为幸福的方法。而莱莘的文字中，正好描写了“铜币的另一面”——我们不仅错过了“太阳”，我们也失去了“繁星”。\n\n[**大冰**](https://baike.baidu.com/item/%E5%A4%A7%E5%86%B0/349069?fr=aladdin)在[**《乖，摸摸头》**](https://baike.baidu.com/item/%E4%B9%96%EF%BC%8C%E6%91%B8%E6%91%B8%E5%A4%B4/15817286)如是说 ：\n\n>**你我都明白，这从来就不是公平的世界。人们起点不同，路径不同，乃至遭遇不同，命运不同。有人认命，有人顺命，有人抗命，有人玩命，希望和失望交错而生，倏尔一生。**\n\n短短的一生中，有的人真正意义上获得的只是短暂的欣喜，更多的却是长久的自我煎熬。愿你的生活，与之相反，愿你拥有“太阳”，亦拥有璀璨的“繁星”。\n\n\n[1]: /medias/article/random-thoughts/The-Mcmoirs-of-a-Survivor.jpg","slug":"random-thoughts-2","published":1,"updated":"2018-09-26T10:40:53.647Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vg3000cogsm2mh79guu","content":"<p>近来在网上读到一段话，很是触动。网上标注这段话出自英国著名女作家，2007年诺贝尔文学奖获得者<a href=\"https://baike.baidu.com/item/%E5%A4%9A%E4%B8%BD%E4%B8%9D%C2%B7%E8%8E%B1%E8%BE%9B/8307879?fromtitle=%E8%8E%B1%E8%BE%9B&amp;fromid=13350458&amp;fr=aladdin\" target=\"_blank\" rel=\"noopener\"><strong>多丽丝·莱莘</strong></a>的长篇小说<a href=\"https://baike.baidu.com/item/%E5%B9%B8%E5%AD%98%E8%80%85%E5%9B%9E%E5%BF%86%E5%BD%95\" target=\"_blank\" rel=\"noopener\"><strong>《幸存者回忆录》</strong></a>，我粗略地阅读原著后并未在文中找到这段话，但可以肯定的是这段话确实出自莱莘笔下。进来，计划通读此书，再对以上话语作出最后定论。</p>\n<p><img src=\"/medias/article/random-thoughts/The-Mcmoirs-of-a-Survivor.jpg\" alt=\"幸存者回忆录\"></p>\n<p>不论最终结论肯定与否，最重要的是，这段话的内容，值得每一个读到他的人深思。原文如下所言：</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>做孩子的时候，感到无聊，盼望着长大。长大后，又向往返回童年。<br>我们浪费自己的健康，去赢得个人的财富,<br>然后又浪费自己的财富去重建自己的健康。<br><strong>我们焦虑地憧憬着未来，忘记了眼前的生活，</strong><br><strong>活得既不是为了现在，也不是为了未来。</strong><br><strong>我们活得似乎永远不会死，我们死得好像从来没活过。</strong></p>\n</blockquote>\n<p>文中最后两句话，尤其触动我的内心。私以为，这两句话一针见血地、深刻地总结了很多人的生活方式和生活意义。莱莘，英国人，都说艺术源于生活但高于生活，我倒觉得，文中的话用来描述很多人的生活和生命历程也是再贴切不过了。</p>\n<p>我们拼命地奔波，没日没夜的工作，放弃了休息团聚，忘记了春夏秋冬，看不到世界的“千里丹青”…… 我们苦苦追求，追求心中“向往的生活”。认为这只要现在“拼命”，以后就能过上想要的日子，就不用再“受罪”。我们总觉得来日方长，此时苦点儿没什么，以后“赢了”总有机会享受，好日子还在后头。可到后来，慢慢的，我们发现脖子不好了，腰不好了，胃不好了，血糖高了，血压也高了…… 迫不得已，再用浪费健康换得的为数不多的财富支付昂贵的医药费去重建自己的健康，之后再因为巨额的花销更加“拼命”…… 就这样，一直“乐此不疲”、“义无反顾”地走在这个“死循环”里。<code>我们活得似乎永远不会死</code>。</p>\n<p>到最后回首往昔，这一路走来却艰辛无比，我们反而失去很多，陪家人的时间少了，挚友少了，感情淡了，思考的时间少了，欢声笑语少了，甚至浪费了健康，却未见赢得多少财富，“好日子”似乎依旧遥遥无期。其实，我们忽略了一点，<strong>并非生活没有变好，也不是努力没有意义，真正在于需求与欲望也同样在膨胀，而且远远快于你努力的速度。</strong>于是，我们变得焦虑，焦虑于现在的不如人意，焦虑于将来可能的“不堪”，渐渐地忘记了眼前的生活。这样的生活，<code>活得既不是为了现在，也不是为了未来</code>。直到将要“告别”的时候，一切走到尽头，才恍然发现，我们没留下多少，更没有带走什么，<code>我们死得好像从来没活过</code>。真正的悲哀，莫过于此……</p>\n<p><a href=\"https://baike.baidu.com/item/%E6%8B%89%E5%AE%BE%E5%BE%B7%E6%8B%89%E7%BA%B3%E7%89%B9%C2%B7%E6%B3%B0%E6%88%88%E5%B0%94/490458?fromtitle=%E6%B3%B0%E6%88%88%E5%B0%94&amp;fromid=189375&amp;fr=aladdin\" target=\"_blank\" rel=\"noopener\"><strong>泰戈尔</strong></a>在<a href=\"https://baike.baidu.com/item/%E9%A3%9E%E9%B8%9F%E9%9B%86/732033?fr=aladdin\" target=\"_blank\" rel=\"noopener\"><strong>《飞鸟集》</strong></a>中有一首脍炙人口又富含哲理的诗：</p>\n<blockquote>\n<p><strong>如果你因错过太阳而哭泣，那么你也将失去繁星。</strong></p>\n</blockquote>\n<p>作者在洞察自然的同时用妙笔告诫人们：不要过分悲伤于错过的美好，珍惜眼前。短短二十几言，告诉了我们失与得联系，告诉我们化失望为希望，化悲伤为幸福的方法。而莱莘的文字中，正好描写了“铜币的另一面”——我们不仅错过了“太阳”，我们也失去了“繁星”。</p>\n<p><a href=\"https://baike.baidu.com/item/%E5%A4%A7%E5%86%B0/349069?fr=aladdin\" target=\"_blank\" rel=\"noopener\"><strong>大冰</strong></a>在<a href=\"https://baike.baidu.com/item/%E4%B9%96%EF%BC%8C%E6%91%B8%E6%91%B8%E5%A4%B4/15817286\" target=\"_blank\" rel=\"noopener\"><strong>《乖，摸摸头》</strong></a>如是说 ：</p>\n<blockquote>\n<p><strong>你我都明白，这从来就不是公平的世界。人们起点不同，路径不同，乃至遭遇不同，命运不同。有人认命，有人顺命，有人抗命，有人玩命，希望和失望交错而生，倏尔一生。</strong></p>\n</blockquote>\n<p>短短的一生中，有的人真正意义上获得的只是短暂的欣喜，更多的却是长久的自我煎熬。愿你的生活，与之相反，愿你拥有“太阳”，亦拥有璀璨的“繁星”。</p>\n","site":{"data":{}},"excerpt":"<p>近来在网上读到一段话，很是触动。网上标注这段话出自英国著名女作家，2007年诺贝尔文学奖获得者<a href=\"https://baike.baidu.com/item/%E5%A4%9A%E4%B8%BD%E4%B8%9D%C2%B7%E8%8E%B1%E8%BE%9B/8307879?fromtitle=%E8%8E%B1%E8%BE%9B&amp;fromid=13350458&amp;fr=aladdin\" target=\"_blank\" rel=\"noopener\"><strong>多丽丝·莱莘</strong></a>的长篇小说<a href=\"https://baike.baidu.com/item/%E5%B9%B8%E5%AD%98%E8%80%85%E5%9B%9E%E5%BF%86%E5%BD%95\" target=\"_blank\" rel=\"noopener\"><strong>《幸存者回忆录》</strong></a>，我粗略地阅读原著后并未在文中找到这段话，但可以肯定的是这段话确实出自莱莘笔下。进来，计划通读此书，再对以上话语作出最后定论。</p>\n<p><img src=\"/medias/article/random-thoughts/The-Mcmoirs-of-a-Survivor.jpg\" alt=\"幸存者回忆录\"></p>\n<p>不论最终结论肯定与否，最重要的是，这段话的内容，值得每一个读到他的人深思。原文如下所言：</p>","more":"<blockquote>\n<p>做孩子的时候，感到无聊，盼望着长大。长大后，又向往返回童年。<br>我们浪费自己的健康，去赢得个人的财富,<br>然后又浪费自己的财富去重建自己的健康。<br><strong>我们焦虑地憧憬着未来，忘记了眼前的生活，</strong><br><strong>活得既不是为了现在，也不是为了未来。</strong><br><strong>我们活得似乎永远不会死，我们死得好像从来没活过。</strong></p>\n</blockquote>\n<p>文中最后两句话，尤其触动我的内心。私以为，这两句话一针见血地、深刻地总结了很多人的生活方式和生活意义。莱莘，英国人，都说艺术源于生活但高于生活，我倒觉得，文中的话用来描述很多人的生活和生命历程也是再贴切不过了。</p>\n<p>我们拼命地奔波，没日没夜的工作，放弃了休息团聚，忘记了春夏秋冬，看不到世界的“千里丹青”…… 我们苦苦追求，追求心中“向往的生活”。认为这只要现在“拼命”，以后就能过上想要的日子，就不用再“受罪”。我们总觉得来日方长，此时苦点儿没什么，以后“赢了”总有机会享受，好日子还在后头。可到后来，慢慢的，我们发现脖子不好了，腰不好了，胃不好了，血糖高了，血压也高了…… 迫不得已，再用浪费健康换得的为数不多的财富支付昂贵的医药费去重建自己的健康，之后再因为巨额的花销更加“拼命”…… 就这样，一直“乐此不疲”、“义无反顾”地走在这个“死循环”里。<code>我们活得似乎永远不会死</code>。</p>\n<p>到最后回首往昔，这一路走来却艰辛无比，我们反而失去很多，陪家人的时间少了，挚友少了，感情淡了，思考的时间少了，欢声笑语少了，甚至浪费了健康，却未见赢得多少财富，“好日子”似乎依旧遥遥无期。其实，我们忽略了一点，<strong>并非生活没有变好，也不是努力没有意义，真正在于需求与欲望也同样在膨胀，而且远远快于你努力的速度。</strong>于是，我们变得焦虑，焦虑于现在的不如人意，焦虑于将来可能的“不堪”，渐渐地忘记了眼前的生活。这样的生活，<code>活得既不是为了现在，也不是为了未来</code>。直到将要“告别”的时候，一切走到尽头，才恍然发现，我们没留下多少，更没有带走什么，<code>我们死得好像从来没活过</code>。真正的悲哀，莫过于此……</p>\n<p><a href=\"https://baike.baidu.com/item/%E6%8B%89%E5%AE%BE%E5%BE%B7%E6%8B%89%E7%BA%B3%E7%89%B9%C2%B7%E6%B3%B0%E6%88%88%E5%B0%94/490458?fromtitle=%E6%B3%B0%E6%88%88%E5%B0%94&amp;fromid=189375&amp;fr=aladdin\" target=\"_blank\" rel=\"noopener\"><strong>泰戈尔</strong></a>在<a href=\"https://baike.baidu.com/item/%E9%A3%9E%E9%B8%9F%E9%9B%86/732033?fr=aladdin\" target=\"_blank\" rel=\"noopener\"><strong>《飞鸟集》</strong></a>中有一首脍炙人口又富含哲理的诗：</p>\n<blockquote>\n<p><strong>如果你因错过太阳而哭泣，那么你也将失去繁星。</strong></p>\n</blockquote>\n<p>作者在洞察自然的同时用妙笔告诫人们：不要过分悲伤于错过的美好，珍惜眼前。短短二十几言，告诉了我们失与得联系，告诉我们化失望为希望，化悲伤为幸福的方法。而莱莘的文字中，正好描写了“铜币的另一面”——我们不仅错过了“太阳”，我们也失去了“繁星”。</p>\n<p><a href=\"https://baike.baidu.com/item/%E5%A4%A7%E5%86%B0/349069?fr=aladdin\" target=\"_blank\" rel=\"noopener\"><strong>大冰</strong></a>在<a href=\"https://baike.baidu.com/item/%E4%B9%96%EF%BC%8C%E6%91%B8%E6%91%B8%E5%A4%B4/15817286\" target=\"_blank\" rel=\"noopener\"><strong>《乖，摸摸头》</strong></a>如是说 ：</p>\n<blockquote>\n<p><strong>你我都明白，这从来就不是公平的世界。人们起点不同，路径不同，乃至遭遇不同，命运不同。有人认命，有人顺命，有人抗命，有人玩命，希望和失望交错而生，倏尔一生。</strong></p>\n</blockquote>\n<p>短短的一生中，有的人真正意义上获得的只是短暂的欣喜，更多的却是长久的自我煎熬。愿你的生活，与之相反，愿你拥有“太阳”，亦拥有璀璨的“繁星”。</p>"},{"title":"分分钟教你用node.js写个爬虫","date":"2018-06-08T06:34:49.000Z","_content":"\n### 一、什么是爬虫\n> [网络爬虫](https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/5162711?fr=aladdin&fromid=22046949&fromtitle=%E7%88%AC%E8%99%AB)（又被称为网页蜘蛛，网络机器人，在`FOAF`社区中间，更经常的称为网页追逐者），是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。另外一些不常使用的名字还有蚂蚁、自动索引、模拟程序或者蠕虫。\n> [WIKIPEDIA 爬虫介绍](https://en.wikipedia.org/wiki/Web_crawler)\n\n\n### 二、爬虫的分类\n* 通用网络爬虫（全网爬虫）\n> 爬行对象从一些 `种子URL` 扩充到整个 Web，主要为门户站点搜索引擎和大型 Web 服务提供商采集数据。\n\n<!--more-->\n\n![通用爬虫工作流程][1]\n\n* 聚焦网络爬虫（主题网络爬虫）\n> 是 `指选择性` 地爬行那些与预先定义好的主题相关页面的网络爬虫。 \n\n* 增量式网络爬虫\n> 指对已下载网页采取增量式更新和 `只爬行新产生的或者已经发生变化网页` 的爬虫，它能够在一定程度上保证所爬行的页面是尽可能新的页面。\n\n* Deep Web 爬虫\n> 爬行对象是一些在用户填入关键字搜索或登录后才能访问到的`深层网页信息`的爬虫。\n\n\n### 三、爬虫的爬行策略\n* 通用网络爬虫（全网爬虫）\n> 深度优先策略、广度优先策略\n\n![页面关系模拟树状结构][2]\n\n* 聚焦网络爬虫（主题网络爬虫）\n> 基于内容评价的爬行策略（内容相关性），基于链接结构评价的爬行策略、基于增强学习的爬行策略（链接重要性），基于语境图的爬行策略（距离，图论中两节点间边的权重）\n\n* 增量式网络爬虫\n>  统一更新法、个体更新法、基于分类的更新法、自适应调频更新法\n\n* Deep Web 爬虫\n> Deep Web 爬虫爬行过程中最重要部分就是表单填写，包含两种类型：基于领域知识的表单填写、基于网页结构分析的表单填写\n\n**现代的网页爬虫的行为通常是四种策略组合的结果：**\n> 选择策略：决定所要下载的页面；\n> 重新访问策略：决定什么时候检查页面的更新变化；\n> 平衡礼貌策略：指出怎样避免站点超载；\n> 并行策略：指出怎么协同达到分布式抓取的效果；\n\n![现代分布式爬虫系统][3]\n\n### 四、写一个简单网页爬虫的流程\n1. 确定爬取对象（网站/页面）\n2. 分析页面内容（目标数据/DOM结构）\n3. 确定开发语言、框架、工具等\n4. 编码 测试，爬取数据\n5. 优化\n\n### 一个简单的百度新闻爬虫\n#### 确定爬取对象（网站/页面）\n> [百度新闻][4] （http://news.baidu.com/）\n\n#### 分析页面内容（目标数据/DOM结构）\n> ······\n\n#### 确定开发语言、框架、工具等\n> `node.js (express)` + `SublimeText 3`\n\n#### 编码，测试，爬取数据\n> coding ···\n\n### Let's start\n#### 新建项目目录\n> 1.在合适的磁盘目录下创建项目目录`baiduNews`（我的项目目录是：`F:\\web\\baiduNews`）\n\n**注：因为在写这篇文章的时候用的电脑真心比较渣。安装WebStorm或者VsCode跑项目有些吃力。所以后面的命令行操作我都是在Window自带的DOS命令行窗口中执行的。**\n\n#### 初始化package.json\n> 1.在DOS命令行中进入项目根目录 `baiduNews`\n> 2.执行`npm init`，初始化`package.json`文件\n\n\n#### 安装依赖\n> `express` （使用express来搭建一个简单的Http服务器。当然，你也可以使用node中自带的`http`模块）\n> `superagent` （superagent是node里一个非常方便的、轻量的、渐进式的第三方客户端请求代理模块，用他来请求目标页面）\n> `cheerio` （cheerio相当于node版的jQuery，用过jQuery的同学会非常容易上手。它主要是用来获取抓取到的页面元素和其中的数据信息）\n\n```\n// 个人比较喜欢使用yarn来安装依赖包,当然你也可以使用 npm install 来安装依赖，看个人习惯。\nyarn add express\nyarn add superagent\nyarn add cheerio\n```\n依赖安装完成后你可以在package.json中查看刚才安装的依赖是否成功。\n安装正确后如下图：\n\n![安装依赖包][5]\n\n#### 开始coding\n** 一、使用`express`启动一个简单的本地Http服务器 **\n\n1、在项目根目录下创建`index.js`文件（后面都会在这个index文件中进行coding）\n\n2、创建好`index.js`后，我们首先实例化一个`express`对象，用它来启动一个本地监听`3000`端口的Http服务。\n```\nconst express = require('express');\nconst app = express();\n\n// ...\n\nlet server = app.listen(3000, function () {\n  let host = server.address().address;\n  let port = server.address().port;\n  console.log('Your App is running at http://%s:%s', host, port);\n});\n```\n对，就是这么简单，不到10行代码，搭建启动一个简单的本地Http服务。\n\n3、按照国际惯例，我们希望在访问本机地址`http://localhost:3000`的时候，这个服务能给我们犯规一个`Hello World！`在`index.js`中加入如下代码：\n```\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n```\n>此时，在DOS中项目根目录`baiduNews`下执行`node index.js`,让项目跑起来。之后，打开浏览器，访问`http://localhost:3000`,你就会发现页面上显示'Hellow World!'字样。\n这样，在后面我们获取到百度新闻首页的信息后，就可以在访问`http://localhost:3000`时看到这些信息。\n\n**二、抓取百度新闻首页的新闻信息**\n\n1、 首先，我们先来分析一下百度新闻首页的页面信息。\n\n![百度新闻首页][6]\n\n![百度新闻首页][7]\n\n>百度新闻首页大体上分为“热点新闻”、“本地新闻”、“国内新闻”、“国际新闻”......等。这次我们先来尝试抓取左侧`“热点新闻”`和下方的`“本地新闻”`两处的新闻数据。\n\n![热点新闻DOM结构][8]\n>`F12`打开`Chrome`的控制台，审查页面元素，经过查看左侧“热点新闻”信息所在`DOM`的结构，我们发现所有的“热点新闻”信息（包括新闻标题和新闻页面链接）都在`id`为`#pane-news`的`<div`>下面`<ul>`下`<li>`下的`<a>`标签中。用`jQuery`的选择器表示为：`#pane-news ul li a`。\n\n2、为了爬取新闻数据，首先我们要用superagent请求目标页面，获取整个新闻首页信息\n```\n// 引入所需要的第三方包\nconst superagent= require('superagent');\n\nlet hotNews = [];\t\t\t\t\t\t\t\t// 热点新闻\nlet localNews = [];                              // 本地新闻\n\n/**\n * index.js\n * [description] - 使用superagent.get()方法来访问百度新闻首页\n */\nsuperagent.get('http://news.baidu.com/').end((err, res) => {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n   // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n   // 抓取热点新闻数据\n   hotNews = getHotNews(res)\n  }\n});\n```\n\n3、获取页面信息后，我们来定义一个函数`getHotNews()`来抓取页面内的“热点新闻”数据。\n```\n/**\n * index.js\n * [description] - 抓取热点新闻页面\n */\n// 引入所需要的第三方包\nconst cheerio = require('cheerio');\n\nlet getHotNews = (res) => {\n  let hotNews = [];\n  // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res.text中。\n  \n  /* 使用cheerio模块的cherrio.load()方法，将HTMLdocument作为参数传入函数\n     以后就可以使用类似jQuery的$(selectior)的方式来获取页面元素\n   */\n  let $ = cheerio.load(res.text);\n\n  // 找到目标数据所在的页面元素，获取数据\n  $('div#pane-news ul li a').each((idx, ele) => {\n    // cherrio中$('selector').each()用来遍历所有匹配到的DOM元素\n    // 参数idx是当前遍历的元素的索引，ele就是当前便利的DOM元素\n    let news = {\n      title: $(ele).text(),        // 获取新闻标题\n      href: $(ele).attr('href')    // 获取新闻网页链接\n    };\n    hotNews.push(news)              // 存入最终结果数组\n  });\n  return hotNews\n};\n```\n\n> 这里要多说几点：\n> 1. `async/await`据说是异步编程的终级解决方案,它可以让我们以同步的思维方式来进行异步编程。`Promise`解决了异步编程的“回调地狱”，async/await同时使异步流程控制变得友好而有清晰，有兴趣的同学可以去了解学习一下，真的很好用。\n> 2. `superagent`模块提供了很多比如`get`、`post`、`delte`等方法，可以很方便地进行Ajax请求操作。在请求结束后执行`.end()`回调函数。`.end()`接受一个函数作为参数，该函数又有两个参数`error和res`。当请求失败，`error`会包含返回的错误信息，请求成功，`error`值为`null`，返回的数据会包含在`res`参数中。\n> 3. `cheerio`模块的`.load()`方法，将`HTML document`作为参数传入函数，以后就可以使用类似jQuery的$(selectior)的方式来获取页面元素。同时可以使用类似于`jQuery`中的`.each()`来遍历元素。此外，还有很多方法，大家可以自行Google/Baidu。\n\n4、将抓取的数据返回给前端浏览器\n> 前面，`const app = express();`实例化了一个`express`对象`app`。\n`app.get('', async() => {})`接受两个参数，第一个参数接受一个String类型的路由路径，表示Ajax的请求路径。第二个参数接受一个函数Function，当请求此路径时就会执行这个函数中的代码。\n\n```\n/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get('/', async (req, res, next) => {\n  res.send(hotNews);\n});\n```\n>在DOS中项目根目录`baiduNews`下执行`node index.js`,让项目跑起来。之后，打开浏览器，访问`http://localhost:3000`,你就会发现抓取到的数据返回到了前端页面。我运行代码后浏览器展示的返回信息如下：\n**注：因为我的`Chrome`[安装了JSONView扩展程序][9]，所以返回的数据在页面展示的时候会被自动格式化为结构性的JSON格式，方便查看。**\n\n![热点新闻抓取结果][10]\n\n**OK！！这样，一个简单的百度`“热点新闻”`的爬虫就大功告成啦！！**\n\n> 简单总结一下，其实步骤很简单：\n> 1. `express`启动一个简单的`Http`服务\n> 2. 分析目标页面`DOM`结构，找到所要抓取的信息的相关`DOM`元素\n> 3. 使用`superagent`请求目标页面\n> 4. 使用`cheerio`获取页面元素，获取目标数据\n> 5. 返回数据到前端浏览器\n\n**现在，继续我们的目标，抓取`“本地新闻”`数据（编码过程中，我们会遇到一些有意思的问题）**\n有了前面的基础，我们自然而然的会想到利用和上面相同的方法“本地新闻”数据。\n1、 分析页面中“本地新闻”部分的`DOM`结构，如下图：\n\n![百度新闻本地新闻][11]\n\n> `F12`打开控制台，审查“本地新闻”`DOM`元素，我们发现，“本地新闻”分为两个主要部分，“左侧新闻”和右侧的“新闻资讯”。这所有目标数据都在`id`为`#local_news`的`div`中。“左侧新闻”数据又在`id`为`#localnews-focus`的`ul`标签下的`li`标签下的`a`标签中，包括新闻标题和页面链接。“本地资讯”数据又在`id`为`#localnews-zixun`的`div`下的`ul`标签下的`li`标签下的`a`标签中，包括新闻标题和页面链接。\n\n2、OK！分析了`DOM`结构，确定了数据的位置，接下来和爬取`“热点新闻”`一样，按部就班，定义一个`getLocalNews()`函数，爬取这些数据。\n\n```\n/**\n * [description] - 抓取本地新闻页面\n */\nlet getLocalNews = (res) => {\n  let localNews = [];\n  let $ = cheerio.load(res);\n    \n  // 本地新闻\n  $('ul#localnews-focus li a').each((idx, ele) => {\n    let news = {\n      title: $(ele).text(),\n      href: $(ele).attr('href'),\n    };\n    localNews.push(news)\n  });\n    \n  // 本地资讯\n  $('div#localnews-zixun ul li a').each((index, item) => {\n    let news = {\n      title: $(item).text(),\n      href: $(item).attr('href')\n    };\n    localNews.push(news);\n  });\n\n  return localNews\n};\n```\n\n对应的，在`superagent.get()`中请求页面后，我们需要调用`getLocalNews()`函数，来爬去本地新闻数据。\n`superagent.get()`函数修改为：\n```\nsuperagent.get('http://news.baidu.com/').end((err, res) => {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n   // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n   // 抓取热点新闻数据\n   hotNews = getHotNews(res)\n   localNews = getLocalNews(res)\n  }\n});\n```\n\n同时，我们要在`app.get()`路由中也要将数据返回给前端浏览器。`app.get()`路由代码修改为：\n```\n/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get('/', async (req, res, next) => {\n  res.send({\n    hotNews: hotNews,\n    localNews: localNews\n  });\n});\n```\n\n>编码完成，激动不已！！`DOS`中让项目跑起来，用浏览器访问`http://localhost:3000`\n\n**尴尬的事情发生了！！返回的数据只有热点新闻，而本地新闻返回一个空数组`[ ]`。检查代码，发现也没有问题，但为什么一直返回的空数组呢？**\n**经过一番原因查找，才返现问题出在哪里！！**\n\n### 一个有意思的问题\n> 为了找到原因，首先，我们看看用`superagent.get('http://news.baidu.com/').end((err, res) => {})`请求百度新闻首页在回调函数`.end()`中的第二个参数res中到底拿到了什么内容？\n\n```\n// 新定义一个全局变量 pageRes\nlet pageRes = {};\t    // supergaent页面返回值\n\n// superagent.get()中将res存入pageRes\nsuperagent.get('http://news.baidu.com/').end((err, res) => {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n    // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n    // 抓取热点新闻数据\n    // hotNews = getHotNews(res)\n    // localNews = getLocalNews(res)\n    pageRes = res\n  }\n});\n\n// 将pageRes返回给前端浏览器，便于查看\napp.get('/', async (req, res, next) => {\n  res.send({\n    // {}hotNews: hotNews,\n    // localNews: localNews,\n    pageRes: pageRes\n  });\n});\n```\n\n> 访问浏览器`http://localhost:3000`，页面展示如下内容：\n\n![superagent.get()请求返回值][12]\n\n> 可以看到，返回值中的`text`字段应该就是整个页面的`HTML`代码的字符串格式。为了方便我们观察，可以直接把这个`text`字段值返回给前端浏览器，这样我们就能够清晰地看到经过浏览器渲染后的页面。\n\n\n修改给前端浏览器的返回值\n\n```\napp.get('/', async (req, res, next) => {\n  res.send(pageRes.text)\n}\n```\n\n访问浏览器`http://localhost:3000`，页面展示如下内容：\n\n![本地新闻返回页面][13]\n\n> 审查元素才发现，原来我们抓取的目标数据所在的`DOM`元素中是空的，里面没有数据！\n到这里，一切水落石出！在我们使用`superagent.get()`访问百度新闻首页时，`res`中包含的获取的页面内容中，我们想要的“本地新闻”数据还没有生成，`DOM`节点元素是空的，所以出现前面的情况！抓取后返回的数据一直是空数组`[ ]`。\n\n![本地新闻请求接口][14]\n\n> 在控制台的`Network`中我们发现页面请求了一次这样的接口：\n`http://localhost:3000/widget?id=LocalNews&ajax=json&t=1526295667917`，接口状态 `404`。\n这应该就是百度新闻获取`“本地新闻”`的接口，到这里一切都明白了！“本地新闻”是在页面加载后动态请求上面这个接口获取的，所以我们用`superagent.get()`请求的页面再去请求这个接口时，接口`URL`中`hostname`部分变成了本地`IP`地址，而本机上没有这个接口，所以`404`，请求不到数据。\n\n**找到原因，我们来想办法解决这个问题！！**\n> 1. 直接使用`superagen`t访问正确合法的百度`“本地新闻”`的接口，获取数据后返回给前端浏览器。\n> 2. 使用第三方`npm`包，模拟浏览器访问百度新闻首页，在这个模拟浏览器中当`“本地新闻”`加载成功后，抓取数据，返回给前端浏览器。\n\n**以上方法均可，我们来试试比较有意思的第二种方法**\n\n### 使用`Nightmare`自动化测试工具\n\n> `Electron`可以让你使用纯`JavaScript`调用`Chrome`丰富的原生的接口来创造桌面应用。你可以把它看作一个专注于桌面应用的`Node.js`的变体，而不是`Web`服务器。其基于浏览器的应用方式可以极方便的做各种响应式的交互\n\n> `Nightmare`是一个基于`Electron`的框架，针对`Web`自动化测试和爬虫，因为其具有跟`PlantomJS`一样的自动化测试的功能可以在页面上模拟用户的行为触发一些异步数据加载，也可以跟`Request`库一样直接访问`URL`来抓取数据，并且可以设置页面的延迟时间，所以无论是手动触发脚本还是行为触发脚本都是轻而易举的。\n\n#### 安装依赖\n\n```\n// 安装nightmare\nyarn add nightmare\n```\n\n#### 为获取“本地新闻”，继续coding...\n\n给`index.js`中新增如下代码：\n\n```\nconst Nightmare = require('nightmare');          // 自动化测试包，处理动态页面\nconst nightmare = Nightmare({ show: true });     // show:true  显示内置模拟浏览器\n\n/**\n * [description] - 抓取本地新闻页面\n * [nremark] - 百度本地新闻在访问页面后加载js定位IP位置后获取对应新闻，\n * 所以抓取本地新闻需要使用 nightmare 一类的自动化测试工具，\n * 模拟浏览器环境访问页面，使js运行，生成动态页面再抓取\n */\n// 抓取本地新闻页面\nnightmare\n.goto('http://news.baidu.com/')\n.wait(\"div#local_news\")\n.evaluate(() => document.querySelector(\"div#local_news\").innerHTML)\n.then(htmlStr => {\n  // 获取本地新闻数据\n  localNews = getLocalNews(htmlStr)\n})\n.catch(error => {\n  console.log(`本地新闻抓取失败 - ${error}`);\n})\n```\n\n修改`getLocalNews()`函数为：\n\n```\n/**\n * [description]- 获取本地新闻数据\n */\nlet getLocalNews = (htmlStr) => {\n  let localNews = [];\n  let $ = cheerio.load(htmlStr);\n\n  // 本地新闻\n  $('ul#localnews-focus li a').each((idx, ele) => {\n    let news = {\n      title: $(ele).text(),\n      href: $(ele).attr('href'),\n    };\n    localNews.push(news)\n  });\n\n  // 本地资讯\n  $('div#localnews-zixun ul li a').each((index, item) => {\n    let news = {\n      title: $(item).text(),\n      href: $(item).attr('href')\n    };\n    localNews.push(news);\n  });\n\n  return localNews\n}\n```\n\n\n修改`app.get('/')`路由为：\n\n```\n/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get('/', async (req, res, next) => {\n  res.send({\n    hotNews: hotNews,\n    localNews: localNews\n  })\n});\n```\n\n> 此时，`DOS`命令行中重新让项目跑起来，浏览器访问`https://localhost:3000`，看看页面展示的信息，看是否抓取到了`“本地新闻”`数据！\n\n\n**至此，一个简单而又完整的抓取百度新闻页面“热点新闻”和“本地新闻”的爬虫就大功告成啦！！**\n\n**最后总结一下，整体思路如下：**\n> 1. `express`启动一个简单的`Http`服务\n> 2. 分析目标页面`DOM`结构，找到所要抓取的信息的相关`DOM元`素\n> 3. 使用`superagent`请求目标页面\n> 4. **动态页面（需要加载页面后运行`JS`或请求接口的页面）可以使用`Nightmare`模拟浏览器访问**\n> 5. 使用`cheerio`获取页面元素，获取目标数据\n\n###完整代码\n> 爬虫完整代码GitHub地址：[完整代码][15]\n\n\n***后面，应该还会做一些进阶，来爬取某些网站上比较好看的图片（手动滑稽），会牵扯到`并发控制`和`反-反爬虫`的一些策略。再用爬虫取爬去一些需要登录和输入验证码的网站，欢迎到时大家关注和指正交流。***\n\n\n  [1]: /medias/article/coding/news-spider/1.jpg\n  [2]: /medias/article/coding/news-spider/2.png\n  [3]: /medias/article/coding/news-spider/3.jpg\n  [4]: http://news.baidu.com/\n  [5]: /medias/article/coding/news-spider/4.jpg\n  [6]: /medias/article/coding/news-spider/5.jpg\n  [7]: /medias/article/coding/news-spider/6.jpg\n  [8]: /medias/article/coding/news-spider/7.jpg\n  [9]: https://www.cnblogs.com/whycxb/p/7126116.html\n  [10]: /medias/article/coding/news-spider/9.jpg\n  [11]: /medias/article/coding/news-spider/10.jpg\n  [12]: /medias/article/coding/news-spider/11.jpg\n  [13]: /medias/article/coding/news-spider/12.jpg\n  [14]: /medias/article/coding/news-spider/13.jpg\n  [15]: https://github.com/webCaolixin/news-Spider","source":"_posts/news-spider.md","raw":"---\ntitle: 分分钟教你用node.js写个爬虫\ncategories:\n- 编程\n- 前端\ntags: Node.JS\ndate: 2018-06-08 14:34:49\n---\n\n### 一、什么是爬虫\n> [网络爬虫](https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/5162711?fr=aladdin&fromid=22046949&fromtitle=%E7%88%AC%E8%99%AB)（又被称为网页蜘蛛，网络机器人，在`FOAF`社区中间，更经常的称为网页追逐者），是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。另外一些不常使用的名字还有蚂蚁、自动索引、模拟程序或者蠕虫。\n> [WIKIPEDIA 爬虫介绍](https://en.wikipedia.org/wiki/Web_crawler)\n\n\n### 二、爬虫的分类\n* 通用网络爬虫（全网爬虫）\n> 爬行对象从一些 `种子URL` 扩充到整个 Web，主要为门户站点搜索引擎和大型 Web 服务提供商采集数据。\n\n<!--more-->\n\n![通用爬虫工作流程][1]\n\n* 聚焦网络爬虫（主题网络爬虫）\n> 是 `指选择性` 地爬行那些与预先定义好的主题相关页面的网络爬虫。 \n\n* 增量式网络爬虫\n> 指对已下载网页采取增量式更新和 `只爬行新产生的或者已经发生变化网页` 的爬虫，它能够在一定程度上保证所爬行的页面是尽可能新的页面。\n\n* Deep Web 爬虫\n> 爬行对象是一些在用户填入关键字搜索或登录后才能访问到的`深层网页信息`的爬虫。\n\n\n### 三、爬虫的爬行策略\n* 通用网络爬虫（全网爬虫）\n> 深度优先策略、广度优先策略\n\n![页面关系模拟树状结构][2]\n\n* 聚焦网络爬虫（主题网络爬虫）\n> 基于内容评价的爬行策略（内容相关性），基于链接结构评价的爬行策略、基于增强学习的爬行策略（链接重要性），基于语境图的爬行策略（距离，图论中两节点间边的权重）\n\n* 增量式网络爬虫\n>  统一更新法、个体更新法、基于分类的更新法、自适应调频更新法\n\n* Deep Web 爬虫\n> Deep Web 爬虫爬行过程中最重要部分就是表单填写，包含两种类型：基于领域知识的表单填写、基于网页结构分析的表单填写\n\n**现代的网页爬虫的行为通常是四种策略组合的结果：**\n> 选择策略：决定所要下载的页面；\n> 重新访问策略：决定什么时候检查页面的更新变化；\n> 平衡礼貌策略：指出怎样避免站点超载；\n> 并行策略：指出怎么协同达到分布式抓取的效果；\n\n![现代分布式爬虫系统][3]\n\n### 四、写一个简单网页爬虫的流程\n1. 确定爬取对象（网站/页面）\n2. 分析页面内容（目标数据/DOM结构）\n3. 确定开发语言、框架、工具等\n4. 编码 测试，爬取数据\n5. 优化\n\n### 一个简单的百度新闻爬虫\n#### 确定爬取对象（网站/页面）\n> [百度新闻][4] （http://news.baidu.com/）\n\n#### 分析页面内容（目标数据/DOM结构）\n> ······\n\n#### 确定开发语言、框架、工具等\n> `node.js (express)` + `SublimeText 3`\n\n#### 编码，测试，爬取数据\n> coding ···\n\n### Let's start\n#### 新建项目目录\n> 1.在合适的磁盘目录下创建项目目录`baiduNews`（我的项目目录是：`F:\\web\\baiduNews`）\n\n**注：因为在写这篇文章的时候用的电脑真心比较渣。安装WebStorm或者VsCode跑项目有些吃力。所以后面的命令行操作我都是在Window自带的DOS命令行窗口中执行的。**\n\n#### 初始化package.json\n> 1.在DOS命令行中进入项目根目录 `baiduNews`\n> 2.执行`npm init`，初始化`package.json`文件\n\n\n#### 安装依赖\n> `express` （使用express来搭建一个简单的Http服务器。当然，你也可以使用node中自带的`http`模块）\n> `superagent` （superagent是node里一个非常方便的、轻量的、渐进式的第三方客户端请求代理模块，用他来请求目标页面）\n> `cheerio` （cheerio相当于node版的jQuery，用过jQuery的同学会非常容易上手。它主要是用来获取抓取到的页面元素和其中的数据信息）\n\n```\n// 个人比较喜欢使用yarn来安装依赖包,当然你也可以使用 npm install 来安装依赖，看个人习惯。\nyarn add express\nyarn add superagent\nyarn add cheerio\n```\n依赖安装完成后你可以在package.json中查看刚才安装的依赖是否成功。\n安装正确后如下图：\n\n![安装依赖包][5]\n\n#### 开始coding\n** 一、使用`express`启动一个简单的本地Http服务器 **\n\n1、在项目根目录下创建`index.js`文件（后面都会在这个index文件中进行coding）\n\n2、创建好`index.js`后，我们首先实例化一个`express`对象，用它来启动一个本地监听`3000`端口的Http服务。\n```\nconst express = require('express');\nconst app = express();\n\n// ...\n\nlet server = app.listen(3000, function () {\n  let host = server.address().address;\n  let port = server.address().port;\n  console.log('Your App is running at http://%s:%s', host, port);\n});\n```\n对，就是这么简单，不到10行代码，搭建启动一个简单的本地Http服务。\n\n3、按照国际惯例，我们希望在访问本机地址`http://localhost:3000`的时候，这个服务能给我们犯规一个`Hello World！`在`index.js`中加入如下代码：\n```\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n```\n>此时，在DOS中项目根目录`baiduNews`下执行`node index.js`,让项目跑起来。之后，打开浏览器，访问`http://localhost:3000`,你就会发现页面上显示'Hellow World!'字样。\n这样，在后面我们获取到百度新闻首页的信息后，就可以在访问`http://localhost:3000`时看到这些信息。\n\n**二、抓取百度新闻首页的新闻信息**\n\n1、 首先，我们先来分析一下百度新闻首页的页面信息。\n\n![百度新闻首页][6]\n\n![百度新闻首页][7]\n\n>百度新闻首页大体上分为“热点新闻”、“本地新闻”、“国内新闻”、“国际新闻”......等。这次我们先来尝试抓取左侧`“热点新闻”`和下方的`“本地新闻”`两处的新闻数据。\n\n![热点新闻DOM结构][8]\n>`F12`打开`Chrome`的控制台，审查页面元素，经过查看左侧“热点新闻”信息所在`DOM`的结构，我们发现所有的“热点新闻”信息（包括新闻标题和新闻页面链接）都在`id`为`#pane-news`的`<div`>下面`<ul>`下`<li>`下的`<a>`标签中。用`jQuery`的选择器表示为：`#pane-news ul li a`。\n\n2、为了爬取新闻数据，首先我们要用superagent请求目标页面，获取整个新闻首页信息\n```\n// 引入所需要的第三方包\nconst superagent= require('superagent');\n\nlet hotNews = [];\t\t\t\t\t\t\t\t// 热点新闻\nlet localNews = [];                              // 本地新闻\n\n/**\n * index.js\n * [description] - 使用superagent.get()方法来访问百度新闻首页\n */\nsuperagent.get('http://news.baidu.com/').end((err, res) => {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n   // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n   // 抓取热点新闻数据\n   hotNews = getHotNews(res)\n  }\n});\n```\n\n3、获取页面信息后，我们来定义一个函数`getHotNews()`来抓取页面内的“热点新闻”数据。\n```\n/**\n * index.js\n * [description] - 抓取热点新闻页面\n */\n// 引入所需要的第三方包\nconst cheerio = require('cheerio');\n\nlet getHotNews = (res) => {\n  let hotNews = [];\n  // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res.text中。\n  \n  /* 使用cheerio模块的cherrio.load()方法，将HTMLdocument作为参数传入函数\n     以后就可以使用类似jQuery的$(selectior)的方式来获取页面元素\n   */\n  let $ = cheerio.load(res.text);\n\n  // 找到目标数据所在的页面元素，获取数据\n  $('div#pane-news ul li a').each((idx, ele) => {\n    // cherrio中$('selector').each()用来遍历所有匹配到的DOM元素\n    // 参数idx是当前遍历的元素的索引，ele就是当前便利的DOM元素\n    let news = {\n      title: $(ele).text(),        // 获取新闻标题\n      href: $(ele).attr('href')    // 获取新闻网页链接\n    };\n    hotNews.push(news)              // 存入最终结果数组\n  });\n  return hotNews\n};\n```\n\n> 这里要多说几点：\n> 1. `async/await`据说是异步编程的终级解决方案,它可以让我们以同步的思维方式来进行异步编程。`Promise`解决了异步编程的“回调地狱”，async/await同时使异步流程控制变得友好而有清晰，有兴趣的同学可以去了解学习一下，真的很好用。\n> 2. `superagent`模块提供了很多比如`get`、`post`、`delte`等方法，可以很方便地进行Ajax请求操作。在请求结束后执行`.end()`回调函数。`.end()`接受一个函数作为参数，该函数又有两个参数`error和res`。当请求失败，`error`会包含返回的错误信息，请求成功，`error`值为`null`，返回的数据会包含在`res`参数中。\n> 3. `cheerio`模块的`.load()`方法，将`HTML document`作为参数传入函数，以后就可以使用类似jQuery的$(selectior)的方式来获取页面元素。同时可以使用类似于`jQuery`中的`.each()`来遍历元素。此外，还有很多方法，大家可以自行Google/Baidu。\n\n4、将抓取的数据返回给前端浏览器\n> 前面，`const app = express();`实例化了一个`express`对象`app`。\n`app.get('', async() => {})`接受两个参数，第一个参数接受一个String类型的路由路径，表示Ajax的请求路径。第二个参数接受一个函数Function，当请求此路径时就会执行这个函数中的代码。\n\n```\n/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get('/', async (req, res, next) => {\n  res.send(hotNews);\n});\n```\n>在DOS中项目根目录`baiduNews`下执行`node index.js`,让项目跑起来。之后，打开浏览器，访问`http://localhost:3000`,你就会发现抓取到的数据返回到了前端页面。我运行代码后浏览器展示的返回信息如下：\n**注：因为我的`Chrome`[安装了JSONView扩展程序][9]，所以返回的数据在页面展示的时候会被自动格式化为结构性的JSON格式，方便查看。**\n\n![热点新闻抓取结果][10]\n\n**OK！！这样，一个简单的百度`“热点新闻”`的爬虫就大功告成啦！！**\n\n> 简单总结一下，其实步骤很简单：\n> 1. `express`启动一个简单的`Http`服务\n> 2. 分析目标页面`DOM`结构，找到所要抓取的信息的相关`DOM`元素\n> 3. 使用`superagent`请求目标页面\n> 4. 使用`cheerio`获取页面元素，获取目标数据\n> 5. 返回数据到前端浏览器\n\n**现在，继续我们的目标，抓取`“本地新闻”`数据（编码过程中，我们会遇到一些有意思的问题）**\n有了前面的基础，我们自然而然的会想到利用和上面相同的方法“本地新闻”数据。\n1、 分析页面中“本地新闻”部分的`DOM`结构，如下图：\n\n![百度新闻本地新闻][11]\n\n> `F12`打开控制台，审查“本地新闻”`DOM`元素，我们发现，“本地新闻”分为两个主要部分，“左侧新闻”和右侧的“新闻资讯”。这所有目标数据都在`id`为`#local_news`的`div`中。“左侧新闻”数据又在`id`为`#localnews-focus`的`ul`标签下的`li`标签下的`a`标签中，包括新闻标题和页面链接。“本地资讯”数据又在`id`为`#localnews-zixun`的`div`下的`ul`标签下的`li`标签下的`a`标签中，包括新闻标题和页面链接。\n\n2、OK！分析了`DOM`结构，确定了数据的位置，接下来和爬取`“热点新闻”`一样，按部就班，定义一个`getLocalNews()`函数，爬取这些数据。\n\n```\n/**\n * [description] - 抓取本地新闻页面\n */\nlet getLocalNews = (res) => {\n  let localNews = [];\n  let $ = cheerio.load(res);\n    \n  // 本地新闻\n  $('ul#localnews-focus li a').each((idx, ele) => {\n    let news = {\n      title: $(ele).text(),\n      href: $(ele).attr('href'),\n    };\n    localNews.push(news)\n  });\n    \n  // 本地资讯\n  $('div#localnews-zixun ul li a').each((index, item) => {\n    let news = {\n      title: $(item).text(),\n      href: $(item).attr('href')\n    };\n    localNews.push(news);\n  });\n\n  return localNews\n};\n```\n\n对应的，在`superagent.get()`中请求页面后，我们需要调用`getLocalNews()`函数，来爬去本地新闻数据。\n`superagent.get()`函数修改为：\n```\nsuperagent.get('http://news.baidu.com/').end((err, res) => {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n   // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n   // 抓取热点新闻数据\n   hotNews = getHotNews(res)\n   localNews = getLocalNews(res)\n  }\n});\n```\n\n同时，我们要在`app.get()`路由中也要将数据返回给前端浏览器。`app.get()`路由代码修改为：\n```\n/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get('/', async (req, res, next) => {\n  res.send({\n    hotNews: hotNews,\n    localNews: localNews\n  });\n});\n```\n\n>编码完成，激动不已！！`DOS`中让项目跑起来，用浏览器访问`http://localhost:3000`\n\n**尴尬的事情发生了！！返回的数据只有热点新闻，而本地新闻返回一个空数组`[ ]`。检查代码，发现也没有问题，但为什么一直返回的空数组呢？**\n**经过一番原因查找，才返现问题出在哪里！！**\n\n### 一个有意思的问题\n> 为了找到原因，首先，我们看看用`superagent.get('http://news.baidu.com/').end((err, res) => {})`请求百度新闻首页在回调函数`.end()`中的第二个参数res中到底拿到了什么内容？\n\n```\n// 新定义一个全局变量 pageRes\nlet pageRes = {};\t    // supergaent页面返回值\n\n// superagent.get()中将res存入pageRes\nsuperagent.get('http://news.baidu.com/').end((err, res) => {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n    // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n    // 抓取热点新闻数据\n    // hotNews = getHotNews(res)\n    // localNews = getLocalNews(res)\n    pageRes = res\n  }\n});\n\n// 将pageRes返回给前端浏览器，便于查看\napp.get('/', async (req, res, next) => {\n  res.send({\n    // {}hotNews: hotNews,\n    // localNews: localNews,\n    pageRes: pageRes\n  });\n});\n```\n\n> 访问浏览器`http://localhost:3000`，页面展示如下内容：\n\n![superagent.get()请求返回值][12]\n\n> 可以看到，返回值中的`text`字段应该就是整个页面的`HTML`代码的字符串格式。为了方便我们观察，可以直接把这个`text`字段值返回给前端浏览器，这样我们就能够清晰地看到经过浏览器渲染后的页面。\n\n\n修改给前端浏览器的返回值\n\n```\napp.get('/', async (req, res, next) => {\n  res.send(pageRes.text)\n}\n```\n\n访问浏览器`http://localhost:3000`，页面展示如下内容：\n\n![本地新闻返回页面][13]\n\n> 审查元素才发现，原来我们抓取的目标数据所在的`DOM`元素中是空的，里面没有数据！\n到这里，一切水落石出！在我们使用`superagent.get()`访问百度新闻首页时，`res`中包含的获取的页面内容中，我们想要的“本地新闻”数据还没有生成，`DOM`节点元素是空的，所以出现前面的情况！抓取后返回的数据一直是空数组`[ ]`。\n\n![本地新闻请求接口][14]\n\n> 在控制台的`Network`中我们发现页面请求了一次这样的接口：\n`http://localhost:3000/widget?id=LocalNews&ajax=json&t=1526295667917`，接口状态 `404`。\n这应该就是百度新闻获取`“本地新闻”`的接口，到这里一切都明白了！“本地新闻”是在页面加载后动态请求上面这个接口获取的，所以我们用`superagent.get()`请求的页面再去请求这个接口时，接口`URL`中`hostname`部分变成了本地`IP`地址，而本机上没有这个接口，所以`404`，请求不到数据。\n\n**找到原因，我们来想办法解决这个问题！！**\n> 1. 直接使用`superagen`t访问正确合法的百度`“本地新闻”`的接口，获取数据后返回给前端浏览器。\n> 2. 使用第三方`npm`包，模拟浏览器访问百度新闻首页，在这个模拟浏览器中当`“本地新闻”`加载成功后，抓取数据，返回给前端浏览器。\n\n**以上方法均可，我们来试试比较有意思的第二种方法**\n\n### 使用`Nightmare`自动化测试工具\n\n> `Electron`可以让你使用纯`JavaScript`调用`Chrome`丰富的原生的接口来创造桌面应用。你可以把它看作一个专注于桌面应用的`Node.js`的变体，而不是`Web`服务器。其基于浏览器的应用方式可以极方便的做各种响应式的交互\n\n> `Nightmare`是一个基于`Electron`的框架，针对`Web`自动化测试和爬虫，因为其具有跟`PlantomJS`一样的自动化测试的功能可以在页面上模拟用户的行为触发一些异步数据加载，也可以跟`Request`库一样直接访问`URL`来抓取数据，并且可以设置页面的延迟时间，所以无论是手动触发脚本还是行为触发脚本都是轻而易举的。\n\n#### 安装依赖\n\n```\n// 安装nightmare\nyarn add nightmare\n```\n\n#### 为获取“本地新闻”，继续coding...\n\n给`index.js`中新增如下代码：\n\n```\nconst Nightmare = require('nightmare');          // 自动化测试包，处理动态页面\nconst nightmare = Nightmare({ show: true });     // show:true  显示内置模拟浏览器\n\n/**\n * [description] - 抓取本地新闻页面\n * [nremark] - 百度本地新闻在访问页面后加载js定位IP位置后获取对应新闻，\n * 所以抓取本地新闻需要使用 nightmare 一类的自动化测试工具，\n * 模拟浏览器环境访问页面，使js运行，生成动态页面再抓取\n */\n// 抓取本地新闻页面\nnightmare\n.goto('http://news.baidu.com/')\n.wait(\"div#local_news\")\n.evaluate(() => document.querySelector(\"div#local_news\").innerHTML)\n.then(htmlStr => {\n  // 获取本地新闻数据\n  localNews = getLocalNews(htmlStr)\n})\n.catch(error => {\n  console.log(`本地新闻抓取失败 - ${error}`);\n})\n```\n\n修改`getLocalNews()`函数为：\n\n```\n/**\n * [description]- 获取本地新闻数据\n */\nlet getLocalNews = (htmlStr) => {\n  let localNews = [];\n  let $ = cheerio.load(htmlStr);\n\n  // 本地新闻\n  $('ul#localnews-focus li a').each((idx, ele) => {\n    let news = {\n      title: $(ele).text(),\n      href: $(ele).attr('href'),\n    };\n    localNews.push(news)\n  });\n\n  // 本地资讯\n  $('div#localnews-zixun ul li a').each((index, item) => {\n    let news = {\n      title: $(item).text(),\n      href: $(item).attr('href')\n    };\n    localNews.push(news);\n  });\n\n  return localNews\n}\n```\n\n\n修改`app.get('/')`路由为：\n\n```\n/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get('/', async (req, res, next) => {\n  res.send({\n    hotNews: hotNews,\n    localNews: localNews\n  })\n});\n```\n\n> 此时，`DOS`命令行中重新让项目跑起来，浏览器访问`https://localhost:3000`，看看页面展示的信息，看是否抓取到了`“本地新闻”`数据！\n\n\n**至此，一个简单而又完整的抓取百度新闻页面“热点新闻”和“本地新闻”的爬虫就大功告成啦！！**\n\n**最后总结一下，整体思路如下：**\n> 1. `express`启动一个简单的`Http`服务\n> 2. 分析目标页面`DOM`结构，找到所要抓取的信息的相关`DOM元`素\n> 3. 使用`superagent`请求目标页面\n> 4. **动态页面（需要加载页面后运行`JS`或请求接口的页面）可以使用`Nightmare`模拟浏览器访问**\n> 5. 使用`cheerio`获取页面元素，获取目标数据\n\n###完整代码\n> 爬虫完整代码GitHub地址：[完整代码][15]\n\n\n***后面，应该还会做一些进阶，来爬取某些网站上比较好看的图片（手动滑稽），会牵扯到`并发控制`和`反-反爬虫`的一些策略。再用爬虫取爬去一些需要登录和输入验证码的网站，欢迎到时大家关注和指正交流。***\n\n\n  [1]: /medias/article/coding/news-spider/1.jpg\n  [2]: /medias/article/coding/news-spider/2.png\n  [3]: /medias/article/coding/news-spider/3.jpg\n  [4]: http://news.baidu.com/\n  [5]: /medias/article/coding/news-spider/4.jpg\n  [6]: /medias/article/coding/news-spider/5.jpg\n  [7]: /medias/article/coding/news-spider/6.jpg\n  [8]: /medias/article/coding/news-spider/7.jpg\n  [9]: https://www.cnblogs.com/whycxb/p/7126116.html\n  [10]: /medias/article/coding/news-spider/9.jpg\n  [11]: /medias/article/coding/news-spider/10.jpg\n  [12]: /medias/article/coding/news-spider/11.jpg\n  [13]: /medias/article/coding/news-spider/12.jpg\n  [14]: /medias/article/coding/news-spider/13.jpg\n  [15]: https://github.com/webCaolixin/news-Spider","slug":"news-spider","published":1,"updated":"2018-09-26T10:02:24.043Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vg3000fogsm383jholr","content":"<h3 id=\"一、什么是爬虫\"><a href=\"#一、什么是爬虫\" class=\"headerlink\" title=\"一、什么是爬虫\"></a>一、什么是爬虫</h3><blockquote>\n<p><a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/5162711?fr=aladdin&amp;fromid=22046949&amp;fromtitle=%E7%88%AC%E8%99%AB\" target=\"_blank\" rel=\"noopener\">网络爬虫</a>（又被称为网页蜘蛛，网络机器人，在<code>FOAF</code>社区中间，更经常的称为网页追逐者），是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。另外一些不常使用的名字还有蚂蚁、自动索引、模拟程序或者蠕虫。<br><a href=\"https://en.wikipedia.org/wiki/Web_crawler\" target=\"_blank\" rel=\"noopener\">WIKIPEDIA 爬虫介绍</a></p>\n</blockquote>\n<h3 id=\"二、爬虫的分类\"><a href=\"#二、爬虫的分类\" class=\"headerlink\" title=\"二、爬虫的分类\"></a>二、爬虫的分类</h3><ul>\n<li>通用网络爬虫（全网爬虫）<blockquote>\n<p>爬行对象从一些 <code>种子URL</code> 扩充到整个 Web，主要为门户站点搜索引擎和大型 Web 服务提供商采集数据。</p>\n</blockquote>\n</li>\n</ul>\n<a id=\"more\"></a>\n<p><img src=\"/medias/article/coding/news-spider/1.jpg\" alt=\"通用爬虫工作流程\"></p>\n<ul>\n<li><p>聚焦网络爬虫（主题网络爬虫）</p>\n<blockquote>\n<p>是 <code>指选择性</code> 地爬行那些与预先定义好的主题相关页面的网络爬虫。 </p>\n</blockquote>\n</li>\n<li><p>增量式网络爬虫</p>\n<blockquote>\n<p>指对已下载网页采取增量式更新和 <code>只爬行新产生的或者已经发生变化网页</code> 的爬虫，它能够在一定程度上保证所爬行的页面是尽可能新的页面。</p>\n</blockquote>\n</li>\n<li><p>Deep Web 爬虫</p>\n<blockquote>\n<p>爬行对象是一些在用户填入关键字搜索或登录后才能访问到的<code>深层网页信息</code>的爬虫。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"三、爬虫的爬行策略\"><a href=\"#三、爬虫的爬行策略\" class=\"headerlink\" title=\"三、爬虫的爬行策略\"></a>三、爬虫的爬行策略</h3><ul>\n<li>通用网络爬虫（全网爬虫）<blockquote>\n<p>深度优先策略、广度优先策略</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"/medias/article/coding/news-spider/2.png\" alt=\"页面关系模拟树状结构\"></p>\n<ul>\n<li><p>聚焦网络爬虫（主题网络爬虫）</p>\n<blockquote>\n<p>基于内容评价的爬行策略（内容相关性），基于链接结构评价的爬行策略、基于增强学习的爬行策略（链接重要性），基于语境图的爬行策略（距离，图论中两节点间边的权重）</p>\n</blockquote>\n</li>\n<li><p>增量式网络爬虫</p>\n<blockquote>\n<p> 统一更新法、个体更新法、基于分类的更新法、自适应调频更新法</p>\n</blockquote>\n</li>\n<li><p>Deep Web 爬虫</p>\n<blockquote>\n<p>Deep Web 爬虫爬行过程中最重要部分就是表单填写，包含两种类型：基于领域知识的表单填写、基于网页结构分析的表单填写</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>现代的网页爬虫的行为通常是四种策略组合的结果：</strong></p>\n<blockquote>\n<p>选择策略：决定所要下载的页面；<br>重新访问策略：决定什么时候检查页面的更新变化；<br>平衡礼貌策略：指出怎样避免站点超载；<br>并行策略：指出怎么协同达到分布式抓取的效果；</p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/3.jpg\" alt=\"现代分布式爬虫系统\"></p>\n<h3 id=\"四、写一个简单网页爬虫的流程\"><a href=\"#四、写一个简单网页爬虫的流程\" class=\"headerlink\" title=\"四、写一个简单网页爬虫的流程\"></a>四、写一个简单网页爬虫的流程</h3><ol>\n<li>确定爬取对象（网站/页面）</li>\n<li>分析页面内容（目标数据/DOM结构）</li>\n<li>确定开发语言、框架、工具等</li>\n<li>编码 测试，爬取数据</li>\n<li>优化</li>\n</ol>\n<h3 id=\"一个简单的百度新闻爬虫\"><a href=\"#一个简单的百度新闻爬虫\" class=\"headerlink\" title=\"一个简单的百度新闻爬虫\"></a>一个简单的百度新闻爬虫</h3><h4 id=\"确定爬取对象（网站-页面）\"><a href=\"#确定爬取对象（网站-页面）\" class=\"headerlink\" title=\"确定爬取对象（网站/页面）\"></a>确定爬取对象（网站/页面）</h4><blockquote>\n<p><a href=\"http://news.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度新闻</a> （<a href=\"http://news.baidu.com/）\" target=\"_blank\" rel=\"noopener\">http://news.baidu.com/）</a></p>\n</blockquote>\n<h4 id=\"分析页面内容（目标数据-DOM结构）\"><a href=\"#分析页面内容（目标数据-DOM结构）\" class=\"headerlink\" title=\"分析页面内容（目标数据/DOM结构）\"></a>分析页面内容（目标数据/DOM结构）</h4><blockquote>\n<p>······</p>\n</blockquote>\n<h4 id=\"确定开发语言、框架、工具等\"><a href=\"#确定开发语言、框架、工具等\" class=\"headerlink\" title=\"确定开发语言、框架、工具等\"></a>确定开发语言、框架、工具等</h4><blockquote>\n<p><code>node.js (express)</code> + <code>SublimeText 3</code></p>\n</blockquote>\n<h4 id=\"编码，测试，爬取数据\"><a href=\"#编码，测试，爬取数据\" class=\"headerlink\" title=\"编码，测试，爬取数据\"></a>编码，测试，爬取数据</h4><blockquote>\n<p>coding ···</p>\n</blockquote>\n<h3 id=\"Let’s-start\"><a href=\"#Let’s-start\" class=\"headerlink\" title=\"Let’s start\"></a>Let’s start</h3><h4 id=\"新建项目目录\"><a href=\"#新建项目目录\" class=\"headerlink\" title=\"新建项目目录\"></a>新建项目目录</h4><blockquote>\n<p>1.在合适的磁盘目录下创建项目目录<code>baiduNews</code>（我的项目目录是：<code>F:\\web\\baiduNews</code>）</p>\n</blockquote>\n<p><strong>注：因为在写这篇文章的时候用的电脑真心比较渣。安装WebStorm或者VsCode跑项目有些吃力。所以后面的命令行操作我都是在Window自带的DOS命令行窗口中执行的。</strong></p>\n<h4 id=\"初始化package-json\"><a href=\"#初始化package-json\" class=\"headerlink\" title=\"初始化package.json\"></a>初始化package.json</h4><blockquote>\n<p>1.在DOS命令行中进入项目根目录 <code>baiduNews</code><br>2.执行<code>npm init</code>，初始化<code>package.json</code>文件</p>\n</blockquote>\n<h4 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h4><blockquote>\n<p><code>express</code> （使用express来搭建一个简单的Http服务器。当然，你也可以使用node中自带的<code>http</code>模块）<br><code>superagent</code> （superagent是node里一个非常方便的、轻量的、渐进式的第三方客户端请求代理模块，用他来请求目标页面）<br><code>cheerio</code> （cheerio相当于node版的jQuery，用过jQuery的同学会非常容易上手。它主要是用来获取抓取到的页面元素和其中的数据信息）</p>\n</blockquote>\n<pre><code>// 个人比较喜欢使用yarn来安装依赖包,当然你也可以使用 npm install 来安装依赖，看个人习惯。\nyarn add express\nyarn add superagent\nyarn add cheerio\n</code></pre><p>依赖安装完成后你可以在package.json中查看刚才安装的依赖是否成功。<br>安装正确后如下图：</p>\n<p><img src=\"/medias/article/coding/news-spider/4.jpg\" alt=\"安装依赖包\"></p>\n<h4 id=\"开始coding\"><a href=\"#开始coding\" class=\"headerlink\" title=\"开始coding\"></a>开始coding</h4><p><strong> 一、使用<code>express</code>启动一个简单的本地Http服务器 </strong></p>\n<p>1、在项目根目录下创建<code>index.js</code>文件（后面都会在这个index文件中进行coding）</p>\n<p>2、创建好<code>index.js</code>后，我们首先实例化一个<code>express</code>对象，用它来启动一个本地监听<code>3000</code>端口的Http服务。</p>\n<pre><code>const express = require(&#39;express&#39;);\nconst app = express();\n\n// ...\n\nlet server = app.listen(3000, function () {\n  let host = server.address().address;\n  let port = server.address().port;\n  console.log(&#39;Your App is running at http://%s:%s&#39;, host, port);\n});\n</code></pre><p>对，就是这么简单，不到10行代码，搭建启动一个简单的本地Http服务。</p>\n<p>3、按照国际惯例，我们希望在访问本机地址<code>http://localhost:3000</code>的时候，这个服务能给我们犯规一个<code>Hello World！</code>在<code>index.js</code>中加入如下代码：</p>\n<pre><code>app.get(&#39;/&#39;, function (req, res) {\n  res.send(&#39;Hello World!&#39;);\n});\n</code></pre><blockquote>\n<p>此时，在DOS中项目根目录<code>baiduNews</code>下执行<code>node index.js</code>,让项目跑起来。之后，打开浏览器，访问<code>http://localhost:3000</code>,你就会发现页面上显示’Hellow World!’字样。<br>这样，在后面我们获取到百度新闻首页的信息后，就可以在访问<code>http://localhost:3000</code>时看到这些信息。</p>\n</blockquote>\n<p><strong>二、抓取百度新闻首页的新闻信息</strong></p>\n<p>1、 首先，我们先来分析一下百度新闻首页的页面信息。</p>\n<p><img src=\"/medias/article/coding/news-spider/5.jpg\" alt=\"百度新闻首页\"></p>\n<p><img src=\"/medias/article/coding/news-spider/6.jpg\" alt=\"百度新闻首页\"></p>\n<blockquote>\n<p>百度新闻首页大体上分为“热点新闻”、“本地新闻”、“国内新闻”、“国际新闻”……等。这次我们先来尝试抓取左侧<code>“热点新闻”</code>和下方的<code>“本地新闻”</code>两处的新闻数据。</p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/7.jpg\" alt=\"热点新闻DOM结构\"></p>\n<blockquote>\n<p><code>F12</code>打开<code>Chrome</code>的控制台，审查页面元素，经过查看左侧“热点新闻”信息所在<code>DOM</code>的结构，我们发现所有的“热点新闻”信息（包括新闻标题和新闻页面链接）都在<code>id</code>为<code>#pane-news</code>的<code>&lt;div</code>&gt;下面<code>&lt;ul&gt;</code>下<code>&lt;li&gt;</code>下的<code>&lt;a&gt;</code>标签中。用<code>jQuery</code>的选择器表示为：<code>#pane-news ul li a</code>。</p>\n</blockquote>\n<p>2、为了爬取新闻数据，首先我们要用superagent请求目标页面，获取整个新闻首页信息</p>\n<pre><code>// 引入所需要的第三方包\nconst superagent= require(&#39;superagent&#39;);\n\nlet hotNews = [];                                // 热点新闻\nlet localNews = [];                              // 本地新闻\n\n/**\n * index.js\n * [description] - 使用superagent.get()方法来访问百度新闻首页\n */\nsuperagent.get(&#39;http://news.baidu.com/&#39;).end((err, res) =&gt; {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n   // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n   // 抓取热点新闻数据\n   hotNews = getHotNews(res)\n  }\n});\n</code></pre><p>3、获取页面信息后，我们来定义一个函数<code>getHotNews()</code>来抓取页面内的“热点新闻”数据。</p>\n<pre><code>/**\n * index.js\n * [description] - 抓取热点新闻页面\n */\n// 引入所需要的第三方包\nconst cheerio = require(&#39;cheerio&#39;);\n\nlet getHotNews = (res) =&gt; {\n  let hotNews = [];\n  // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res.text中。\n\n  /* 使用cheerio模块的cherrio.load()方法，将HTMLdocument作为参数传入函数\n     以后就可以使用类似jQuery的$(selectior)的方式来获取页面元素\n   */\n  let $ = cheerio.load(res.text);\n\n  // 找到目标数据所在的页面元素，获取数据\n  $(&#39;div#pane-news ul li a&#39;).each((idx, ele) =&gt; {\n    // cherrio中$(&#39;selector&#39;).each()用来遍历所有匹配到的DOM元素\n    // 参数idx是当前遍历的元素的索引，ele就是当前便利的DOM元素\n    let news = {\n      title: $(ele).text(),        // 获取新闻标题\n      href: $(ele).attr(&#39;href&#39;)    // 获取新闻网页链接\n    };\n    hotNews.push(news)              // 存入最终结果数组\n  });\n  return hotNews\n};\n</code></pre><blockquote>\n<p>这里要多说几点：</p>\n<ol>\n<li><code>async/await</code>据说是异步编程的终级解决方案,它可以让我们以同步的思维方式来进行异步编程。<code>Promise</code>解决了异步编程的“回调地狱”，async/await同时使异步流程控制变得友好而有清晰，有兴趣的同学可以去了解学习一下，真的很好用。</li>\n<li><code>superagent</code>模块提供了很多比如<code>get</code>、<code>post</code>、<code>delte</code>等方法，可以很方便地进行Ajax请求操作。在请求结束后执行<code>.end()</code>回调函数。<code>.end()</code>接受一个函数作为参数，该函数又有两个参数<code>error和res</code>。当请求失败，<code>error</code>会包含返回的错误信息，请求成功，<code>error</code>值为<code>null</code>，返回的数据会包含在<code>res</code>参数中。</li>\n<li><code>cheerio</code>模块的<code>.load()</code>方法，将<code>HTML document</code>作为参数传入函数，以后就可以使用类似jQuery的$(selectior)的方式来获取页面元素。同时可以使用类似于<code>jQuery</code>中的<code>.each()</code>来遍历元素。此外，还有很多方法，大家可以自行Google/Baidu。</li>\n</ol>\n</blockquote>\n<p>4、将抓取的数据返回给前端浏览器</p>\n<blockquote>\n<p>前面，<code>const app = express();</code>实例化了一个<code>express</code>对象<code>app</code>。<br><code>app.get(&#39;&#39;, async() =&gt; {})</code>接受两个参数，第一个参数接受一个String类型的路由路径，表示Ajax的请求路径。第二个参数接受一个函数Function，当请求此路径时就会执行这个函数中的代码。</p>\n</blockquote>\n<pre><code>/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send(hotNews);\n});\n</code></pre><blockquote>\n<p>在DOS中项目根目录<code>baiduNews</code>下执行<code>node index.js</code>,让项目跑起来。之后，打开浏览器，访问<code>http://localhost:3000</code>,你就会发现抓取到的数据返回到了前端页面。我运行代码后浏览器展示的返回信息如下：<br><strong>注：因为我的<code>Chrome</code><a href=\"https://www.cnblogs.com/whycxb/p/7126116.html\" target=\"_blank\" rel=\"noopener\">安装了JSONView扩展程序</a>，所以返回的数据在页面展示的时候会被自动格式化为结构性的JSON格式，方便查看。</strong></p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/9.jpg\" alt=\"热点新闻抓取结果\"></p>\n<p><strong>OK！！这样，一个简单的百度<code>“热点新闻”</code>的爬虫就大功告成啦！！</strong></p>\n<blockquote>\n<p>简单总结一下，其实步骤很简单：</p>\n<ol>\n<li><code>express</code>启动一个简单的<code>Http</code>服务</li>\n<li>分析目标页面<code>DOM</code>结构，找到所要抓取的信息的相关<code>DOM</code>元素</li>\n<li>使用<code>superagent</code>请求目标页面</li>\n<li>使用<code>cheerio</code>获取页面元素，获取目标数据</li>\n<li>返回数据到前端浏览器</li>\n</ol>\n</blockquote>\n<p><strong>现在，继续我们的目标，抓取<code>“本地新闻”</code>数据（编码过程中，我们会遇到一些有意思的问题）</strong><br>有了前面的基础，我们自然而然的会想到利用和上面相同的方法“本地新闻”数据。<br>1、 分析页面中“本地新闻”部分的<code>DOM</code>结构，如下图：</p>\n<p><img src=\"/medias/article/coding/news-spider/10.jpg\" alt=\"百度新闻本地新闻\"></p>\n<blockquote>\n<p><code>F12</code>打开控制台，审查“本地新闻”<code>DOM</code>元素，我们发现，“本地新闻”分为两个主要部分，“左侧新闻”和右侧的“新闻资讯”。这所有目标数据都在<code>id</code>为<code>#local_news</code>的<code>div</code>中。“左侧新闻”数据又在<code>id</code>为<code>#localnews-focus</code>的<code>ul</code>标签下的<code>li</code>标签下的<code>a</code>标签中，包括新闻标题和页面链接。“本地资讯”数据又在<code>id</code>为<code>#localnews-zixun</code>的<code>div</code>下的<code>ul</code>标签下的<code>li</code>标签下的<code>a</code>标签中，包括新闻标题和页面链接。</p>\n</blockquote>\n<p>2、OK！分析了<code>DOM</code>结构，确定了数据的位置，接下来和爬取<code>“热点新闻”</code>一样，按部就班，定义一个<code>getLocalNews()</code>函数，爬取这些数据。</p>\n<pre><code>/**\n * [description] - 抓取本地新闻页面\n */\nlet getLocalNews = (res) =&gt; {\n  let localNews = [];\n  let $ = cheerio.load(res);\n\n  // 本地新闻\n  $(&#39;ul#localnews-focus li a&#39;).each((idx, ele) =&gt; {\n    let news = {\n      title: $(ele).text(),\n      href: $(ele).attr(&#39;href&#39;),\n    };\n    localNews.push(news)\n  });\n\n  // 本地资讯\n  $(&#39;div#localnews-zixun ul li a&#39;).each((index, item) =&gt; {\n    let news = {\n      title: $(item).text(),\n      href: $(item).attr(&#39;href&#39;)\n    };\n    localNews.push(news);\n  });\n\n  return localNews\n};\n</code></pre><p>对应的，在<code>superagent.get()</code>中请求页面后，我们需要调用<code>getLocalNews()</code>函数，来爬去本地新闻数据。<br><code>superagent.get()</code>函数修改为：</p>\n<pre><code>superagent.get(&#39;http://news.baidu.com/&#39;).end((err, res) =&gt; {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n   // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n   // 抓取热点新闻数据\n   hotNews = getHotNews(res)\n   localNews = getLocalNews(res)\n  }\n});\n</code></pre><p>同时，我们要在<code>app.get()</code>路由中也要将数据返回给前端浏览器。<code>app.get()</code>路由代码修改为：</p>\n<pre><code>/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send({\n    hotNews: hotNews,\n    localNews: localNews\n  });\n});\n</code></pre><blockquote>\n<p>编码完成，激动不已！！<code>DOS</code>中让项目跑起来，用浏览器访问<code>http://localhost:3000</code></p>\n</blockquote>\n<p><strong>尴尬的事情发生了！！返回的数据只有热点新闻，而本地新闻返回一个空数组<code>[ ]</code>。检查代码，发现也没有问题，但为什么一直返回的空数组呢？</strong><br><strong>经过一番原因查找，才返现问题出在哪里！！</strong></p>\n<h3 id=\"一个有意思的问题\"><a href=\"#一个有意思的问题\" class=\"headerlink\" title=\"一个有意思的问题\"></a>一个有意思的问题</h3><blockquote>\n<p>为了找到原因，首先，我们看看用<code>superagent.get(&#39;http://news.baidu.com/&#39;).end((err, res) =&gt; {})</code>请求百度新闻首页在回调函数<code>.end()</code>中的第二个参数res中到底拿到了什么内容？</p>\n</blockquote>\n<pre><code>// 新定义一个全局变量 pageRes\nlet pageRes = {};        // supergaent页面返回值\n\n// superagent.get()中将res存入pageRes\nsuperagent.get(&#39;http://news.baidu.com/&#39;).end((err, res) =&gt; {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n    // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n    // 抓取热点新闻数据\n    // hotNews = getHotNews(res)\n    // localNews = getLocalNews(res)\n    pageRes = res\n  }\n});\n\n// 将pageRes返回给前端浏览器，便于查看\napp.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send({\n    // {}hotNews: hotNews,\n    // localNews: localNews,\n    pageRes: pageRes\n  });\n});\n</code></pre><blockquote>\n<p>访问浏览器<code>http://localhost:3000</code>，页面展示如下内容：</p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/11.jpg\" alt=\"superagent.get()请求返回值\"></p>\n<blockquote>\n<p>可以看到，返回值中的<code>text</code>字段应该就是整个页面的<code>HTML</code>代码的字符串格式。为了方便我们观察，可以直接把这个<code>text</code>字段值返回给前端浏览器，这样我们就能够清晰地看到经过浏览器渲染后的页面。</p>\n</blockquote>\n<p>修改给前端浏览器的返回值</p>\n<pre><code>app.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send(pageRes.text)\n}\n</code></pre><p>访问浏览器<code>http://localhost:3000</code>，页面展示如下内容：</p>\n<p><img src=\"/medias/article/coding/news-spider/12.jpg\" alt=\"本地新闻返回页面\"></p>\n<blockquote>\n<p>审查元素才发现，原来我们抓取的目标数据所在的<code>DOM</code>元素中是空的，里面没有数据！<br>到这里，一切水落石出！在我们使用<code>superagent.get()</code>访问百度新闻首页时，<code>res</code>中包含的获取的页面内容中，我们想要的“本地新闻”数据还没有生成，<code>DOM</code>节点元素是空的，所以出现前面的情况！抓取后返回的数据一直是空数组<code>[ ]</code>。</p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/13.jpg\" alt=\"本地新闻请求接口\"></p>\n<blockquote>\n<p>在控制台的<code>Network</code>中我们发现页面请求了一次这样的接口：<br><code>http://localhost:3000/widget?id=LocalNews&amp;ajax=json&amp;t=1526295667917</code>，接口状态 <code>404</code>。<br>这应该就是百度新闻获取<code>“本地新闻”</code>的接口，到这里一切都明白了！“本地新闻”是在页面加载后动态请求上面这个接口获取的，所以我们用<code>superagent.get()</code>请求的页面再去请求这个接口时，接口<code>URL</code>中<code>hostname</code>部分变成了本地<code>IP</code>地址，而本机上没有这个接口，所以<code>404</code>，请求不到数据。</p>\n</blockquote>\n<p><strong>找到原因，我们来想办法解决这个问题！！</strong></p>\n<blockquote>\n<ol>\n<li>直接使用<code>superagen</code>t访问正确合法的百度<code>“本地新闻”</code>的接口，获取数据后返回给前端浏览器。</li>\n<li>使用第三方<code>npm</code>包，模拟浏览器访问百度新闻首页，在这个模拟浏览器中当<code>“本地新闻”</code>加载成功后，抓取数据，返回给前端浏览器。</li>\n</ol>\n</blockquote>\n<p><strong>以上方法均可，我们来试试比较有意思的第二种方法</strong></p>\n<h3 id=\"使用Nightmare自动化测试工具\"><a href=\"#使用Nightmare自动化测试工具\" class=\"headerlink\" title=\"使用Nightmare自动化测试工具\"></a>使用<code>Nightmare</code>自动化测试工具</h3><blockquote>\n<p><code>Electron</code>可以让你使用纯<code>JavaScript</code>调用<code>Chrome</code>丰富的原生的接口来创造桌面应用。你可以把它看作一个专注于桌面应用的<code>Node.js</code>的变体，而不是<code>Web</code>服务器。其基于浏览器的应用方式可以极方便的做各种响应式的交互</p>\n</blockquote>\n<blockquote>\n<p><code>Nightmare</code>是一个基于<code>Electron</code>的框架，针对<code>Web</code>自动化测试和爬虫，因为其具有跟<code>PlantomJS</code>一样的自动化测试的功能可以在页面上模拟用户的行为触发一些异步数据加载，也可以跟<code>Request</code>库一样直接访问<code>URL</code>来抓取数据，并且可以设置页面的延迟时间，所以无论是手动触发脚本还是行为触发脚本都是轻而易举的。</p>\n</blockquote>\n<h4 id=\"安装依赖-1\"><a href=\"#安装依赖-1\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h4><pre><code>// 安装nightmare\nyarn add nightmare\n</code></pre><h4 id=\"为获取“本地新闻”，继续coding…\"><a href=\"#为获取“本地新闻”，继续coding…\" class=\"headerlink\" title=\"为获取“本地新闻”，继续coding…\"></a>为获取“本地新闻”，继续coding…</h4><p>给<code>index.js</code>中新增如下代码：</p>\n<pre><code>const Nightmare = require(&#39;nightmare&#39;);          // 自动化测试包，处理动态页面\nconst nightmare = Nightmare({ show: true });     // show:true  显示内置模拟浏览器\n\n/**\n * [description] - 抓取本地新闻页面\n * [nremark] - 百度本地新闻在访问页面后加载js定位IP位置后获取对应新闻，\n * 所以抓取本地新闻需要使用 nightmare 一类的自动化测试工具，\n * 模拟浏览器环境访问页面，使js运行，生成动态页面再抓取\n */\n// 抓取本地新闻页面\nnightmare\n.goto(&#39;http://news.baidu.com/&#39;)\n.wait(&quot;div#local_news&quot;)\n.evaluate(() =&gt; document.querySelector(&quot;div#local_news&quot;).innerHTML)\n.then(htmlStr =&gt; {\n  // 获取本地新闻数据\n  localNews = getLocalNews(htmlStr)\n})\n.catch(error =&gt; {\n  console.log(`本地新闻抓取失败 - ${error}`);\n})\n</code></pre><p>修改<code>getLocalNews()</code>函数为：</p>\n<pre><code>/**\n * [description]- 获取本地新闻数据\n */\nlet getLocalNews = (htmlStr) =&gt; {\n  let localNews = [];\n  let $ = cheerio.load(htmlStr);\n\n  // 本地新闻\n  $(&#39;ul#localnews-focus li a&#39;).each((idx, ele) =&gt; {\n    let news = {\n      title: $(ele).text(),\n      href: $(ele).attr(&#39;href&#39;),\n    };\n    localNews.push(news)\n  });\n\n  // 本地资讯\n  $(&#39;div#localnews-zixun ul li a&#39;).each((index, item) =&gt; {\n    let news = {\n      title: $(item).text(),\n      href: $(item).attr(&#39;href&#39;)\n    };\n    localNews.push(news);\n  });\n\n  return localNews\n}\n</code></pre><p>修改<code>app.get(&#39;/&#39;)</code>路由为：</p>\n<pre><code>/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send({\n    hotNews: hotNews,\n    localNews: localNews\n  })\n});\n</code></pre><blockquote>\n<p>此时，<code>DOS</code>命令行中重新让项目跑起来，浏览器访问<code>https://localhost:3000</code>，看看页面展示的信息，看是否抓取到了<code>“本地新闻”</code>数据！</p>\n</blockquote>\n<p><strong>至此，一个简单而又完整的抓取百度新闻页面“热点新闻”和“本地新闻”的爬虫就大功告成啦！！</strong></p>\n<p><strong>最后总结一下，整体思路如下：</strong></p>\n<blockquote>\n<ol>\n<li><code>express</code>启动一个简单的<code>Http</code>服务</li>\n<li>分析目标页面<code>DOM</code>结构，找到所要抓取的信息的相关<code>DOM元</code>素</li>\n<li>使用<code>superagent</code>请求目标页面</li>\n<li><strong>动态页面（需要加载页面后运行<code>JS</code>或请求接口的页面）可以使用<code>Nightmare</code>模拟浏览器访问</strong></li>\n<li>使用<code>cheerio</code>获取页面元素，获取目标数据</li>\n</ol>\n</blockquote>\n<p>###完整代码</p>\n<blockquote>\n<p>爬虫完整代码GitHub地址：<a href=\"https://github.com/webCaolixin/news-Spider\" target=\"_blank\" rel=\"noopener\">完整代码</a></p>\n</blockquote>\n<p><strong><em>后面，应该还会做一些进阶，来爬取某些网站上比较好看的图片（手动滑稽），会牵扯到<code>并发控制</code>和<code>反-反爬虫</code>的一些策略。再用爬虫取爬去一些需要登录和输入验证码的网站，欢迎到时大家关注和指正交流。</em></strong></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"一、什么是爬虫\"><a href=\"#一、什么是爬虫\" class=\"headerlink\" title=\"一、什么是爬虫\"></a>一、什么是爬虫</h3><blockquote>\n<p><a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/5162711?fr=aladdin&amp;fromid=22046949&amp;fromtitle=%E7%88%AC%E8%99%AB\" target=\"_blank\" rel=\"noopener\">网络爬虫</a>（又被称为网页蜘蛛，网络机器人，在<code>FOAF</code>社区中间，更经常的称为网页追逐者），是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。另外一些不常使用的名字还有蚂蚁、自动索引、模拟程序或者蠕虫。<br><a href=\"https://en.wikipedia.org/wiki/Web_crawler\" target=\"_blank\" rel=\"noopener\">WIKIPEDIA 爬虫介绍</a></p>\n</blockquote>\n<h3 id=\"二、爬虫的分类\"><a href=\"#二、爬虫的分类\" class=\"headerlink\" title=\"二、爬虫的分类\"></a>二、爬虫的分类</h3><ul>\n<li>通用网络爬虫（全网爬虫）<blockquote>\n<p>爬行对象从一些 <code>种子URL</code> 扩充到整个 Web，主要为门户站点搜索引擎和大型 Web 服务提供商采集数据。</p>\n</blockquote>\n</li>\n</ul>","more":"<p><img src=\"/medias/article/coding/news-spider/1.jpg\" alt=\"通用爬虫工作流程\"></p>\n<ul>\n<li><p>聚焦网络爬虫（主题网络爬虫）</p>\n<blockquote>\n<p>是 <code>指选择性</code> 地爬行那些与预先定义好的主题相关页面的网络爬虫。 </p>\n</blockquote>\n</li>\n<li><p>增量式网络爬虫</p>\n<blockquote>\n<p>指对已下载网页采取增量式更新和 <code>只爬行新产生的或者已经发生变化网页</code> 的爬虫，它能够在一定程度上保证所爬行的页面是尽可能新的页面。</p>\n</blockquote>\n</li>\n<li><p>Deep Web 爬虫</p>\n<blockquote>\n<p>爬行对象是一些在用户填入关键字搜索或登录后才能访问到的<code>深层网页信息</code>的爬虫。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"三、爬虫的爬行策略\"><a href=\"#三、爬虫的爬行策略\" class=\"headerlink\" title=\"三、爬虫的爬行策略\"></a>三、爬虫的爬行策略</h3><ul>\n<li>通用网络爬虫（全网爬虫）<blockquote>\n<p>深度优先策略、广度优先策略</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"/medias/article/coding/news-spider/2.png\" alt=\"页面关系模拟树状结构\"></p>\n<ul>\n<li><p>聚焦网络爬虫（主题网络爬虫）</p>\n<blockquote>\n<p>基于内容评价的爬行策略（内容相关性），基于链接结构评价的爬行策略、基于增强学习的爬行策略（链接重要性），基于语境图的爬行策略（距离，图论中两节点间边的权重）</p>\n</blockquote>\n</li>\n<li><p>增量式网络爬虫</p>\n<blockquote>\n<p> 统一更新法、个体更新法、基于分类的更新法、自适应调频更新法</p>\n</blockquote>\n</li>\n<li><p>Deep Web 爬虫</p>\n<blockquote>\n<p>Deep Web 爬虫爬行过程中最重要部分就是表单填写，包含两种类型：基于领域知识的表单填写、基于网页结构分析的表单填写</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>现代的网页爬虫的行为通常是四种策略组合的结果：</strong></p>\n<blockquote>\n<p>选择策略：决定所要下载的页面；<br>重新访问策略：决定什么时候检查页面的更新变化；<br>平衡礼貌策略：指出怎样避免站点超载；<br>并行策略：指出怎么协同达到分布式抓取的效果；</p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/3.jpg\" alt=\"现代分布式爬虫系统\"></p>\n<h3 id=\"四、写一个简单网页爬虫的流程\"><a href=\"#四、写一个简单网页爬虫的流程\" class=\"headerlink\" title=\"四、写一个简单网页爬虫的流程\"></a>四、写一个简单网页爬虫的流程</h3><ol>\n<li>确定爬取对象（网站/页面）</li>\n<li>分析页面内容（目标数据/DOM结构）</li>\n<li>确定开发语言、框架、工具等</li>\n<li>编码 测试，爬取数据</li>\n<li>优化</li>\n</ol>\n<h3 id=\"一个简单的百度新闻爬虫\"><a href=\"#一个简单的百度新闻爬虫\" class=\"headerlink\" title=\"一个简单的百度新闻爬虫\"></a>一个简单的百度新闻爬虫</h3><h4 id=\"确定爬取对象（网站-页面）\"><a href=\"#确定爬取对象（网站-页面）\" class=\"headerlink\" title=\"确定爬取对象（网站/页面）\"></a>确定爬取对象（网站/页面）</h4><blockquote>\n<p><a href=\"http://news.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度新闻</a> （<a href=\"http://news.baidu.com/）\" target=\"_blank\" rel=\"noopener\">http://news.baidu.com/）</a></p>\n</blockquote>\n<h4 id=\"分析页面内容（目标数据-DOM结构）\"><a href=\"#分析页面内容（目标数据-DOM结构）\" class=\"headerlink\" title=\"分析页面内容（目标数据/DOM结构）\"></a>分析页面内容（目标数据/DOM结构）</h4><blockquote>\n<p>······</p>\n</blockquote>\n<h4 id=\"确定开发语言、框架、工具等\"><a href=\"#确定开发语言、框架、工具等\" class=\"headerlink\" title=\"确定开发语言、框架、工具等\"></a>确定开发语言、框架、工具等</h4><blockquote>\n<p><code>node.js (express)</code> + <code>SublimeText 3</code></p>\n</blockquote>\n<h4 id=\"编码，测试，爬取数据\"><a href=\"#编码，测试，爬取数据\" class=\"headerlink\" title=\"编码，测试，爬取数据\"></a>编码，测试，爬取数据</h4><blockquote>\n<p>coding ···</p>\n</blockquote>\n<h3 id=\"Let’s-start\"><a href=\"#Let’s-start\" class=\"headerlink\" title=\"Let’s start\"></a>Let’s start</h3><h4 id=\"新建项目目录\"><a href=\"#新建项目目录\" class=\"headerlink\" title=\"新建项目目录\"></a>新建项目目录</h4><blockquote>\n<p>1.在合适的磁盘目录下创建项目目录<code>baiduNews</code>（我的项目目录是：<code>F:\\web\\baiduNews</code>）</p>\n</blockquote>\n<p><strong>注：因为在写这篇文章的时候用的电脑真心比较渣。安装WebStorm或者VsCode跑项目有些吃力。所以后面的命令行操作我都是在Window自带的DOS命令行窗口中执行的。</strong></p>\n<h4 id=\"初始化package-json\"><a href=\"#初始化package-json\" class=\"headerlink\" title=\"初始化package.json\"></a>初始化package.json</h4><blockquote>\n<p>1.在DOS命令行中进入项目根目录 <code>baiduNews</code><br>2.执行<code>npm init</code>，初始化<code>package.json</code>文件</p>\n</blockquote>\n<h4 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h4><blockquote>\n<p><code>express</code> （使用express来搭建一个简单的Http服务器。当然，你也可以使用node中自带的<code>http</code>模块）<br><code>superagent</code> （superagent是node里一个非常方便的、轻量的、渐进式的第三方客户端请求代理模块，用他来请求目标页面）<br><code>cheerio</code> （cheerio相当于node版的jQuery，用过jQuery的同学会非常容易上手。它主要是用来获取抓取到的页面元素和其中的数据信息）</p>\n</blockquote>\n<pre><code>// 个人比较喜欢使用yarn来安装依赖包,当然你也可以使用 npm install 来安装依赖，看个人习惯。\nyarn add express\nyarn add superagent\nyarn add cheerio\n</code></pre><p>依赖安装完成后你可以在package.json中查看刚才安装的依赖是否成功。<br>安装正确后如下图：</p>\n<p><img src=\"/medias/article/coding/news-spider/4.jpg\" alt=\"安装依赖包\"></p>\n<h4 id=\"开始coding\"><a href=\"#开始coding\" class=\"headerlink\" title=\"开始coding\"></a>开始coding</h4><p><strong> 一、使用<code>express</code>启动一个简单的本地Http服务器 </strong></p>\n<p>1、在项目根目录下创建<code>index.js</code>文件（后面都会在这个index文件中进行coding）</p>\n<p>2、创建好<code>index.js</code>后，我们首先实例化一个<code>express</code>对象，用它来启动一个本地监听<code>3000</code>端口的Http服务。</p>\n<pre><code>const express = require(&#39;express&#39;);\nconst app = express();\n\n// ...\n\nlet server = app.listen(3000, function () {\n  let host = server.address().address;\n  let port = server.address().port;\n  console.log(&#39;Your App is running at http://%s:%s&#39;, host, port);\n});\n</code></pre><p>对，就是这么简单，不到10行代码，搭建启动一个简单的本地Http服务。</p>\n<p>3、按照国际惯例，我们希望在访问本机地址<code>http://localhost:3000</code>的时候，这个服务能给我们犯规一个<code>Hello World！</code>在<code>index.js</code>中加入如下代码：</p>\n<pre><code>app.get(&#39;/&#39;, function (req, res) {\n  res.send(&#39;Hello World!&#39;);\n});\n</code></pre><blockquote>\n<p>此时，在DOS中项目根目录<code>baiduNews</code>下执行<code>node index.js</code>,让项目跑起来。之后，打开浏览器，访问<code>http://localhost:3000</code>,你就会发现页面上显示’Hellow World!’字样。<br>这样，在后面我们获取到百度新闻首页的信息后，就可以在访问<code>http://localhost:3000</code>时看到这些信息。</p>\n</blockquote>\n<p><strong>二、抓取百度新闻首页的新闻信息</strong></p>\n<p>1、 首先，我们先来分析一下百度新闻首页的页面信息。</p>\n<p><img src=\"/medias/article/coding/news-spider/5.jpg\" alt=\"百度新闻首页\"></p>\n<p><img src=\"/medias/article/coding/news-spider/6.jpg\" alt=\"百度新闻首页\"></p>\n<blockquote>\n<p>百度新闻首页大体上分为“热点新闻”、“本地新闻”、“国内新闻”、“国际新闻”……等。这次我们先来尝试抓取左侧<code>“热点新闻”</code>和下方的<code>“本地新闻”</code>两处的新闻数据。</p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/7.jpg\" alt=\"热点新闻DOM结构\"></p>\n<blockquote>\n<p><code>F12</code>打开<code>Chrome</code>的控制台，审查页面元素，经过查看左侧“热点新闻”信息所在<code>DOM</code>的结构，我们发现所有的“热点新闻”信息（包括新闻标题和新闻页面链接）都在<code>id</code>为<code>#pane-news</code>的<code>&lt;div</code>&gt;下面<code>&lt;ul&gt;</code>下<code>&lt;li&gt;</code>下的<code>&lt;a&gt;</code>标签中。用<code>jQuery</code>的选择器表示为：<code>#pane-news ul li a</code>。</p>\n</blockquote>\n<p>2、为了爬取新闻数据，首先我们要用superagent请求目标页面，获取整个新闻首页信息</p>\n<pre><code>// 引入所需要的第三方包\nconst superagent= require(&#39;superagent&#39;);\n\nlet hotNews = [];                                // 热点新闻\nlet localNews = [];                              // 本地新闻\n\n/**\n * index.js\n * [description] - 使用superagent.get()方法来访问百度新闻首页\n */\nsuperagent.get(&#39;http://news.baidu.com/&#39;).end((err, res) =&gt; {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n   // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n   // 抓取热点新闻数据\n   hotNews = getHotNews(res)\n  }\n});\n</code></pre><p>3、获取页面信息后，我们来定义一个函数<code>getHotNews()</code>来抓取页面内的“热点新闻”数据。</p>\n<pre><code>/**\n * index.js\n * [description] - 抓取热点新闻页面\n */\n// 引入所需要的第三方包\nconst cheerio = require(&#39;cheerio&#39;);\n\nlet getHotNews = (res) =&gt; {\n  let hotNews = [];\n  // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res.text中。\n\n  /* 使用cheerio模块的cherrio.load()方法，将HTMLdocument作为参数传入函数\n     以后就可以使用类似jQuery的$(selectior)的方式来获取页面元素\n   */\n  let $ = cheerio.load(res.text);\n\n  // 找到目标数据所在的页面元素，获取数据\n  $(&#39;div#pane-news ul li a&#39;).each((idx, ele) =&gt; {\n    // cherrio中$(&#39;selector&#39;).each()用来遍历所有匹配到的DOM元素\n    // 参数idx是当前遍历的元素的索引，ele就是当前便利的DOM元素\n    let news = {\n      title: $(ele).text(),        // 获取新闻标题\n      href: $(ele).attr(&#39;href&#39;)    // 获取新闻网页链接\n    };\n    hotNews.push(news)              // 存入最终结果数组\n  });\n  return hotNews\n};\n</code></pre><blockquote>\n<p>这里要多说几点：</p>\n<ol>\n<li><code>async/await</code>据说是异步编程的终级解决方案,它可以让我们以同步的思维方式来进行异步编程。<code>Promise</code>解决了异步编程的“回调地狱”，async/await同时使异步流程控制变得友好而有清晰，有兴趣的同学可以去了解学习一下，真的很好用。</li>\n<li><code>superagent</code>模块提供了很多比如<code>get</code>、<code>post</code>、<code>delte</code>等方法，可以很方便地进行Ajax请求操作。在请求结束后执行<code>.end()</code>回调函数。<code>.end()</code>接受一个函数作为参数，该函数又有两个参数<code>error和res</code>。当请求失败，<code>error</code>会包含返回的错误信息，请求成功，<code>error</code>值为<code>null</code>，返回的数据会包含在<code>res</code>参数中。</li>\n<li><code>cheerio</code>模块的<code>.load()</code>方法，将<code>HTML document</code>作为参数传入函数，以后就可以使用类似jQuery的$(selectior)的方式来获取页面元素。同时可以使用类似于<code>jQuery</code>中的<code>.each()</code>来遍历元素。此外，还有很多方法，大家可以自行Google/Baidu。</li>\n</ol>\n</blockquote>\n<p>4、将抓取的数据返回给前端浏览器</p>\n<blockquote>\n<p>前面，<code>const app = express();</code>实例化了一个<code>express</code>对象<code>app</code>。<br><code>app.get(&#39;&#39;, async() =&gt; {})</code>接受两个参数，第一个参数接受一个String类型的路由路径，表示Ajax的请求路径。第二个参数接受一个函数Function，当请求此路径时就会执行这个函数中的代码。</p>\n</blockquote>\n<pre><code>/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send(hotNews);\n});\n</code></pre><blockquote>\n<p>在DOS中项目根目录<code>baiduNews</code>下执行<code>node index.js</code>,让项目跑起来。之后，打开浏览器，访问<code>http://localhost:3000</code>,你就会发现抓取到的数据返回到了前端页面。我运行代码后浏览器展示的返回信息如下：<br><strong>注：因为我的<code>Chrome</code><a href=\"https://www.cnblogs.com/whycxb/p/7126116.html\" target=\"_blank\" rel=\"noopener\">安装了JSONView扩展程序</a>，所以返回的数据在页面展示的时候会被自动格式化为结构性的JSON格式，方便查看。</strong></p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/9.jpg\" alt=\"热点新闻抓取结果\"></p>\n<p><strong>OK！！这样，一个简单的百度<code>“热点新闻”</code>的爬虫就大功告成啦！！</strong></p>\n<blockquote>\n<p>简单总结一下，其实步骤很简单：</p>\n<ol>\n<li><code>express</code>启动一个简单的<code>Http</code>服务</li>\n<li>分析目标页面<code>DOM</code>结构，找到所要抓取的信息的相关<code>DOM</code>元素</li>\n<li>使用<code>superagent</code>请求目标页面</li>\n<li>使用<code>cheerio</code>获取页面元素，获取目标数据</li>\n<li>返回数据到前端浏览器</li>\n</ol>\n</blockquote>\n<p><strong>现在，继续我们的目标，抓取<code>“本地新闻”</code>数据（编码过程中，我们会遇到一些有意思的问题）</strong><br>有了前面的基础，我们自然而然的会想到利用和上面相同的方法“本地新闻”数据。<br>1、 分析页面中“本地新闻”部分的<code>DOM</code>结构，如下图：</p>\n<p><img src=\"/medias/article/coding/news-spider/10.jpg\" alt=\"百度新闻本地新闻\"></p>\n<blockquote>\n<p><code>F12</code>打开控制台，审查“本地新闻”<code>DOM</code>元素，我们发现，“本地新闻”分为两个主要部分，“左侧新闻”和右侧的“新闻资讯”。这所有目标数据都在<code>id</code>为<code>#local_news</code>的<code>div</code>中。“左侧新闻”数据又在<code>id</code>为<code>#localnews-focus</code>的<code>ul</code>标签下的<code>li</code>标签下的<code>a</code>标签中，包括新闻标题和页面链接。“本地资讯”数据又在<code>id</code>为<code>#localnews-zixun</code>的<code>div</code>下的<code>ul</code>标签下的<code>li</code>标签下的<code>a</code>标签中，包括新闻标题和页面链接。</p>\n</blockquote>\n<p>2、OK！分析了<code>DOM</code>结构，确定了数据的位置，接下来和爬取<code>“热点新闻”</code>一样，按部就班，定义一个<code>getLocalNews()</code>函数，爬取这些数据。</p>\n<pre><code>/**\n * [description] - 抓取本地新闻页面\n */\nlet getLocalNews = (res) =&gt; {\n  let localNews = [];\n  let $ = cheerio.load(res);\n\n  // 本地新闻\n  $(&#39;ul#localnews-focus li a&#39;).each((idx, ele) =&gt; {\n    let news = {\n      title: $(ele).text(),\n      href: $(ele).attr(&#39;href&#39;),\n    };\n    localNews.push(news)\n  });\n\n  // 本地资讯\n  $(&#39;div#localnews-zixun ul li a&#39;).each((index, item) =&gt; {\n    let news = {\n      title: $(item).text(),\n      href: $(item).attr(&#39;href&#39;)\n    };\n    localNews.push(news);\n  });\n\n  return localNews\n};\n</code></pre><p>对应的，在<code>superagent.get()</code>中请求页面后，我们需要调用<code>getLocalNews()</code>函数，来爬去本地新闻数据。<br><code>superagent.get()</code>函数修改为：</p>\n<pre><code>superagent.get(&#39;http://news.baidu.com/&#39;).end((err, res) =&gt; {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n   // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n   // 抓取热点新闻数据\n   hotNews = getHotNews(res)\n   localNews = getLocalNews(res)\n  }\n});\n</code></pre><p>同时，我们要在<code>app.get()</code>路由中也要将数据返回给前端浏览器。<code>app.get()</code>路由代码修改为：</p>\n<pre><code>/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send({\n    hotNews: hotNews,\n    localNews: localNews\n  });\n});\n</code></pre><blockquote>\n<p>编码完成，激动不已！！<code>DOS</code>中让项目跑起来，用浏览器访问<code>http://localhost:3000</code></p>\n</blockquote>\n<p><strong>尴尬的事情发生了！！返回的数据只有热点新闻，而本地新闻返回一个空数组<code>[ ]</code>。检查代码，发现也没有问题，但为什么一直返回的空数组呢？</strong><br><strong>经过一番原因查找，才返现问题出在哪里！！</strong></p>\n<h3 id=\"一个有意思的问题\"><a href=\"#一个有意思的问题\" class=\"headerlink\" title=\"一个有意思的问题\"></a>一个有意思的问题</h3><blockquote>\n<p>为了找到原因，首先，我们看看用<code>superagent.get(&#39;http://news.baidu.com/&#39;).end((err, res) =&gt; {})</code>请求百度新闻首页在回调函数<code>.end()</code>中的第二个参数res中到底拿到了什么内容？</p>\n</blockquote>\n<pre><code>// 新定义一个全局变量 pageRes\nlet pageRes = {};        // supergaent页面返回值\n\n// superagent.get()中将res存入pageRes\nsuperagent.get(&#39;http://news.baidu.com/&#39;).end((err, res) =&gt; {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`热点新闻抓取失败 - ${err}`)\n  } else {\n    // 访问成功，请求http://news.baidu.com/页面所返回的数据会包含在res\n    // 抓取热点新闻数据\n    // hotNews = getHotNews(res)\n    // localNews = getLocalNews(res)\n    pageRes = res\n  }\n});\n\n// 将pageRes返回给前端浏览器，便于查看\napp.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send({\n    // {}hotNews: hotNews,\n    // localNews: localNews,\n    pageRes: pageRes\n  });\n});\n</code></pre><blockquote>\n<p>访问浏览器<code>http://localhost:3000</code>，页面展示如下内容：</p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/11.jpg\" alt=\"superagent.get()请求返回值\"></p>\n<blockquote>\n<p>可以看到，返回值中的<code>text</code>字段应该就是整个页面的<code>HTML</code>代码的字符串格式。为了方便我们观察，可以直接把这个<code>text</code>字段值返回给前端浏览器，这样我们就能够清晰地看到经过浏览器渲染后的页面。</p>\n</blockquote>\n<p>修改给前端浏览器的返回值</p>\n<pre><code>app.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send(pageRes.text)\n}\n</code></pre><p>访问浏览器<code>http://localhost:3000</code>，页面展示如下内容：</p>\n<p><img src=\"/medias/article/coding/news-spider/12.jpg\" alt=\"本地新闻返回页面\"></p>\n<blockquote>\n<p>审查元素才发现，原来我们抓取的目标数据所在的<code>DOM</code>元素中是空的，里面没有数据！<br>到这里，一切水落石出！在我们使用<code>superagent.get()</code>访问百度新闻首页时，<code>res</code>中包含的获取的页面内容中，我们想要的“本地新闻”数据还没有生成，<code>DOM</code>节点元素是空的，所以出现前面的情况！抓取后返回的数据一直是空数组<code>[ ]</code>。</p>\n</blockquote>\n<p><img src=\"/medias/article/coding/news-spider/13.jpg\" alt=\"本地新闻请求接口\"></p>\n<blockquote>\n<p>在控制台的<code>Network</code>中我们发现页面请求了一次这样的接口：<br><code>http://localhost:3000/widget?id=LocalNews&amp;ajax=json&amp;t=1526295667917</code>，接口状态 <code>404</code>。<br>这应该就是百度新闻获取<code>“本地新闻”</code>的接口，到这里一切都明白了！“本地新闻”是在页面加载后动态请求上面这个接口获取的，所以我们用<code>superagent.get()</code>请求的页面再去请求这个接口时，接口<code>URL</code>中<code>hostname</code>部分变成了本地<code>IP</code>地址，而本机上没有这个接口，所以<code>404</code>，请求不到数据。</p>\n</blockquote>\n<p><strong>找到原因，我们来想办法解决这个问题！！</strong></p>\n<blockquote>\n<ol>\n<li>直接使用<code>superagen</code>t访问正确合法的百度<code>“本地新闻”</code>的接口，获取数据后返回给前端浏览器。</li>\n<li>使用第三方<code>npm</code>包，模拟浏览器访问百度新闻首页，在这个模拟浏览器中当<code>“本地新闻”</code>加载成功后，抓取数据，返回给前端浏览器。</li>\n</ol>\n</blockquote>\n<p><strong>以上方法均可，我们来试试比较有意思的第二种方法</strong></p>\n<h3 id=\"使用Nightmare自动化测试工具\"><a href=\"#使用Nightmare自动化测试工具\" class=\"headerlink\" title=\"使用Nightmare自动化测试工具\"></a>使用<code>Nightmare</code>自动化测试工具</h3><blockquote>\n<p><code>Electron</code>可以让你使用纯<code>JavaScript</code>调用<code>Chrome</code>丰富的原生的接口来创造桌面应用。你可以把它看作一个专注于桌面应用的<code>Node.js</code>的变体，而不是<code>Web</code>服务器。其基于浏览器的应用方式可以极方便的做各种响应式的交互</p>\n</blockquote>\n<blockquote>\n<p><code>Nightmare</code>是一个基于<code>Electron</code>的框架，针对<code>Web</code>自动化测试和爬虫，因为其具有跟<code>PlantomJS</code>一样的自动化测试的功能可以在页面上模拟用户的行为触发一些异步数据加载，也可以跟<code>Request</code>库一样直接访问<code>URL</code>来抓取数据，并且可以设置页面的延迟时间，所以无论是手动触发脚本还是行为触发脚本都是轻而易举的。</p>\n</blockquote>\n<h4 id=\"安装依赖-1\"><a href=\"#安装依赖-1\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h4><pre><code>// 安装nightmare\nyarn add nightmare\n</code></pre><h4 id=\"为获取“本地新闻”，继续coding…\"><a href=\"#为获取“本地新闻”，继续coding…\" class=\"headerlink\" title=\"为获取“本地新闻”，继续coding…\"></a>为获取“本地新闻”，继续coding…</h4><p>给<code>index.js</code>中新增如下代码：</p>\n<pre><code>const Nightmare = require(&#39;nightmare&#39;);          // 自动化测试包，处理动态页面\nconst nightmare = Nightmare({ show: true });     // show:true  显示内置模拟浏览器\n\n/**\n * [description] - 抓取本地新闻页面\n * [nremark] - 百度本地新闻在访问页面后加载js定位IP位置后获取对应新闻，\n * 所以抓取本地新闻需要使用 nightmare 一类的自动化测试工具，\n * 模拟浏览器环境访问页面，使js运行，生成动态页面再抓取\n */\n// 抓取本地新闻页面\nnightmare\n.goto(&#39;http://news.baidu.com/&#39;)\n.wait(&quot;div#local_news&quot;)\n.evaluate(() =&gt; document.querySelector(&quot;div#local_news&quot;).innerHTML)\n.then(htmlStr =&gt; {\n  // 获取本地新闻数据\n  localNews = getLocalNews(htmlStr)\n})\n.catch(error =&gt; {\n  console.log(`本地新闻抓取失败 - ${error}`);\n})\n</code></pre><p>修改<code>getLocalNews()</code>函数为：</p>\n<pre><code>/**\n * [description]- 获取本地新闻数据\n */\nlet getLocalNews = (htmlStr) =&gt; {\n  let localNews = [];\n  let $ = cheerio.load(htmlStr);\n\n  // 本地新闻\n  $(&#39;ul#localnews-focus li a&#39;).each((idx, ele) =&gt; {\n    let news = {\n      title: $(ele).text(),\n      href: $(ele).attr(&#39;href&#39;),\n    };\n    localNews.push(news)\n  });\n\n  // 本地资讯\n  $(&#39;div#localnews-zixun ul li a&#39;).each((index, item) =&gt; {\n    let news = {\n      title: $(item).text(),\n      href: $(item).attr(&#39;href&#39;)\n    };\n    localNews.push(news);\n  });\n\n  return localNews\n}\n</code></pre><p>修改<code>app.get(&#39;/&#39;)</code>路由为：</p>\n<pre><code>/**\n * [description] - 跟路由\n */\n// 当一个get请求 http://localhost:3000时，就会后面的async函数\napp.get(&#39;/&#39;, async (req, res, next) =&gt; {\n  res.send({\n    hotNews: hotNews,\n    localNews: localNews\n  })\n});\n</code></pre><blockquote>\n<p>此时，<code>DOS</code>命令行中重新让项目跑起来，浏览器访问<code>https://localhost:3000</code>，看看页面展示的信息，看是否抓取到了<code>“本地新闻”</code>数据！</p>\n</blockquote>\n<p><strong>至此，一个简单而又完整的抓取百度新闻页面“热点新闻”和“本地新闻”的爬虫就大功告成啦！！</strong></p>\n<p><strong>最后总结一下，整体思路如下：</strong></p>\n<blockquote>\n<ol>\n<li><code>express</code>启动一个简单的<code>Http</code>服务</li>\n<li>分析目标页面<code>DOM</code>结构，找到所要抓取的信息的相关<code>DOM元</code>素</li>\n<li>使用<code>superagent</code>请求目标页面</li>\n<li><strong>动态页面（需要加载页面后运行<code>JS</code>或请求接口的页面）可以使用<code>Nightmare</code>模拟浏览器访问</strong></li>\n<li>使用<code>cheerio</code>获取页面元素，获取目标数据</li>\n</ol>\n</blockquote>\n<p>###完整代码</p>\n<blockquote>\n<p>爬虫完整代码GitHub地址：<a href=\"https://github.com/webCaolixin/news-Spider\" target=\"_blank\" rel=\"noopener\">完整代码</a></p>\n</blockquote>\n<p><strong><em>后面，应该还会做一些进阶，来爬取某些网站上比较好看的图片（手动滑稽），会牵扯到<code>并发控制</code>和<code>反-反爬虫</code>的一些策略。再用爬虫取爬去一些需要登录和输入验证码的网站，欢迎到时大家关注和指正交流。</em></strong></p>"},{"title":"长安城里的夜","date":"2018-09-18T02:05:19.000Z","_content":"\n### 前言\n\n> 本文写于我大四实习期间，2017年7月2日，周日凌晨。那时我还住在学校，平时坐车上下班。7月1日加班至近午夜零点，下班后于街上漫步，幸遇些许人物场景，心生感慨，遂记之。\n\n### 正文\n\n昨日加班，下班时已近午夜，身心有些疲惫。心想，晚了便晚了罢，那便沿街走走，好好看看这头顶城市的夜，毕竟深夜的景，深夜的静，不是匆忙的白日里所能求得的。单肩背着书包，拖着沉重的双腿，迈着缓缓的步子，独自一人走在深夜的街道上，偶尔哼唱几段旋律，添添几分乐趣。\n\n此时的西安城，不再灯火辉煌，温热的风，昏暗的灯，迷离的霓虹，摇曳的树影......路上不见了公交车的踪影，一眼望去街上的行人屈指可数，时不时有几辆私家车或出租车从身边驶过，此时才发觉原本熟悉的西安城却有着如此的神秘。\n\n<!--more-->\n\n走了一段路程，突然发现前面不远处有一位交警，看样子是在夜里执勤，还真是辛苦。他也看见了我，向我走过来说道：“小伙子，这么晚了，还在外面？”我怔了一下，答道：“是啊，加班，准备回去了。”他沉默了一会儿，笑了笑说：“这么晚，男生也要注意安全，快回去吧。”我回道：“嗯，谢谢！”这个夜晚，安静祥和，我相信每个夜晚都会是这样，因为总有许多像这位警察一样的卫士守护着这座城市的安宁。\n\n走在深夜的街道上，吹着微热的晚风，哼唱着熟悉的旋律，路过高新路的街道，远远的便有声声笑声入耳。前面，几位建筑工人在路边行道上一起吃着西瓜，看着很是悠闲。其中，有人席地而坐，有的慵懒的站着，看上去好不惬意。路过他们身边，听得一人说道：“唉...把他家的，忙活了一天，终于歇下了......”听完这一句，也便已远离他们的位置，只有身后慢慢远去的笑声还回荡在耳边。一天的忙碌，方得这美好的深夜，一口多汁的西瓜，便可忘去整日的烦恼和劳累。此时的夜，陪着他们，一起感受西瓜的香甜......\n\n未走多远，同一条街边，看到一位四五十岁的阿姨她在路边的一棵树下整理着什么。仔细一看，才发现她在整理一些废旧的纸箱。昏暗的光线，想着也许并不能看得清楚，一个个纸箱却被她用心地拆开，依照棱角慢慢压平，再堆放在身边。走近，她便问道：“你好，这会儿几点了？”她的语气很是温和。我掏出手机，很遗憾的是没电了。“不好意思，我的手机没电了”，我一边答道一遍举起手机示意。想着从公司离开的时间，估算了一下， “大概快一点了吧”，我补充道。她回道：“谢谢！”我笑着说：“不客气。”离开的时候，那位阿姨还在仔细的整理着那些纸箱，她心里也想早点回到家里吧，毕竟这深夜里，独自一人还是会觉得有些许的孤独。\n\n就这样，哼着《十点半的地铁》，继续我回学校的路。走到南二环，在医学院附近，转过弯看到一个路边摊，想起还未吃晚饭，便想着填填肚子。走近摊位发现老板坐在低矮的凳子上，吃着一碗像是已经变凉的馄饨。“老板也才吃晚饭啊！”我走上前说道。他抬起头，看着我笑了笑，站了起来，此时才发现，老板是一位看起来五六十岁的大叔。“还有吃的么，老板？”我带着期待的眼神看着他。“有！”老板爽快的回道。“都有什么吃的啊？”我追问到。“馄饨、包子、米线，都有”。我甚是欣喜，在子夜还能吃到路边摊，其实也是不容易了。“来一碗馄饨吧”我说道，“好嘞！”老板开始了忙碌。\n\n坐在那矮矮的凳子上，顿时觉得惬意无比，全身的放松，让人想坐着这里，看着夜景，一直到天亮。坐下没多久，一位中年男子走过，蓝黑色的短袖，黑色的裤子，一双拖鞋，头略微扬起，看着天空，看样子也是满脸疲惫。经过摊位前，老板打声招呼:“下班啦？” “嗯，下班了......”中年男子叹息一样地回答道。我心想，这男子和老板应该是老熟人了吧，常常就在这摊位前，这样遇见。慢慢的，男子远离了摊位......在如今，总有人带着一天的酸甜苦辣，在深夜里，仰天长叹。\n\n没坐一会儿，馄饨登场，皮薄馅大，还未入口，便觉得馋人，一勺鲜汤，便可忘却前面所有的疲倦与劳累。鲜嫩的紫菜，清香的香菜还有点睛之效的榨菜为这看似普通的馄饨注入了灵魂。\n\n在细细享受这美食之时，一辆出租车停在了路边，司机看起来三十多岁，白色的体恤，棕色的裤子，一双凉皮鞋。未到摊位前便说道：“老板，一碗米线，一笼包子！”“先坐，马上就好！”老板爽快的回应到。司机坐在矮桌前，低着头看着手机，目不转睛，我能看到他时不时扬起嘴角，高兴的心情满满的溢在脸上。也许是看到了什么笑话，才让他在这摊位前暂时地放下一切，也许是今天拉客挣了些钱，可以给孩子买好吃的，也许，家里有喜事也说不定。没多久，一位外卖小哥骑着电动车，一身蓝色的工作服，来到摊位前：“老板，一碗麻辣米线带走。”“好嘞，马上就好！”之后，老板开始了新一轮的忙碌。小哥弯下身子，双臂搭在电动车头上，把头埋进了双臂中。他，应该也很是疲惫吧......忙碌的一天，给别人准时送去美食，自己却只能在这深夜里靠一碗米线填饱肚子。今晚，我们有缘相遇，尽管可能只是擦肩而过，但大家都是“夜归人”......\n\n吃完馄饨，特意多喝了几口汤，心满意足。“老板，馄饨多少钱？”，“5块...”老板回应道。付钱时，对老板笑道：“馄饨很好吃，谢谢！”老板开心地笑了笑。也许一碗馄饨没有多少利润，但一句肯定，一个微笑，希望在这深夜里给予老板小小的幸福。\n\n夜很深了，也该早些回学校了。在路边拦下一辆出租车，坐上副驾驶，“师傅，去理工大金花校区”，我一边系安全带一边告知司机我的目的地。司机娴熟的车技，带着我飞驰在深夜的南二环上。看着窗外快速倒退的风景，路边一闪即过的行道树，渐渐的有些困乏,眼睛微闭，靠在座椅上，静静地等待着回到学校。不超半个钟头，到达学校东门，今日的事情，深夜的见闻，即将结束。回到办公室（因下班太晚，宿舍大楼已熄灯闭门，当晚我便在学生会的办公室住了一夜），写下此文，用文字记下这如诗似剧的夜境。\n\n### 后记\n\n> 在如今，总有人披星戴月地奔波，早出晚归。深夜里，每一位“夜归人”都有属于自己的故事，属于自己酸甜苦辣，这所有的一切，就只为了自己心中那份最简单而又美好的心愿与目标。也许只有在这深夜里，在夜深人静的时候，我们才会静下心来，回味这一天，甚至是回味一路走来的平坦与坎坷。这时候，我们也许会审视自己，看看心灵深处的自己，开心、难过、委屈、思念等等这些情感在这时被不断放大，最终极大化。也许这时再也抑制不住内心的汹涌，迷离过后，流泪过后，我们依旧会怀揣着心里的那份执着、对未来的期许、对远方的思念等等寄托慢慢入睡，期待着明日的第一缕朝阳划破天际。\n\n最后，把我最喜欢的一位歌手——**[李健](https://www.baidu.com/link?url=BsltTzlHbDVY83hcXfq3fs1sPLee1fFXhRZperHgpnpGYrvNA1pkm_tIOWp6uwExDNz7hzr-4fK3XXpcLC3cvZElHhODunSKMhXqKqAcjTu&wd=&eqid=a1ae7140000804bc000000035b7167a3)**的一首歌曲 **[《异乡人》](https://baike.baidu.com/item/%E5%BC%82%E4%B9%A1%E4%BA%BA/6402179?fr=aladdin)**分享给大家。这是作为东北黑龙江人的李健当时身处北京时，所作的一首歌曲。在2017年《歌手》节目中对歌词进行新的修改和补充，词曲中对独自在外拼搏的“异乡人”的生活做了细致的描写，也对“异乡人”的孤独、迷茫、无助以及对故乡思念的情感进行了淋漓尽致的表达。\n<div id=\"content-ctn\">\n  <div class=\"centerContent\">\n    **异乡人**\n    **作词： 李健**\n    **作曲: 李健**\n\n    披星戴月地奔波\n    只为一扇窗\n    当你迷失在路上\n    能够看见那灯光\n    不知不觉把他乡\n    当做了故乡\n    只是偶尔难过时\n    不经意遥望远方\n    曾经的乡音\n    悄悄地隐藏\n    说不出的诺言\n    一直放心上\n    有许多时候\n    眼泪就要流\n    那扇窗是让我\n    坚强的理由\n    小小的门口\n    还有她的温柔\n    给我温暖陪伴我左右\n    近在眼前的繁华\n    多少人着迷\n    当你走近才发现\n    远过故乡的距离\n    不知不觉把他乡\n    当做了故乡\n    故乡却已成他乡\n    偶尔你才敢回望\n    曾经的坎坷\n    现 在不用讲\n    异乡的人有着相同的惆怅\n    有许多时候\n    眼泪就要流\n    那扇窗是让我\n    坚强的理由\n    小小的门口\n    还有她的温柔\n    给我温暖陪伴我左右\n    有许多时候\n    眼泪就要流\n    那扇窗是让我坚强的理由\n    就在这时候\n    眼泪已经流\n    那扇窗依然明亮为我守候\n    看过了多少\n    海市蜃楼\n    让我回到小小的门口\n    给我温暖陪伴我左右\n    给我温暖陪伴我左右\n  </div>\n </div>","source":"_posts/the-night-scence-of-chang-An-city.md","raw":"---\ntitle: 长安城里的夜\ndate: 2018-09-18 10:05:19\ncategories: 日志\ntags: 朝花夕拾\n---\n\n### 前言\n\n> 本文写于我大四实习期间，2017年7月2日，周日凌晨。那时我还住在学校，平时坐车上下班。7月1日加班至近午夜零点，下班后于街上漫步，幸遇些许人物场景，心生感慨，遂记之。\n\n### 正文\n\n昨日加班，下班时已近午夜，身心有些疲惫。心想，晚了便晚了罢，那便沿街走走，好好看看这头顶城市的夜，毕竟深夜的景，深夜的静，不是匆忙的白日里所能求得的。单肩背着书包，拖着沉重的双腿，迈着缓缓的步子，独自一人走在深夜的街道上，偶尔哼唱几段旋律，添添几分乐趣。\n\n此时的西安城，不再灯火辉煌，温热的风，昏暗的灯，迷离的霓虹，摇曳的树影......路上不见了公交车的踪影，一眼望去街上的行人屈指可数，时不时有几辆私家车或出租车从身边驶过，此时才发觉原本熟悉的西安城却有着如此的神秘。\n\n<!--more-->\n\n走了一段路程，突然发现前面不远处有一位交警，看样子是在夜里执勤，还真是辛苦。他也看见了我，向我走过来说道：“小伙子，这么晚了，还在外面？”我怔了一下，答道：“是啊，加班，准备回去了。”他沉默了一会儿，笑了笑说：“这么晚，男生也要注意安全，快回去吧。”我回道：“嗯，谢谢！”这个夜晚，安静祥和，我相信每个夜晚都会是这样，因为总有许多像这位警察一样的卫士守护着这座城市的安宁。\n\n走在深夜的街道上，吹着微热的晚风，哼唱着熟悉的旋律，路过高新路的街道，远远的便有声声笑声入耳。前面，几位建筑工人在路边行道上一起吃着西瓜，看着很是悠闲。其中，有人席地而坐，有的慵懒的站着，看上去好不惬意。路过他们身边，听得一人说道：“唉...把他家的，忙活了一天，终于歇下了......”听完这一句，也便已远离他们的位置，只有身后慢慢远去的笑声还回荡在耳边。一天的忙碌，方得这美好的深夜，一口多汁的西瓜，便可忘去整日的烦恼和劳累。此时的夜，陪着他们，一起感受西瓜的香甜......\n\n未走多远，同一条街边，看到一位四五十岁的阿姨她在路边的一棵树下整理着什么。仔细一看，才发现她在整理一些废旧的纸箱。昏暗的光线，想着也许并不能看得清楚，一个个纸箱却被她用心地拆开，依照棱角慢慢压平，再堆放在身边。走近，她便问道：“你好，这会儿几点了？”她的语气很是温和。我掏出手机，很遗憾的是没电了。“不好意思，我的手机没电了”，我一边答道一遍举起手机示意。想着从公司离开的时间，估算了一下， “大概快一点了吧”，我补充道。她回道：“谢谢！”我笑着说：“不客气。”离开的时候，那位阿姨还在仔细的整理着那些纸箱，她心里也想早点回到家里吧，毕竟这深夜里，独自一人还是会觉得有些许的孤独。\n\n就这样，哼着《十点半的地铁》，继续我回学校的路。走到南二环，在医学院附近，转过弯看到一个路边摊，想起还未吃晚饭，便想着填填肚子。走近摊位发现老板坐在低矮的凳子上，吃着一碗像是已经变凉的馄饨。“老板也才吃晚饭啊！”我走上前说道。他抬起头，看着我笑了笑，站了起来，此时才发现，老板是一位看起来五六十岁的大叔。“还有吃的么，老板？”我带着期待的眼神看着他。“有！”老板爽快的回道。“都有什么吃的啊？”我追问到。“馄饨、包子、米线，都有”。我甚是欣喜，在子夜还能吃到路边摊，其实也是不容易了。“来一碗馄饨吧”我说道，“好嘞！”老板开始了忙碌。\n\n坐在那矮矮的凳子上，顿时觉得惬意无比，全身的放松，让人想坐着这里，看着夜景，一直到天亮。坐下没多久，一位中年男子走过，蓝黑色的短袖，黑色的裤子，一双拖鞋，头略微扬起，看着天空，看样子也是满脸疲惫。经过摊位前，老板打声招呼:“下班啦？” “嗯，下班了......”中年男子叹息一样地回答道。我心想，这男子和老板应该是老熟人了吧，常常就在这摊位前，这样遇见。慢慢的，男子远离了摊位......在如今，总有人带着一天的酸甜苦辣，在深夜里，仰天长叹。\n\n没坐一会儿，馄饨登场，皮薄馅大，还未入口，便觉得馋人，一勺鲜汤，便可忘却前面所有的疲倦与劳累。鲜嫩的紫菜，清香的香菜还有点睛之效的榨菜为这看似普通的馄饨注入了灵魂。\n\n在细细享受这美食之时，一辆出租车停在了路边，司机看起来三十多岁，白色的体恤，棕色的裤子，一双凉皮鞋。未到摊位前便说道：“老板，一碗米线，一笼包子！”“先坐，马上就好！”老板爽快的回应到。司机坐在矮桌前，低着头看着手机，目不转睛，我能看到他时不时扬起嘴角，高兴的心情满满的溢在脸上。也许是看到了什么笑话，才让他在这摊位前暂时地放下一切，也许是今天拉客挣了些钱，可以给孩子买好吃的，也许，家里有喜事也说不定。没多久，一位外卖小哥骑着电动车，一身蓝色的工作服，来到摊位前：“老板，一碗麻辣米线带走。”“好嘞，马上就好！”之后，老板开始了新一轮的忙碌。小哥弯下身子，双臂搭在电动车头上，把头埋进了双臂中。他，应该也很是疲惫吧......忙碌的一天，给别人准时送去美食，自己却只能在这深夜里靠一碗米线填饱肚子。今晚，我们有缘相遇，尽管可能只是擦肩而过，但大家都是“夜归人”......\n\n吃完馄饨，特意多喝了几口汤，心满意足。“老板，馄饨多少钱？”，“5块...”老板回应道。付钱时，对老板笑道：“馄饨很好吃，谢谢！”老板开心地笑了笑。也许一碗馄饨没有多少利润，但一句肯定，一个微笑，希望在这深夜里给予老板小小的幸福。\n\n夜很深了，也该早些回学校了。在路边拦下一辆出租车，坐上副驾驶，“师傅，去理工大金花校区”，我一边系安全带一边告知司机我的目的地。司机娴熟的车技，带着我飞驰在深夜的南二环上。看着窗外快速倒退的风景，路边一闪即过的行道树，渐渐的有些困乏,眼睛微闭，靠在座椅上，静静地等待着回到学校。不超半个钟头，到达学校东门，今日的事情，深夜的见闻，即将结束。回到办公室（因下班太晚，宿舍大楼已熄灯闭门，当晚我便在学生会的办公室住了一夜），写下此文，用文字记下这如诗似剧的夜境。\n\n### 后记\n\n> 在如今，总有人披星戴月地奔波，早出晚归。深夜里，每一位“夜归人”都有属于自己的故事，属于自己酸甜苦辣，这所有的一切，就只为了自己心中那份最简单而又美好的心愿与目标。也许只有在这深夜里，在夜深人静的时候，我们才会静下心来，回味这一天，甚至是回味一路走来的平坦与坎坷。这时候，我们也许会审视自己，看看心灵深处的自己，开心、难过、委屈、思念等等这些情感在这时被不断放大，最终极大化。也许这时再也抑制不住内心的汹涌，迷离过后，流泪过后，我们依旧会怀揣着心里的那份执着、对未来的期许、对远方的思念等等寄托慢慢入睡，期待着明日的第一缕朝阳划破天际。\n\n最后，把我最喜欢的一位歌手——**[李健](https://www.baidu.com/link?url=BsltTzlHbDVY83hcXfq3fs1sPLee1fFXhRZperHgpnpGYrvNA1pkm_tIOWp6uwExDNz7hzr-4fK3XXpcLC3cvZElHhODunSKMhXqKqAcjTu&wd=&eqid=a1ae7140000804bc000000035b7167a3)**的一首歌曲 **[《异乡人》](https://baike.baidu.com/item/%E5%BC%82%E4%B9%A1%E4%BA%BA/6402179?fr=aladdin)**分享给大家。这是作为东北黑龙江人的李健当时身处北京时，所作的一首歌曲。在2017年《歌手》节目中对歌词进行新的修改和补充，词曲中对独自在外拼搏的“异乡人”的生活做了细致的描写，也对“异乡人”的孤独、迷茫、无助以及对故乡思念的情感进行了淋漓尽致的表达。\n<div id=\"content-ctn\">\n  <div class=\"centerContent\">\n    **异乡人**\n    **作词： 李健**\n    **作曲: 李健**\n\n    披星戴月地奔波\n    只为一扇窗\n    当你迷失在路上\n    能够看见那灯光\n    不知不觉把他乡\n    当做了故乡\n    只是偶尔难过时\n    不经意遥望远方\n    曾经的乡音\n    悄悄地隐藏\n    说不出的诺言\n    一直放心上\n    有许多时候\n    眼泪就要流\n    那扇窗是让我\n    坚强的理由\n    小小的门口\n    还有她的温柔\n    给我温暖陪伴我左右\n    近在眼前的繁华\n    多少人着迷\n    当你走近才发现\n    远过故乡的距离\n    不知不觉把他乡\n    当做了故乡\n    故乡却已成他乡\n    偶尔你才敢回望\n    曾经的坎坷\n    现 在不用讲\n    异乡的人有着相同的惆怅\n    有许多时候\n    眼泪就要流\n    那扇窗是让我\n    坚强的理由\n    小小的门口\n    还有她的温柔\n    给我温暖陪伴我左右\n    有许多时候\n    眼泪就要流\n    那扇窗是让我坚强的理由\n    就在这时候\n    眼泪已经流\n    那扇窗依然明亮为我守候\n    看过了多少\n    海市蜃楼\n    让我回到小小的门口\n    给我温暖陪伴我左右\n    给我温暖陪伴我左右\n  </div>\n </div>","slug":"the-night-scence-of-chang-An-city","published":1,"updated":"2018-09-29T12:53:52.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vgy0018ogsmgskcuobj","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><blockquote>\n<p>本文写于我大四实习期间，2017年7月2日，周日凌晨。那时我还住在学校，平时坐车上下班。7月1日加班至近午夜零点，下班后于街上漫步，幸遇些许人物场景，心生感慨，遂记之。</p>\n</blockquote>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>昨日加班，下班时已近午夜，身心有些疲惫。心想，晚了便晚了罢，那便沿街走走，好好看看这头顶城市的夜，毕竟深夜的景，深夜的静，不是匆忙的白日里所能求得的。单肩背着书包，拖着沉重的双腿，迈着缓缓的步子，独自一人走在深夜的街道上，偶尔哼唱几段旋律，添添几分乐趣。</p>\n<p>此时的西安城，不再灯火辉煌，温热的风，昏暗的灯，迷离的霓虹，摇曳的树影……路上不见了公交车的踪影，一眼望去街上的行人屈指可数，时不时有几辆私家车或出租车从身边驶过，此时才发觉原本熟悉的西安城却有着如此的神秘。</p>\n<a id=\"more\"></a>\n<p>走了一段路程，突然发现前面不远处有一位交警，看样子是在夜里执勤，还真是辛苦。他也看见了我，向我走过来说道：“小伙子，这么晚了，还在外面？”我怔了一下，答道：“是啊，加班，准备回去了。”他沉默了一会儿，笑了笑说：“这么晚，男生也要注意安全，快回去吧。”我回道：“嗯，谢谢！”这个夜晚，安静祥和，我相信每个夜晚都会是这样，因为总有许多像这位警察一样的卫士守护着这座城市的安宁。</p>\n<p>走在深夜的街道上，吹着微热的晚风，哼唱着熟悉的旋律，路过高新路的街道，远远的便有声声笑声入耳。前面，几位建筑工人在路边行道上一起吃着西瓜，看着很是悠闲。其中，有人席地而坐，有的慵懒的站着，看上去好不惬意。路过他们身边，听得一人说道：“唉…把他家的，忙活了一天，终于歇下了……”听完这一句，也便已远离他们的位置，只有身后慢慢远去的笑声还回荡在耳边。一天的忙碌，方得这美好的深夜，一口多汁的西瓜，便可忘去整日的烦恼和劳累。此时的夜，陪着他们，一起感受西瓜的香甜……</p>\n<p>未走多远，同一条街边，看到一位四五十岁的阿姨她在路边的一棵树下整理着什么。仔细一看，才发现她在整理一些废旧的纸箱。昏暗的光线，想着也许并不能看得清楚，一个个纸箱却被她用心地拆开，依照棱角慢慢压平，再堆放在身边。走近，她便问道：“你好，这会儿几点了？”她的语气很是温和。我掏出手机，很遗憾的是没电了。“不好意思，我的手机没电了”，我一边答道一遍举起手机示意。想着从公司离开的时间，估算了一下， “大概快一点了吧”，我补充道。她回道：“谢谢！”我笑着说：“不客气。”离开的时候，那位阿姨还在仔细的整理着那些纸箱，她心里也想早点回到家里吧，毕竟这深夜里，独自一人还是会觉得有些许的孤独。</p>\n<p>就这样，哼着《十点半的地铁》，继续我回学校的路。走到南二环，在医学院附近，转过弯看到一个路边摊，想起还未吃晚饭，便想着填填肚子。走近摊位发现老板坐在低矮的凳子上，吃着一碗像是已经变凉的馄饨。“老板也才吃晚饭啊！”我走上前说道。他抬起头，看着我笑了笑，站了起来，此时才发现，老板是一位看起来五六十岁的大叔。“还有吃的么，老板？”我带着期待的眼神看着他。“有！”老板爽快的回道。“都有什么吃的啊？”我追问到。“馄饨、包子、米线，都有”。我甚是欣喜，在子夜还能吃到路边摊，其实也是不容易了。“来一碗馄饨吧”我说道，“好嘞！”老板开始了忙碌。</p>\n<p>坐在那矮矮的凳子上，顿时觉得惬意无比，全身的放松，让人想坐着这里，看着夜景，一直到天亮。坐下没多久，一位中年男子走过，蓝黑色的短袖，黑色的裤子，一双拖鞋，头略微扬起，看着天空，看样子也是满脸疲惫。经过摊位前，老板打声招呼:“下班啦？” “嗯，下班了……”中年男子叹息一样地回答道。我心想，这男子和老板应该是老熟人了吧，常常就在这摊位前，这样遇见。慢慢的，男子远离了摊位……在如今，总有人带着一天的酸甜苦辣，在深夜里，仰天长叹。</p>\n<p>没坐一会儿，馄饨登场，皮薄馅大，还未入口，便觉得馋人，一勺鲜汤，便可忘却前面所有的疲倦与劳累。鲜嫩的紫菜，清香的香菜还有点睛之效的榨菜为这看似普通的馄饨注入了灵魂。</p>\n<p>在细细享受这美食之时，一辆出租车停在了路边，司机看起来三十多岁，白色的体恤，棕色的裤子，一双凉皮鞋。未到摊位前便说道：“老板，一碗米线，一笼包子！”“先坐，马上就好！”老板爽快的回应到。司机坐在矮桌前，低着头看着手机，目不转睛，我能看到他时不时扬起嘴角，高兴的心情满满的溢在脸上。也许是看到了什么笑话，才让他在这摊位前暂时地放下一切，也许是今天拉客挣了些钱，可以给孩子买好吃的，也许，家里有喜事也说不定。没多久，一位外卖小哥骑着电动车，一身蓝色的工作服，来到摊位前：“老板，一碗麻辣米线带走。”“好嘞，马上就好！”之后，老板开始了新一轮的忙碌。小哥弯下身子，双臂搭在电动车头上，把头埋进了双臂中。他，应该也很是疲惫吧……忙碌的一天，给别人准时送去美食，自己却只能在这深夜里靠一碗米线填饱肚子。今晚，我们有缘相遇，尽管可能只是擦肩而过，但大家都是“夜归人”……</p>\n<p>吃完馄饨，特意多喝了几口汤，心满意足。“老板，馄饨多少钱？”，“5块…”老板回应道。付钱时，对老板笑道：“馄饨很好吃，谢谢！”老板开心地笑了笑。也许一碗馄饨没有多少利润，但一句肯定，一个微笑，希望在这深夜里给予老板小小的幸福。</p>\n<p>夜很深了，也该早些回学校了。在路边拦下一辆出租车，坐上副驾驶，“师傅，去理工大金花校区”，我一边系安全带一边告知司机我的目的地。司机娴熟的车技，带着我飞驰在深夜的南二环上。看着窗外快速倒退的风景，路边一闪即过的行道树，渐渐的有些困乏,眼睛微闭，靠在座椅上，静静地等待着回到学校。不超半个钟头，到达学校东门，今日的事情，深夜的见闻，即将结束。回到办公室（因下班太晚，宿舍大楼已熄灯闭门，当晚我便在学生会的办公室住了一夜），写下此文，用文字记下这如诗似剧的夜境。</p>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><blockquote>\n<p>在如今，总有人披星戴月地奔波，早出晚归。深夜里，每一位“夜归人”都有属于自己的故事，属于自己酸甜苦辣，这所有的一切，就只为了自己心中那份最简单而又美好的心愿与目标。也许只有在这深夜里，在夜深人静的时候，我们才会静下心来，回味这一天，甚至是回味一路走来的平坦与坎坷。这时候，我们也许会审视自己，看看心灵深处的自己，开心、难过、委屈、思念等等这些情感在这时被不断放大，最终极大化。也许这时再也抑制不住内心的汹涌，迷离过后，流泪过后，我们依旧会怀揣着心里的那份执着、对未来的期许、对远方的思念等等寄托慢慢入睡，期待着明日的第一缕朝阳划破天际。</p>\n</blockquote>\n<p>最后，把我最喜欢的一位歌手——<strong><a href=\"https://www.baidu.com/link?url=BsltTzlHbDVY83hcXfq3fs1sPLee1fFXhRZperHgpnpGYrvNA1pkm_tIOWp6uwExDNz7hzr-4fK3XXpcLC3cvZElHhODunSKMhXqKqAcjTu&amp;wd=&amp;eqid=a1ae7140000804bc000000035b7167a3\" target=\"_blank\" rel=\"noopener\">李健</a></strong>的一首歌曲 <strong><a href=\"https://baike.baidu.com/item/%E5%BC%82%E4%B9%A1%E4%BA%BA/6402179?fr=aladdin\" target=\"_blank\" rel=\"noopener\">《异乡人》</a></strong>分享给大家。这是作为东北黑龙江人的李健当时身处北京时，所作的一首歌曲。在2017年《歌手》节目中对歌词进行新的修改和补充，词曲中对独自在外拼搏的“异乡人”的生活做了细致的描写，也对“异乡人”的孤独、迷茫、无助以及对故乡思念的情感进行了淋漓尽致的表达。</p>\n<div id=\"content-ctn\"><br>  <div class=\"centerContent\"><br>    <strong>异乡人</strong><br>    <strong>作词： 李健</strong><br>    <strong>作曲: 李健</strong><br><br>    披星戴月地奔波<br>    只为一扇窗<br>    当你迷失在路上<br>    能够看见那灯光<br>    不知不觉把他乡<br>    当做了故乡<br>    只是偶尔难过时<br>    不经意遥望远方<br>    曾经的乡音<br>    悄悄地隐藏<br>    说不出的诺言<br>    一直放心上<br>    有许多时候<br>    眼泪就要流<br>    那扇窗是让我<br>    坚强的理由<br>    小小的门口<br>    还有她的温柔<br>    给我温暖陪伴我左右<br>    近在眼前的繁华<br>    多少人着迷<br>    当你走近才发现<br>    远过故乡的距离<br>    不知不觉把他乡<br>    当做了故乡<br>    故乡却已成他乡<br>    偶尔你才敢回望<br>    曾经的坎坷<br>    现 在不用讲<br>    异乡的人有着相同的惆怅<br>    有许多时候<br>    眼泪就要流<br>    那扇窗是让我<br>    坚强的理由<br>    小小的门口<br>    还有她的温柔<br>    给我温暖陪伴我左右<br>    有许多时候<br>    眼泪就要流<br>    那扇窗是让我坚强的理由<br>    就在这时候<br>    眼泪已经流<br>    那扇窗依然明亮为我守候<br>    看过了多少<br>    海市蜃楼<br>    让我回到小小的门口<br>    给我温暖陪伴我左右<br>    给我温暖陪伴我左右<br>  </div><br> </div>","site":{"data":{}},"excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><blockquote>\n<p>本文写于我大四实习期间，2017年7月2日，周日凌晨。那时我还住在学校，平时坐车上下班。7月1日加班至近午夜零点，下班后于街上漫步，幸遇些许人物场景，心生感慨，遂记之。</p>\n</blockquote>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>昨日加班，下班时已近午夜，身心有些疲惫。心想，晚了便晚了罢，那便沿街走走，好好看看这头顶城市的夜，毕竟深夜的景，深夜的静，不是匆忙的白日里所能求得的。单肩背着书包，拖着沉重的双腿，迈着缓缓的步子，独自一人走在深夜的街道上，偶尔哼唱几段旋律，添添几分乐趣。</p>\n<p>此时的西安城，不再灯火辉煌，温热的风，昏暗的灯，迷离的霓虹，摇曳的树影……路上不见了公交车的踪影，一眼望去街上的行人屈指可数，时不时有几辆私家车或出租车从身边驶过，此时才发觉原本熟悉的西安城却有着如此的神秘。</p>","more":"<p>走了一段路程，突然发现前面不远处有一位交警，看样子是在夜里执勤，还真是辛苦。他也看见了我，向我走过来说道：“小伙子，这么晚了，还在外面？”我怔了一下，答道：“是啊，加班，准备回去了。”他沉默了一会儿，笑了笑说：“这么晚，男生也要注意安全，快回去吧。”我回道：“嗯，谢谢！”这个夜晚，安静祥和，我相信每个夜晚都会是这样，因为总有许多像这位警察一样的卫士守护着这座城市的安宁。</p>\n<p>走在深夜的街道上，吹着微热的晚风，哼唱着熟悉的旋律，路过高新路的街道，远远的便有声声笑声入耳。前面，几位建筑工人在路边行道上一起吃着西瓜，看着很是悠闲。其中，有人席地而坐，有的慵懒的站着，看上去好不惬意。路过他们身边，听得一人说道：“唉…把他家的，忙活了一天，终于歇下了……”听完这一句，也便已远离他们的位置，只有身后慢慢远去的笑声还回荡在耳边。一天的忙碌，方得这美好的深夜，一口多汁的西瓜，便可忘去整日的烦恼和劳累。此时的夜，陪着他们，一起感受西瓜的香甜……</p>\n<p>未走多远，同一条街边，看到一位四五十岁的阿姨她在路边的一棵树下整理着什么。仔细一看，才发现她在整理一些废旧的纸箱。昏暗的光线，想着也许并不能看得清楚，一个个纸箱却被她用心地拆开，依照棱角慢慢压平，再堆放在身边。走近，她便问道：“你好，这会儿几点了？”她的语气很是温和。我掏出手机，很遗憾的是没电了。“不好意思，我的手机没电了”，我一边答道一遍举起手机示意。想着从公司离开的时间，估算了一下， “大概快一点了吧”，我补充道。她回道：“谢谢！”我笑着说：“不客气。”离开的时候，那位阿姨还在仔细的整理着那些纸箱，她心里也想早点回到家里吧，毕竟这深夜里，独自一人还是会觉得有些许的孤独。</p>\n<p>就这样，哼着《十点半的地铁》，继续我回学校的路。走到南二环，在医学院附近，转过弯看到一个路边摊，想起还未吃晚饭，便想着填填肚子。走近摊位发现老板坐在低矮的凳子上，吃着一碗像是已经变凉的馄饨。“老板也才吃晚饭啊！”我走上前说道。他抬起头，看着我笑了笑，站了起来，此时才发现，老板是一位看起来五六十岁的大叔。“还有吃的么，老板？”我带着期待的眼神看着他。“有！”老板爽快的回道。“都有什么吃的啊？”我追问到。“馄饨、包子、米线，都有”。我甚是欣喜，在子夜还能吃到路边摊，其实也是不容易了。“来一碗馄饨吧”我说道，“好嘞！”老板开始了忙碌。</p>\n<p>坐在那矮矮的凳子上，顿时觉得惬意无比，全身的放松，让人想坐着这里，看着夜景，一直到天亮。坐下没多久，一位中年男子走过，蓝黑色的短袖，黑色的裤子，一双拖鞋，头略微扬起，看着天空，看样子也是满脸疲惫。经过摊位前，老板打声招呼:“下班啦？” “嗯，下班了……”中年男子叹息一样地回答道。我心想，这男子和老板应该是老熟人了吧，常常就在这摊位前，这样遇见。慢慢的，男子远离了摊位……在如今，总有人带着一天的酸甜苦辣，在深夜里，仰天长叹。</p>\n<p>没坐一会儿，馄饨登场，皮薄馅大，还未入口，便觉得馋人，一勺鲜汤，便可忘却前面所有的疲倦与劳累。鲜嫩的紫菜，清香的香菜还有点睛之效的榨菜为这看似普通的馄饨注入了灵魂。</p>\n<p>在细细享受这美食之时，一辆出租车停在了路边，司机看起来三十多岁，白色的体恤，棕色的裤子，一双凉皮鞋。未到摊位前便说道：“老板，一碗米线，一笼包子！”“先坐，马上就好！”老板爽快的回应到。司机坐在矮桌前，低着头看着手机，目不转睛，我能看到他时不时扬起嘴角，高兴的心情满满的溢在脸上。也许是看到了什么笑话，才让他在这摊位前暂时地放下一切，也许是今天拉客挣了些钱，可以给孩子买好吃的，也许，家里有喜事也说不定。没多久，一位外卖小哥骑着电动车，一身蓝色的工作服，来到摊位前：“老板，一碗麻辣米线带走。”“好嘞，马上就好！”之后，老板开始了新一轮的忙碌。小哥弯下身子，双臂搭在电动车头上，把头埋进了双臂中。他，应该也很是疲惫吧……忙碌的一天，给别人准时送去美食，自己却只能在这深夜里靠一碗米线填饱肚子。今晚，我们有缘相遇，尽管可能只是擦肩而过，但大家都是“夜归人”……</p>\n<p>吃完馄饨，特意多喝了几口汤，心满意足。“老板，馄饨多少钱？”，“5块…”老板回应道。付钱时，对老板笑道：“馄饨很好吃，谢谢！”老板开心地笑了笑。也许一碗馄饨没有多少利润，但一句肯定，一个微笑，希望在这深夜里给予老板小小的幸福。</p>\n<p>夜很深了，也该早些回学校了。在路边拦下一辆出租车，坐上副驾驶，“师傅，去理工大金花校区”，我一边系安全带一边告知司机我的目的地。司机娴熟的车技，带着我飞驰在深夜的南二环上。看着窗外快速倒退的风景，路边一闪即过的行道树，渐渐的有些困乏,眼睛微闭，靠在座椅上，静静地等待着回到学校。不超半个钟头，到达学校东门，今日的事情，深夜的见闻，即将结束。回到办公室（因下班太晚，宿舍大楼已熄灯闭门，当晚我便在学生会的办公室住了一夜），写下此文，用文字记下这如诗似剧的夜境。</p>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><blockquote>\n<p>在如今，总有人披星戴月地奔波，早出晚归。深夜里，每一位“夜归人”都有属于自己的故事，属于自己酸甜苦辣，这所有的一切，就只为了自己心中那份最简单而又美好的心愿与目标。也许只有在这深夜里，在夜深人静的时候，我们才会静下心来，回味这一天，甚至是回味一路走来的平坦与坎坷。这时候，我们也许会审视自己，看看心灵深处的自己，开心、难过、委屈、思念等等这些情感在这时被不断放大，最终极大化。也许这时再也抑制不住内心的汹涌，迷离过后，流泪过后，我们依旧会怀揣着心里的那份执着、对未来的期许、对远方的思念等等寄托慢慢入睡，期待着明日的第一缕朝阳划破天际。</p>\n</blockquote>\n<p>最后，把我最喜欢的一位歌手——<strong><a href=\"https://www.baidu.com/link?url=BsltTzlHbDVY83hcXfq3fs1sPLee1fFXhRZperHgpnpGYrvNA1pkm_tIOWp6uwExDNz7hzr-4fK3XXpcLC3cvZElHhODunSKMhXqKqAcjTu&amp;wd=&amp;eqid=a1ae7140000804bc000000035b7167a3\" target=\"_blank\" rel=\"noopener\">李健</a></strong>的一首歌曲 <strong><a href=\"https://baike.baidu.com/item/%E5%BC%82%E4%B9%A1%E4%BA%BA/6402179?fr=aladdin\" target=\"_blank\" rel=\"noopener\">《异乡人》</a></strong>分享给大家。这是作为东北黑龙江人的李健当时身处北京时，所作的一首歌曲。在2017年《歌手》节目中对歌词进行新的修改和补充，词曲中对独自在外拼搏的“异乡人”的生活做了细致的描写，也对“异乡人”的孤独、迷茫、无助以及对故乡思念的情感进行了淋漓尽致的表达。</p>\n<div id=\"content-ctn\"><br>  <div class=\"centerContent\"><br>    <strong>异乡人</strong><br>    <strong>作词： 李健</strong><br>    <strong>作曲: 李健</strong><br><br>    披星戴月地奔波<br>    只为一扇窗<br>    当你迷失在路上<br>    能够看见那灯光<br>    不知不觉把他乡<br>    当做了故乡<br>    只是偶尔难过时<br>    不经意遥望远方<br>    曾经的乡音<br>    悄悄地隐藏<br>    说不出的诺言<br>    一直放心上<br>    有许多时候<br>    眼泪就要流<br>    那扇窗是让我<br>    坚强的理由<br>    小小的门口<br>    还有她的温柔<br>    给我温暖陪伴我左右<br>    近在眼前的繁华<br>    多少人着迷<br>    当你走近才发现<br>    远过故乡的距离<br>    不知不觉把他乡<br>    当做了故乡<br>    故乡却已成他乡<br>    偶尔你才敢回望<br>    曾经的坎坷<br>    现 在不用讲<br>    异乡的人有着相同的惆怅<br>    有许多时候<br>    眼泪就要流<br>    那扇窗是让我<br>    坚强的理由<br>    小小的门口<br>    还有她的温柔<br>    给我温暖陪伴我左右<br>    有许多时候<br>    眼泪就要流<br>    那扇窗是让我坚强的理由<br>    就在这时候<br>    眼泪已经流<br>    那扇窗依然明亮为我守候<br>    看过了多少<br>    海市蜃楼<br>    让我回到小小的门口<br>    给我温暖陪伴我左右<br>    给我温暖陪伴我左右<br>  </div><br> </div>"},{"title":"CSS层叠上下文、层叠等级、层叠顺序、z-index完全说明","date":"2018-08-28T03:29:28.000Z","_content":"\n### 前言\n\n最近，在项目中遇到一个关于CSS中元素`z-index`属性的问题，具体问题不太好描述，总结起来就是当给元素和父元素色设置`position`属性和`z-index`相关属性后，页面上渲染的元素层级结果和我预想的不一样。根据自己之前的理解，也没找到一个合理的解释。我知道，肯定是我对相关属性的细节理解存在问题，所以结合官方文档和在网上各种搜集整理，明白了其中的原因。写下这篇文章，和大家分享有关CSS中`层叠上下文`、`层叠等级`、`层叠顺序`以及`z-index`相关的一整套技术细节。\n\n如果存在什么错误或重要遗漏或者有什么疑问，欢迎留言指正、讨论！感谢！\n\n<!--more-->\n\n### 一个“片面”的理解\n\n以往，由于自己使用`z-index`的频率不大，所以对这个CSS属性存在比较片面的认识。一直认为`z-index`就是用来描述定义一个元素在屏幕`Z轴`上的堆叠顺序。`z-index`值越大在`Z轴`上就越靠上，也就是离屏幕观察者越近。最后才发现这个认识存在很大的问题：\n1. 首先，`z-index`属性值并不是在任何元素上都有效果。它**仅在**定位元素（定义了`position`属性，且属性值为非`static`值的元素）上有效果。\n2. 判断元素在`Z轴`上的堆叠顺序，不仅仅是直接比较两个元素的`z-index`值的大小，这个堆叠顺序实际由元素的**层叠上下文**、**层叠等级**共同决定。\n\n![屏幕上的XYZ轴][1]\n\n要想完全理解一个东西，首先要明白它是什么，也就是它的定义。我们先看看上面提到的`层叠上下文`、`层叠等级`、`层叠顺序`都是什么？定义又太过抽象，后面会再用一个具象的比喻来让你彻底明白它们到底是什么，有什么联系。\n\n\n### 什么是“层叠上下文”\n\n层叠上下文(stacking context)，是`HTML`中一个三维的概念。在`CSS2.1`规范中，每个盒模型的位置是三维的，分别是平面画布上的`X轴`，`Y轴`以及表示层叠的`Z轴`。一般情况下，元素在页面上沿`X轴Y轴`平铺，我们察觉不到它们在`Z轴`上的层叠关系。而一旦元素发生堆叠，这时就能发现某个元素可能覆盖了另一个元素或者被另一个元素覆盖。\n\n如果一个元素含有层叠上下文，(也就是说它是层叠上下文元素)，我们可以理解为这个元素在`Z轴`上就“高人一等”，最终表现就是它离屏幕观察者更近。\n\n>**具象的比喻**：你可以把层叠上下文元素理解为理解为**该元素当了官**，而其他非层叠上下文元素则可以理解为普通群众。凡是“当了官的元素”就比普通元素等级要高，也就是说元素在`Z轴`上更靠上，更靠近观察者。\n\n### 什么是“层叠等级”\n\n那么，层叠等级指的又是什么？层叠等级(stacking level，叫“层叠级别”/“层叠水平”也行)\n* 在同一个层叠上下文中，它描述定义的是该层叠上下文中的层叠上下文元素在`Z轴`上的上下顺序。\n* 在其他普通元素中，它描述定义的是这些普通元素在`Z轴`上的上下顺序。\n\n说到这，可能很多人疑问了，不论在层叠上下文中还是在普通元素中，层叠等级都表示元素在`Z轴`上的上下顺序，那就直接说它描述定义了所有元素在`Z轴`上的上下顺序就OK啊！为什么要分开描述？\n\n为了说明原因，先举个栗子：\n>**具象的比喻**：我们之前说到，处于层叠上下文中的元素，就像是元素当了官，等级自然比普通元素高。再想象一下，假设一个官员A是个省级领导，他下属有一个秘书a-1，家里有一个保姆a-2。另一个官员B是一个县级领导，他下属有一个秘书b-1，家里有一个保姆b-2。a-1和b-1虽然都是秘书，但是你想一个省级领导的秘书和一个县级领导的秘书之间有可比性么？甚至保姆a-2都要比秘书b-1的等级高得多。谁大谁小，谁高谁低一目了然，所以根本没有比较的意义。只有在A下属的a-1、a-2以及B下属的b-1、b-2中相互比较大小高低才有意义。\n\n**再类比回“层叠上下文”和“层叠等级”，就得出一个结论：**\n1. 普通元素的层叠等级优先由其所在的层叠上下文决定。\n2. 层叠等级的比较只有在当前层叠上下文元素中才有意义。不同层叠上下文中比较层叠等级是没有意义的。\n\n\n### 如何产生“层叠上下文”\n\n前面说了那么多，知道了“层叠上下文”和“层叠等级”，其中还有一个最关键的问题：到底如何产生层叠上下文呢？如何让一个元素变成层叠上下文元素呢？\n\n其实，层叠上下文也基本上是有一些特定的CSS属性创建的，一般有3种方法：\n1. `HTML`中的根元素`<html></html>`本身j就具有层叠上下文，称为“根层叠上下文”。\n2. 普通元素设置`position`属性为**非**`static`值并设置`z-index`属性为具体数值，产生层叠上下文。\n3. CSS3中的新属性也可以产生层叠上下文。\n\n至此，终于可以上代码了，我们用代码说话，来验证上面的结论：\n\n**栗子1:**\n**有两个div，p.a、p.b被包裹在一个div里，p.c被包裹在另一个盒子里，只为.a、.b、.c设置`position`和`z-index`属性**\n```\n<style>\n  div {  \n    position: relative;  \n    width: 100px;  \n    height: 100px;  \n  }  \n  p {  \n    position: absolute;  \n    font-size: 20px;  \n    width: 100px;  \n    height: 100px;  \n  }  \n  .a {  \n    background-color: blue;  \n    z-index: 1;  \n  }  \n  .b {  \n    background-color: green;  \n    z-index: 2;  \n    top: 20px;  \n    left: 20px;  \n  }  \n  .c {  \n    background-color: red;  \n    z-index: 3;  \n    top: -20px;  \n    left: 40px;  \n  }\n</style>\n\n<body>  \n  <div>  \n    <p class=\"a\">a</p>  \n    <p class=\"b\">b</p>  \n  </div> \n\n  <div>  \n    <p class=\"c\">c</p>  \n  </div>  \n</body> \n```\n效果：\n![效果1][2]\n因为p.a、p.b、p.c三个的父元素div都没有设置`z-index`，所以不会产生层叠上下文，所以.a、.b、.c都处于由`<html></html>`标签产生的“根层叠上下文”中，属于同一个层叠上下文，此时谁的`z-index`值大，谁在上面。\n\n**栗子2：**\n**有两个div，p.a、p.b被包裹在一个div里，p.c被包裹在另一个盒子里，同时为两个div和.a、.b、.c设置`position`和`z-index`属性**\n```\n<style>\n  div {\n    width: 100px;\n    height: 100px;\n    position: relative;\n  }\n  .box1 {\n    z-index: 2;\n  }\n  .box2 {\n    z-index: 1;\n  }\n  p {\n    position: absolute;\n    font-size: 20px;\n    width: 100px;\n    height: 100px;\n  }\n  .a {\n    background-color: blue;\n    z-index: 100;\n  }\n  .b {\n    background-color: green;\n    top: 20px;\n    left: 20px;\n    z-index: 200;\n  }\n  .c {\n    background-color: red;\n    top: -20px;\n    left: 40px;\n    z-index: 9999;\n  }\n</style>\n\n<body>\n  <div class=\"box1\">\n    <p class=\"a\">a</p>\n    <p class=\"b\">b</p>\n  </div>\n\n  <div class=\"box2\">\n    <p class=\"c\">c</p>\n  </div>\n</body>\n```\n\n效果：\n![效果2][3]\n我们发下，虽然`p.c`元素的`z-index`值为9999，远大于`p.a`和`p.b`的`z-index`值，但是由于`p.a`、`p.b`的父元素`div.box1`产生的层叠上下文的`z-index`的值为2，`p.c`的父元素`div.box2`所产生的层叠上下文的`z-index`值为1，所以`p.c`永远在`p.a`和`p.b`下面。\n\n同时，如果我们只更改`p.a`和`p.b`的`z-index`值，由于这两个元素都在父元素`div.box1`产生的层叠上下文中，所以，谁的`z-index`值大，谁在上面。\n\n\n### 什么是“层叠顺序”\n\n说完“层叠上下文”和“层叠等级”，我们再来说说“层叠顺序”。“层叠顺序”(stacking order)表示元素发生层叠时按照特定的顺序规则在`Z轴`上垂直显示。**由此可见，前面所说的“层叠上下文”和“层叠等级”是一种概念，而这里的“层叠顺序”是一种规则。**\n\n![不同属性的元素的层叠顺序][4]\n\n在不考虑CSS3的情况下，当元素发生层叠时，层叠顺讯遵循上面途中的规则。\n**这里值得注意的是：**\n1. 左上角\"层叠上下文`background/border`\"指的是层叠上下文元素的背景和边框。\n2. `inline/inline-block`元素的层叠顺序要高于`block`(块级)/`float`(浮动)元素。\n3. 单纯考虑层叠顺序，`z-index: auto`和`z-index: 0`在同一层级，但这两个属性值本身是有根本区别的。\n\n>对于上面第2条，为什么`inline/inline-block`元素的层叠顺序要高于`block`(块级)/`float`(浮动)元素？这个大家可以思考一下！\n其实很简单，像`border/background`属于装饰元素的属性，浮动和块级元素一般用来页面布局，而网页设计之初最重要的就是文字内容，所以在发生层叠时会优先显示文字内容，保证其不被覆盖。\n\n\n### 你要的“套路”\n\n上面说了那么多，可能你还是有点懵。这么多概念规则，来点最实际的，有没有一个“套路”当遇到元素层叠时，能很清晰地判断出他们谁在上谁在下呢？答案是——肯定有啊！\n\n>1、首先先看要比较的两个元素是否处于同一个层叠上下文中：\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.1如果是，谁的层叠等级大，谁在上面（怎么判断层叠等级大小呢？——看“层叠顺序”图）。\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.2如果两个元素不在统一层叠上下文中，请先比较他们所处的层叠上下文的层叠等级。\n2、当两个元素层叠等级相同、层叠顺序相同时，在DOM结构中后面的元素层叠等级在前面元素之上。\n\n\n### 光说不练假把式\n\n对于技术学习，代码展示是最直观最易懂的方式之一。话不多说，直接上代码，我们通过以下几个“栗子”，来进一步验证掌握上面的结论。\n\n**栗子3：**\n```\n<style>\n  .box1, .box2 {\n    position: relative;\n    z-index: auto;\n  }\n  .child1 {\n    width: 200px;\n    height: 100px;\n    background: #168bf5;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 2;\n  }\n  .child2 {\n    width: 100px;\n    height: 200px;\n    background: #32c292;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n</style>\n</head>\n\n<body>\n  <div class=\"box1\">\n    <div class=\"child1\"></div>\n  </div>\n\n  <div class=\"box2\">\n    <div class=\"child2\"></div>\n  </div>\n</body>\n```\n效果：\n![效果3][5]\n**说明：**`.box1/.box2`虽然设置了`position: relative`，但是`z-index: auto`的情况下，这两个`div`还是普通元素，并没有产生层叠上下文。所以，`child1/.child2`属于`<html></html>`元素的“根层叠上下文”中，此时，**谁的`z-index`值大，谁在上面**。\n\n\n**栗子4：**\n\n对于栗子1中的CSS代码，我们只把`.box1/.box2`的`z-index`属性值改为`数值0`，其余不变。\n```\n.box1, .box2 {\n  position: relative;\n  z-index: 0;\n}\n...\n\n```\n效果：\n![效果4][6]\n**说明：** 此时，我们发现，仅仅修改了`.box1/.box2`的`z-index`属性值改为`数值0`，最终结果完全相反。这时`.child2`覆盖在了`.child1`上面。原因是什么呢？很简单：因为设置`z-index: 0`后，`.box1/.box2`产生了各自的层叠上下文，这时候要比较`.child1/.child2`的层叠关系完全由父元素`.box1/.box2`的层叠关系决定。但是`.box1/.box2`的`z-index`值都为`0`，都是块级元素（所以它们的层叠等级，层叠顺序是相同的），这种情况下，在`DOM`结构中**后面的覆盖前面的**，所以`.child2`就在上面。\n\n\n### CSS3中的属性对层叠上下文的影响\n\nCSS3中出现了很多新属性，其中一些属性对层叠上下文也产生了很大的影响。如下：\n1. 父元素的display属性值为`flex|inline-flex`，子元素`z-index`属性值不为`auto`的时候，子元素为层叠上下文元素；\n2. 元素的`opacity`属性值不是`1`；\n3. 元素的`transform`属性值不是`none`；\n4. 元素`mix-blend-mode属性值不是`normal`；\n5. 元素的`filter`属性值不是`none`；\n6. 元素的`isolation`属性值是`isolate`；\n7. `will-change`指定的属性值为上面任意一个；\n8. 元素的`-webkit-overflow-scrolling`属性值设置为`touch`。\n\nCSS3中，元素属性满足以上条件之一，就会产生层叠上下文。我们用第1条来做一个简单的解释说明。\n\n**栗子5：**\n\n```\n<style>\n  .box {\n  }\n  .parent {\n    width: 200px;\n    height: 100px;\n    background: #168bf5;\n    /* 虽然设置了z-index，但是没有设置position，z-index无效，.parent还是普通元素，没有产生层叠上下文 */\n    z-index: 1;\n  }\n  .child {\n    width: 100px;\n    height: 200px;\n    background: #32d19c;\n    position: relative;\n    z-index: -1;\n  }\n</style>\n</head>\n\n<body>\n  <div class=\"box\">\n    <div class=\"parent\">\n      parent\n      <div class=\"child\">child</div>\n    </div>\n  </div>\n</body>\n```\n效果：\n![效果5][7]\n**说明：** 我们发现，`.child`被`.parent`覆盖了。按照“套路”来分析一下：\n虽然`.parent`设置了`z-index`属性值，但是没有设置`position`属性，`z-index`无效，所以没有产生层叠上下文，`.parent`还是普通的块级元素。此时，在层叠顺序规则中，`z-index`值小于`0`的`.child`会被普通的`block`块级元素`.parent`覆盖。\n\n**栗子6**\n\n对于上面的栗子，我们只修改.box的属性，设置display: flex，其余属性和DOM结构不变。\n```\n.box {\n  display: flex;\n}\n```\n效果：\n![效果6][8]\n**说明：** 当给`.box`设置`display: flex`时，`.parent`就变成层叠上下文元素，根据层叠顺序规则，层叠上下文元素的`background/border`的层叠等级小于`z-index`值小于`0`的元素的层叠等级，所以`z-index`值为`-1`的`.child`在`.parent`上面。\n\n\n### 小测试\n\n下面的代码，我会把最终页面渲染的结果放在代码之后，有兴趣的“童鞋”可以分析一下，各个元素的层叠等级，最后来确定这些元素哪个在上哪个在下。\n\n```\n<style>\n  .parent {\n    width: 100px;\n    height: 200px;\n    background: #168bf5;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 0;\n  }\n  .child1 {\n    width: 100px;\n    height: 200px;\n    background: #32d19c;\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    z-index: 1;\n  }\n  .child2 {\n    width: 100px;\n    height: 200px;\n    background: #e4c950;\n    position: absolute;\n    top: 40px;\n    left: 40px;\n    z-index: -1;\n  }\n  .child2-1 {\n    width: 100px;\n    height: 200px;\n    background: #e45050;\n    position: absolute;\n    top: 60px;\n    left: 60px;\n    z-index: 9999;\n  }\n  .child2-2 {\n    width: 100px;\n    height: 200px;\n    background: #db68a7;\n    position: absolute;\n    top: 80px;\n    left: 40px;\n    z-index: -9999;\n  }\n</style>\n</head>\n\n<body>\n  <div class=\"parent\">\n    parent\n    <div class=\"child1\">child1</div>\n    <div class=\"child2\">\n      child2\n      <div class=\"child2-1\">child2-1</div>\n      <div class=\"child2-2\">child2-2</div>\n    </div>\n  </div>\n</body>\n```\n\n效果：\n![小测试代码页面渲染结果][9]\n\n\n### 参考文章\n\n以上的内容有一部分内容参考了以下两位大神的博客，写的很好，也很清晰，推荐大家看一看，你会对相关知识点掌握的更清晰。\n\n>[张鑫旭-《深入理解CSS中的层叠上下文和层叠顺序》](https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n>[AMInInsist-《CSS 中的z-index属性》](https://blog.csdn.net/weixin_40672882/article/details/81183321)\n\n\n### 推荐文章\n\n**下面的文章链接是我在学习实践过程中看到的一些觉得比较好的文章，有兴趣霍有需要的朋友可以参考参考，希望可以帮你彻底弄清文章中涉及的这些问题。**\n\n>[lijinxieyang-《层叠上下文【stacking context】与层叠顺序【stacking order】》](http://www.w3help.org/zh-cn/kb/013/)\n>[w3help.org - 《KB013: 分层的显示( Layered presentation )》](http://www.w3help.org/zh-cn/kb/013/)\n>[MDN-《The stacking context》](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context)\n>[尚-《css之层叠上下文和层叠顺序》](https://www.cnblogs.com/chenshanyuanzi/p/7700823.html)\n\n\n[1]: /medias/article/coding/z-index/XYZ.png\n[2]: /medias/article/coding/z-index/xiaoguo1.jpg\n[3]: /medias/article/coding/z-index/xiaoguo2.jpg\n[4]: /medias/article/coding/z-index/stacking-order.jpg\n[5]: /medias/article/coding/z-index/xiaoguo3.jpg\n[6]: /medias/article/coding/z-index/xiaoguo4.jpg\n[7]: /medias/article/coding/z-index/xiaoguo5.jpg\n[8]: /medias/article/coding/z-index/xiaoguo6.jpg\n[9]: /medias/article/coding/z-index/test.jpg","source":"_posts/z-index.md","raw":"---\ntitle: CSS层叠上下文、层叠等级、层叠顺序、z-index完全说明\ndate: 2018-08-28 11:29:28\ncategories:\n- 编程\n- 前端\ntags:\n- CSS\n- z-index\n---\n\n### 前言\n\n最近，在项目中遇到一个关于CSS中元素`z-index`属性的问题，具体问题不太好描述，总结起来就是当给元素和父元素色设置`position`属性和`z-index`相关属性后，页面上渲染的元素层级结果和我预想的不一样。根据自己之前的理解，也没找到一个合理的解释。我知道，肯定是我对相关属性的细节理解存在问题，所以结合官方文档和在网上各种搜集整理，明白了其中的原因。写下这篇文章，和大家分享有关CSS中`层叠上下文`、`层叠等级`、`层叠顺序`以及`z-index`相关的一整套技术细节。\n\n如果存在什么错误或重要遗漏或者有什么疑问，欢迎留言指正、讨论！感谢！\n\n<!--more-->\n\n### 一个“片面”的理解\n\n以往，由于自己使用`z-index`的频率不大，所以对这个CSS属性存在比较片面的认识。一直认为`z-index`就是用来描述定义一个元素在屏幕`Z轴`上的堆叠顺序。`z-index`值越大在`Z轴`上就越靠上，也就是离屏幕观察者越近。最后才发现这个认识存在很大的问题：\n1. 首先，`z-index`属性值并不是在任何元素上都有效果。它**仅在**定位元素（定义了`position`属性，且属性值为非`static`值的元素）上有效果。\n2. 判断元素在`Z轴`上的堆叠顺序，不仅仅是直接比较两个元素的`z-index`值的大小，这个堆叠顺序实际由元素的**层叠上下文**、**层叠等级**共同决定。\n\n![屏幕上的XYZ轴][1]\n\n要想完全理解一个东西，首先要明白它是什么，也就是它的定义。我们先看看上面提到的`层叠上下文`、`层叠等级`、`层叠顺序`都是什么？定义又太过抽象，后面会再用一个具象的比喻来让你彻底明白它们到底是什么，有什么联系。\n\n\n### 什么是“层叠上下文”\n\n层叠上下文(stacking context)，是`HTML`中一个三维的概念。在`CSS2.1`规范中，每个盒模型的位置是三维的，分别是平面画布上的`X轴`，`Y轴`以及表示层叠的`Z轴`。一般情况下，元素在页面上沿`X轴Y轴`平铺，我们察觉不到它们在`Z轴`上的层叠关系。而一旦元素发生堆叠，这时就能发现某个元素可能覆盖了另一个元素或者被另一个元素覆盖。\n\n如果一个元素含有层叠上下文，(也就是说它是层叠上下文元素)，我们可以理解为这个元素在`Z轴`上就“高人一等”，最终表现就是它离屏幕观察者更近。\n\n>**具象的比喻**：你可以把层叠上下文元素理解为理解为**该元素当了官**，而其他非层叠上下文元素则可以理解为普通群众。凡是“当了官的元素”就比普通元素等级要高，也就是说元素在`Z轴`上更靠上，更靠近观察者。\n\n### 什么是“层叠等级”\n\n那么，层叠等级指的又是什么？层叠等级(stacking level，叫“层叠级别”/“层叠水平”也行)\n* 在同一个层叠上下文中，它描述定义的是该层叠上下文中的层叠上下文元素在`Z轴`上的上下顺序。\n* 在其他普通元素中，它描述定义的是这些普通元素在`Z轴`上的上下顺序。\n\n说到这，可能很多人疑问了，不论在层叠上下文中还是在普通元素中，层叠等级都表示元素在`Z轴`上的上下顺序，那就直接说它描述定义了所有元素在`Z轴`上的上下顺序就OK啊！为什么要分开描述？\n\n为了说明原因，先举个栗子：\n>**具象的比喻**：我们之前说到，处于层叠上下文中的元素，就像是元素当了官，等级自然比普通元素高。再想象一下，假设一个官员A是个省级领导，他下属有一个秘书a-1，家里有一个保姆a-2。另一个官员B是一个县级领导，他下属有一个秘书b-1，家里有一个保姆b-2。a-1和b-1虽然都是秘书，但是你想一个省级领导的秘书和一个县级领导的秘书之间有可比性么？甚至保姆a-2都要比秘书b-1的等级高得多。谁大谁小，谁高谁低一目了然，所以根本没有比较的意义。只有在A下属的a-1、a-2以及B下属的b-1、b-2中相互比较大小高低才有意义。\n\n**再类比回“层叠上下文”和“层叠等级”，就得出一个结论：**\n1. 普通元素的层叠等级优先由其所在的层叠上下文决定。\n2. 层叠等级的比较只有在当前层叠上下文元素中才有意义。不同层叠上下文中比较层叠等级是没有意义的。\n\n\n### 如何产生“层叠上下文”\n\n前面说了那么多，知道了“层叠上下文”和“层叠等级”，其中还有一个最关键的问题：到底如何产生层叠上下文呢？如何让一个元素变成层叠上下文元素呢？\n\n其实，层叠上下文也基本上是有一些特定的CSS属性创建的，一般有3种方法：\n1. `HTML`中的根元素`<html></html>`本身j就具有层叠上下文，称为“根层叠上下文”。\n2. 普通元素设置`position`属性为**非**`static`值并设置`z-index`属性为具体数值，产生层叠上下文。\n3. CSS3中的新属性也可以产生层叠上下文。\n\n至此，终于可以上代码了，我们用代码说话，来验证上面的结论：\n\n**栗子1:**\n**有两个div，p.a、p.b被包裹在一个div里，p.c被包裹在另一个盒子里，只为.a、.b、.c设置`position`和`z-index`属性**\n```\n<style>\n  div {  \n    position: relative;  \n    width: 100px;  \n    height: 100px;  \n  }  \n  p {  \n    position: absolute;  \n    font-size: 20px;  \n    width: 100px;  \n    height: 100px;  \n  }  \n  .a {  \n    background-color: blue;  \n    z-index: 1;  \n  }  \n  .b {  \n    background-color: green;  \n    z-index: 2;  \n    top: 20px;  \n    left: 20px;  \n  }  \n  .c {  \n    background-color: red;  \n    z-index: 3;  \n    top: -20px;  \n    left: 40px;  \n  }\n</style>\n\n<body>  \n  <div>  \n    <p class=\"a\">a</p>  \n    <p class=\"b\">b</p>  \n  </div> \n\n  <div>  \n    <p class=\"c\">c</p>  \n  </div>  \n</body> \n```\n效果：\n![效果1][2]\n因为p.a、p.b、p.c三个的父元素div都没有设置`z-index`，所以不会产生层叠上下文，所以.a、.b、.c都处于由`<html></html>`标签产生的“根层叠上下文”中，属于同一个层叠上下文，此时谁的`z-index`值大，谁在上面。\n\n**栗子2：**\n**有两个div，p.a、p.b被包裹在一个div里，p.c被包裹在另一个盒子里，同时为两个div和.a、.b、.c设置`position`和`z-index`属性**\n```\n<style>\n  div {\n    width: 100px;\n    height: 100px;\n    position: relative;\n  }\n  .box1 {\n    z-index: 2;\n  }\n  .box2 {\n    z-index: 1;\n  }\n  p {\n    position: absolute;\n    font-size: 20px;\n    width: 100px;\n    height: 100px;\n  }\n  .a {\n    background-color: blue;\n    z-index: 100;\n  }\n  .b {\n    background-color: green;\n    top: 20px;\n    left: 20px;\n    z-index: 200;\n  }\n  .c {\n    background-color: red;\n    top: -20px;\n    left: 40px;\n    z-index: 9999;\n  }\n</style>\n\n<body>\n  <div class=\"box1\">\n    <p class=\"a\">a</p>\n    <p class=\"b\">b</p>\n  </div>\n\n  <div class=\"box2\">\n    <p class=\"c\">c</p>\n  </div>\n</body>\n```\n\n效果：\n![效果2][3]\n我们发下，虽然`p.c`元素的`z-index`值为9999，远大于`p.a`和`p.b`的`z-index`值，但是由于`p.a`、`p.b`的父元素`div.box1`产生的层叠上下文的`z-index`的值为2，`p.c`的父元素`div.box2`所产生的层叠上下文的`z-index`值为1，所以`p.c`永远在`p.a`和`p.b`下面。\n\n同时，如果我们只更改`p.a`和`p.b`的`z-index`值，由于这两个元素都在父元素`div.box1`产生的层叠上下文中，所以，谁的`z-index`值大，谁在上面。\n\n\n### 什么是“层叠顺序”\n\n说完“层叠上下文”和“层叠等级”，我们再来说说“层叠顺序”。“层叠顺序”(stacking order)表示元素发生层叠时按照特定的顺序规则在`Z轴`上垂直显示。**由此可见，前面所说的“层叠上下文”和“层叠等级”是一种概念，而这里的“层叠顺序”是一种规则。**\n\n![不同属性的元素的层叠顺序][4]\n\n在不考虑CSS3的情况下，当元素发生层叠时，层叠顺讯遵循上面途中的规则。\n**这里值得注意的是：**\n1. 左上角\"层叠上下文`background/border`\"指的是层叠上下文元素的背景和边框。\n2. `inline/inline-block`元素的层叠顺序要高于`block`(块级)/`float`(浮动)元素。\n3. 单纯考虑层叠顺序，`z-index: auto`和`z-index: 0`在同一层级，但这两个属性值本身是有根本区别的。\n\n>对于上面第2条，为什么`inline/inline-block`元素的层叠顺序要高于`block`(块级)/`float`(浮动)元素？这个大家可以思考一下！\n其实很简单，像`border/background`属于装饰元素的属性，浮动和块级元素一般用来页面布局，而网页设计之初最重要的就是文字内容，所以在发生层叠时会优先显示文字内容，保证其不被覆盖。\n\n\n### 你要的“套路”\n\n上面说了那么多，可能你还是有点懵。这么多概念规则，来点最实际的，有没有一个“套路”当遇到元素层叠时，能很清晰地判断出他们谁在上谁在下呢？答案是——肯定有啊！\n\n>1、首先先看要比较的两个元素是否处于同一个层叠上下文中：\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.1如果是，谁的层叠等级大，谁在上面（怎么判断层叠等级大小呢？——看“层叠顺序”图）。\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.2如果两个元素不在统一层叠上下文中，请先比较他们所处的层叠上下文的层叠等级。\n2、当两个元素层叠等级相同、层叠顺序相同时，在DOM结构中后面的元素层叠等级在前面元素之上。\n\n\n### 光说不练假把式\n\n对于技术学习，代码展示是最直观最易懂的方式之一。话不多说，直接上代码，我们通过以下几个“栗子”，来进一步验证掌握上面的结论。\n\n**栗子3：**\n```\n<style>\n  .box1, .box2 {\n    position: relative;\n    z-index: auto;\n  }\n  .child1 {\n    width: 200px;\n    height: 100px;\n    background: #168bf5;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 2;\n  }\n  .child2 {\n    width: 100px;\n    height: 200px;\n    background: #32c292;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n</style>\n</head>\n\n<body>\n  <div class=\"box1\">\n    <div class=\"child1\"></div>\n  </div>\n\n  <div class=\"box2\">\n    <div class=\"child2\"></div>\n  </div>\n</body>\n```\n效果：\n![效果3][5]\n**说明：**`.box1/.box2`虽然设置了`position: relative`，但是`z-index: auto`的情况下，这两个`div`还是普通元素，并没有产生层叠上下文。所以，`child1/.child2`属于`<html></html>`元素的“根层叠上下文”中，此时，**谁的`z-index`值大，谁在上面**。\n\n\n**栗子4：**\n\n对于栗子1中的CSS代码，我们只把`.box1/.box2`的`z-index`属性值改为`数值0`，其余不变。\n```\n.box1, .box2 {\n  position: relative;\n  z-index: 0;\n}\n...\n\n```\n效果：\n![效果4][6]\n**说明：** 此时，我们发现，仅仅修改了`.box1/.box2`的`z-index`属性值改为`数值0`，最终结果完全相反。这时`.child2`覆盖在了`.child1`上面。原因是什么呢？很简单：因为设置`z-index: 0`后，`.box1/.box2`产生了各自的层叠上下文，这时候要比较`.child1/.child2`的层叠关系完全由父元素`.box1/.box2`的层叠关系决定。但是`.box1/.box2`的`z-index`值都为`0`，都是块级元素（所以它们的层叠等级，层叠顺序是相同的），这种情况下，在`DOM`结构中**后面的覆盖前面的**，所以`.child2`就在上面。\n\n\n### CSS3中的属性对层叠上下文的影响\n\nCSS3中出现了很多新属性，其中一些属性对层叠上下文也产生了很大的影响。如下：\n1. 父元素的display属性值为`flex|inline-flex`，子元素`z-index`属性值不为`auto`的时候，子元素为层叠上下文元素；\n2. 元素的`opacity`属性值不是`1`；\n3. 元素的`transform`属性值不是`none`；\n4. 元素`mix-blend-mode属性值不是`normal`；\n5. 元素的`filter`属性值不是`none`；\n6. 元素的`isolation`属性值是`isolate`；\n7. `will-change`指定的属性值为上面任意一个；\n8. 元素的`-webkit-overflow-scrolling`属性值设置为`touch`。\n\nCSS3中，元素属性满足以上条件之一，就会产生层叠上下文。我们用第1条来做一个简单的解释说明。\n\n**栗子5：**\n\n```\n<style>\n  .box {\n  }\n  .parent {\n    width: 200px;\n    height: 100px;\n    background: #168bf5;\n    /* 虽然设置了z-index，但是没有设置position，z-index无效，.parent还是普通元素，没有产生层叠上下文 */\n    z-index: 1;\n  }\n  .child {\n    width: 100px;\n    height: 200px;\n    background: #32d19c;\n    position: relative;\n    z-index: -1;\n  }\n</style>\n</head>\n\n<body>\n  <div class=\"box\">\n    <div class=\"parent\">\n      parent\n      <div class=\"child\">child</div>\n    </div>\n  </div>\n</body>\n```\n效果：\n![效果5][7]\n**说明：** 我们发现，`.child`被`.parent`覆盖了。按照“套路”来分析一下：\n虽然`.parent`设置了`z-index`属性值，但是没有设置`position`属性，`z-index`无效，所以没有产生层叠上下文，`.parent`还是普通的块级元素。此时，在层叠顺序规则中，`z-index`值小于`0`的`.child`会被普通的`block`块级元素`.parent`覆盖。\n\n**栗子6**\n\n对于上面的栗子，我们只修改.box的属性，设置display: flex，其余属性和DOM结构不变。\n```\n.box {\n  display: flex;\n}\n```\n效果：\n![效果6][8]\n**说明：** 当给`.box`设置`display: flex`时，`.parent`就变成层叠上下文元素，根据层叠顺序规则，层叠上下文元素的`background/border`的层叠等级小于`z-index`值小于`0`的元素的层叠等级，所以`z-index`值为`-1`的`.child`在`.parent`上面。\n\n\n### 小测试\n\n下面的代码，我会把最终页面渲染的结果放在代码之后，有兴趣的“童鞋”可以分析一下，各个元素的层叠等级，最后来确定这些元素哪个在上哪个在下。\n\n```\n<style>\n  .parent {\n    width: 100px;\n    height: 200px;\n    background: #168bf5;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 0;\n  }\n  .child1 {\n    width: 100px;\n    height: 200px;\n    background: #32d19c;\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    z-index: 1;\n  }\n  .child2 {\n    width: 100px;\n    height: 200px;\n    background: #e4c950;\n    position: absolute;\n    top: 40px;\n    left: 40px;\n    z-index: -1;\n  }\n  .child2-1 {\n    width: 100px;\n    height: 200px;\n    background: #e45050;\n    position: absolute;\n    top: 60px;\n    left: 60px;\n    z-index: 9999;\n  }\n  .child2-2 {\n    width: 100px;\n    height: 200px;\n    background: #db68a7;\n    position: absolute;\n    top: 80px;\n    left: 40px;\n    z-index: -9999;\n  }\n</style>\n</head>\n\n<body>\n  <div class=\"parent\">\n    parent\n    <div class=\"child1\">child1</div>\n    <div class=\"child2\">\n      child2\n      <div class=\"child2-1\">child2-1</div>\n      <div class=\"child2-2\">child2-2</div>\n    </div>\n  </div>\n</body>\n```\n\n效果：\n![小测试代码页面渲染结果][9]\n\n\n### 参考文章\n\n以上的内容有一部分内容参考了以下两位大神的博客，写的很好，也很清晰，推荐大家看一看，你会对相关知识点掌握的更清晰。\n\n>[张鑫旭-《深入理解CSS中的层叠上下文和层叠顺序》](https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n>[AMInInsist-《CSS 中的z-index属性》](https://blog.csdn.net/weixin_40672882/article/details/81183321)\n\n\n### 推荐文章\n\n**下面的文章链接是我在学习实践过程中看到的一些觉得比较好的文章，有兴趣霍有需要的朋友可以参考参考，希望可以帮你彻底弄清文章中涉及的这些问题。**\n\n>[lijinxieyang-《层叠上下文【stacking context】与层叠顺序【stacking order】》](http://www.w3help.org/zh-cn/kb/013/)\n>[w3help.org - 《KB013: 分层的显示( Layered presentation )》](http://www.w3help.org/zh-cn/kb/013/)\n>[MDN-《The stacking context》](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context)\n>[尚-《css之层叠上下文和层叠顺序》](https://www.cnblogs.com/chenshanyuanzi/p/7700823.html)\n\n\n[1]: /medias/article/coding/z-index/XYZ.png\n[2]: /medias/article/coding/z-index/xiaoguo1.jpg\n[3]: /medias/article/coding/z-index/xiaoguo2.jpg\n[4]: /medias/article/coding/z-index/stacking-order.jpg\n[5]: /medias/article/coding/z-index/xiaoguo3.jpg\n[6]: /medias/article/coding/z-index/xiaoguo4.jpg\n[7]: /medias/article/coding/z-index/xiaoguo5.jpg\n[8]: /medias/article/coding/z-index/xiaoguo6.jpg\n[9]: /medias/article/coding/z-index/test.jpg","slug":"z-index","published":1,"updated":"2018-09-29T12:51:46.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxr0vgy001aogsml0vcqfy2","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>最近，在项目中遇到一个关于CSS中元素<code>z-index</code>属性的问题，具体问题不太好描述，总结起来就是当给元素和父元素色设置<code>position</code>属性和<code>z-index</code>相关属性后，页面上渲染的元素层级结果和我预想的不一样。根据自己之前的理解，也没找到一个合理的解释。我知道，肯定是我对相关属性的细节理解存在问题，所以结合官方文档和在网上各种搜集整理，明白了其中的原因。写下这篇文章，和大家分享有关CSS中<code>层叠上下文</code>、<code>层叠等级</code>、<code>层叠顺序</code>以及<code>z-index</code>相关的一整套技术细节。</p>\n<p>如果存在什么错误或重要遗漏或者有什么疑问，欢迎留言指正、讨论！感谢！</p>\n<a id=\"more\"></a>\n<h3 id=\"一个“片面”的理解\"><a href=\"#一个“片面”的理解\" class=\"headerlink\" title=\"一个“片面”的理解\"></a>一个“片面”的理解</h3><p>以往，由于自己使用<code>z-index</code>的频率不大，所以对这个CSS属性存在比较片面的认识。一直认为<code>z-index</code>就是用来描述定义一个元素在屏幕<code>Z轴</code>上的堆叠顺序。<code>z-index</code>值越大在<code>Z轴</code>上就越靠上，也就是离屏幕观察者越近。最后才发现这个认识存在很大的问题：</p>\n<ol>\n<li>首先，<code>z-index</code>属性值并不是在任何元素上都有效果。它<strong>仅在</strong>定位元素（定义了<code>position</code>属性，且属性值为非<code>static</code>值的元素）上有效果。</li>\n<li>判断元素在<code>Z轴</code>上的堆叠顺序，不仅仅是直接比较两个元素的<code>z-index</code>值的大小，这个堆叠顺序实际由元素的<strong>层叠上下文</strong>、<strong>层叠等级</strong>共同决定。</li>\n</ol>\n<p><img src=\"/medias/article/coding/z-index/XYZ.png\" alt=\"屏幕上的XYZ轴\"></p>\n<p>要想完全理解一个东西，首先要明白它是什么，也就是它的定义。我们先看看上面提到的<code>层叠上下文</code>、<code>层叠等级</code>、<code>层叠顺序</code>都是什么？定义又太过抽象，后面会再用一个具象的比喻来让你彻底明白它们到底是什么，有什么联系。</p>\n<h3 id=\"什么是“层叠上下文”\"><a href=\"#什么是“层叠上下文”\" class=\"headerlink\" title=\"什么是“层叠上下文”\"></a>什么是“层叠上下文”</h3><p>层叠上下文(stacking context)，是<code>HTML</code>中一个三维的概念。在<code>CSS2.1</code>规范中，每个盒模型的位置是三维的，分别是平面画布上的<code>X轴</code>，<code>Y轴</code>以及表示层叠的<code>Z轴</code>。一般情况下，元素在页面上沿<code>X轴Y轴</code>平铺，我们察觉不到它们在<code>Z轴</code>上的层叠关系。而一旦元素发生堆叠，这时就能发现某个元素可能覆盖了另一个元素或者被另一个元素覆盖。</p>\n<p>如果一个元素含有层叠上下文，(也就是说它是层叠上下文元素)，我们可以理解为这个元素在<code>Z轴</code>上就“高人一等”，最终表现就是它离屏幕观察者更近。</p>\n<blockquote>\n<p><strong>具象的比喻</strong>：你可以把层叠上下文元素理解为理解为<strong>该元素当了官</strong>，而其他非层叠上下文元素则可以理解为普通群众。凡是“当了官的元素”就比普通元素等级要高，也就是说元素在<code>Z轴</code>上更靠上，更靠近观察者。</p>\n</blockquote>\n<h3 id=\"什么是“层叠等级”\"><a href=\"#什么是“层叠等级”\" class=\"headerlink\" title=\"什么是“层叠等级”\"></a>什么是“层叠等级”</h3><p>那么，层叠等级指的又是什么？层叠等级(stacking level，叫“层叠级别”/“层叠水平”也行)</p>\n<ul>\n<li>在同一个层叠上下文中，它描述定义的是该层叠上下文中的层叠上下文元素在<code>Z轴</code>上的上下顺序。</li>\n<li>在其他普通元素中，它描述定义的是这些普通元素在<code>Z轴</code>上的上下顺序。</li>\n</ul>\n<p>说到这，可能很多人疑问了，不论在层叠上下文中还是在普通元素中，层叠等级都表示元素在<code>Z轴</code>上的上下顺序，那就直接说它描述定义了所有元素在<code>Z轴</code>上的上下顺序就OK啊！为什么要分开描述？</p>\n<p>为了说明原因，先举个栗子：</p>\n<blockquote>\n<p><strong>具象的比喻</strong>：我们之前说到，处于层叠上下文中的元素，就像是元素当了官，等级自然比普通元素高。再想象一下，假设一个官员A是个省级领导，他下属有一个秘书a-1，家里有一个保姆a-2。另一个官员B是一个县级领导，他下属有一个秘书b-1，家里有一个保姆b-2。a-1和b-1虽然都是秘书，但是你想一个省级领导的秘书和一个县级领导的秘书之间有可比性么？甚至保姆a-2都要比秘书b-1的等级高得多。谁大谁小，谁高谁低一目了然，所以根本没有比较的意义。只有在A下属的a-1、a-2以及B下属的b-1、b-2中相互比较大小高低才有意义。</p>\n</blockquote>\n<p><strong>再类比回“层叠上下文”和“层叠等级”，就得出一个结论：</strong></p>\n<ol>\n<li>普通元素的层叠等级优先由其所在的层叠上下文决定。</li>\n<li>层叠等级的比较只有在当前层叠上下文元素中才有意义。不同层叠上下文中比较层叠等级是没有意义的。</li>\n</ol>\n<h3 id=\"如何产生“层叠上下文”\"><a href=\"#如何产生“层叠上下文”\" class=\"headerlink\" title=\"如何产生“层叠上下文”\"></a>如何产生“层叠上下文”</h3><p>前面说了那么多，知道了“层叠上下文”和“层叠等级”，其中还有一个最关键的问题：到底如何产生层叠上下文呢？如何让一个元素变成层叠上下文元素呢？</p>\n<p>其实，层叠上下文也基本上是有一些特定的CSS属性创建的，一般有3种方法：</p>\n<ol>\n<li><code>HTML</code>中的根元素<code>&lt;html&gt;&lt;/html&gt;</code>本身j就具有层叠上下文，称为“根层叠上下文”。</li>\n<li>普通元素设置<code>position</code>属性为<strong>非</strong><code>static</code>值并设置<code>z-index</code>属性为具体数值，产生层叠上下文。</li>\n<li>CSS3中的新属性也可以产生层叠上下文。</li>\n</ol>\n<p>至此，终于可以上代码了，我们用代码说话，来验证上面的结论：</p>\n<p><strong>栗子1:</strong><br><strong>有两个div，p.a、p.b被包裹在一个div里，p.c被包裹在另一个盒子里，只为.a、.b、.c设置<code>position</code>和<code>z-index</code>属性</strong></p>\n<pre><code>&lt;style&gt;\n  div {  \n    position: relative;  \n    width: 100px;  \n    height: 100px;  \n  }  \n  p {  \n    position: absolute;  \n    font-size: 20px;  \n    width: 100px;  \n    height: 100px;  \n  }  \n  .a {  \n    background-color: blue;  \n    z-index: 1;  \n  }  \n  .b {  \n    background-color: green;  \n    z-index: 2;  \n    top: 20px;  \n    left: 20px;  \n  }  \n  .c {  \n    background-color: red;  \n    z-index: 3;  \n    top: -20px;  \n    left: 40px;  \n  }\n&lt;/style&gt;\n\n&lt;body&gt;  \n  &lt;div&gt;  \n    &lt;p class=&quot;a&quot;&gt;a&lt;/p&gt;  \n    &lt;p class=&quot;b&quot;&gt;b&lt;/p&gt;  \n  &lt;/div&gt; \n\n  &lt;div&gt;  \n    &lt;p class=&quot;c&quot;&gt;c&lt;/p&gt;  \n  &lt;/div&gt;  \n&lt;/body&gt; \n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo1.jpg\" alt=\"效果1\"><br>因为p.a、p.b、p.c三个的父元素div都没有设置<code>z-index</code>，所以不会产生层叠上下文，所以.a、.b、.c都处于由<code>&lt;html&gt;&lt;/html&gt;</code>标签产生的“根层叠上下文”中，属于同一个层叠上下文，此时谁的<code>z-index</code>值大，谁在上面。</p>\n<p><strong>栗子2：</strong><br><strong>有两个div，p.a、p.b被包裹在一个div里，p.c被包裹在另一个盒子里，同时为两个div和.a、.b、.c设置<code>position</code>和<code>z-index</code>属性</strong></p>\n<pre><code>&lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    position: relative;\n  }\n  .box1 {\n    z-index: 2;\n  }\n  .box2 {\n    z-index: 1;\n  }\n  p {\n    position: absolute;\n    font-size: 20px;\n    width: 100px;\n    height: 100px;\n  }\n  .a {\n    background-color: blue;\n    z-index: 100;\n  }\n  .b {\n    background-color: green;\n    top: 20px;\n    left: 20px;\n    z-index: 200;\n  }\n  .c {\n    background-color: red;\n    top: -20px;\n    left: 40px;\n    z-index: 9999;\n  }\n&lt;/style&gt;\n\n&lt;body&gt;\n  &lt;div class=&quot;box1&quot;&gt;\n    &lt;p class=&quot;a&quot;&gt;a&lt;/p&gt;\n    &lt;p class=&quot;b&quot;&gt;b&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;div class=&quot;box2&quot;&gt;\n    &lt;p class=&quot;c&quot;&gt;c&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo2.jpg\" alt=\"效果2\"><br>我们发下，虽然<code>p.c</code>元素的<code>z-index</code>值为9999，远大于<code>p.a</code>和<code>p.b</code>的<code>z-index</code>值，但是由于<code>p.a</code>、<code>p.b</code>的父元素<code>div.box1</code>产生的层叠上下文的<code>z-index</code>的值为2，<code>p.c</code>的父元素<code>div.box2</code>所产生的层叠上下文的<code>z-index</code>值为1，所以<code>p.c</code>永远在<code>p.a</code>和<code>p.b</code>下面。</p>\n<p>同时，如果我们只更改<code>p.a</code>和<code>p.b</code>的<code>z-index</code>值，由于这两个元素都在父元素<code>div.box1</code>产生的层叠上下文中，所以，谁的<code>z-index</code>值大，谁在上面。</p>\n<h3 id=\"什么是“层叠顺序”\"><a href=\"#什么是“层叠顺序”\" class=\"headerlink\" title=\"什么是“层叠顺序”\"></a>什么是“层叠顺序”</h3><p>说完“层叠上下文”和“层叠等级”，我们再来说说“层叠顺序”。“层叠顺序”(stacking order)表示元素发生层叠时按照特定的顺序规则在<code>Z轴</code>上垂直显示。<strong>由此可见，前面所说的“层叠上下文”和“层叠等级”是一种概念，而这里的“层叠顺序”是一种规则。</strong></p>\n<p><img src=\"/medias/article/coding/z-index/stacking-order.jpg\" alt=\"不同属性的元素的层叠顺序\"></p>\n<p>在不考虑CSS3的情况下，当元素发生层叠时，层叠顺讯遵循上面途中的规则。<br><strong>这里值得注意的是：</strong></p>\n<ol>\n<li>左上角”层叠上下文<code>background/border</code>“指的是层叠上下文元素的背景和边框。</li>\n<li><code>inline/inline-block</code>元素的层叠顺序要高于<code>block</code>(块级)/<code>float</code>(浮动)元素。</li>\n<li>单纯考虑层叠顺序，<code>z-index: auto</code>和<code>z-index: 0</code>在同一层级，但这两个属性值本身是有根本区别的。</li>\n</ol>\n<blockquote>\n<p>对于上面第2条，为什么<code>inline/inline-block</code>元素的层叠顺序要高于<code>block</code>(块级)/<code>float</code>(浮动)元素？这个大家可以思考一下！<br>其实很简单，像<code>border/background</code>属于装饰元素的属性，浮动和块级元素一般用来页面布局，而网页设计之初最重要的就是文字内容，所以在发生层叠时会优先显示文字内容，保证其不被覆盖。</p>\n</blockquote>\n<h3 id=\"你要的“套路”\"><a href=\"#你要的“套路”\" class=\"headerlink\" title=\"你要的“套路”\"></a>你要的“套路”</h3><p>上面说了那么多，可能你还是有点懵。这么多概念规则，来点最实际的，有没有一个“套路”当遇到元素层叠时，能很清晰地判断出他们谁在上谁在下呢？答案是——肯定有啊！</p>\n<blockquote>\n<p>1、首先先看要比较的两个元素是否处于同一个层叠上下文中：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.1如果是，谁的层叠等级大，谁在上面（怎么判断层叠等级大小呢？——看“层叠顺序”图）。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.2如果两个元素不在统一层叠上下文中，请先比较他们所处的层叠上下文的层叠等级。<br>2、当两个元素层叠等级相同、层叠顺序相同时，在DOM结构中后面的元素层叠等级在前面元素之上。</p>\n</blockquote>\n<h3 id=\"光说不练假把式\"><a href=\"#光说不练假把式\" class=\"headerlink\" title=\"光说不练假把式\"></a>光说不练假把式</h3><p>对于技术学习，代码展示是最直观最易懂的方式之一。话不多说，直接上代码，我们通过以下几个“栗子”，来进一步验证掌握上面的结论。</p>\n<p><strong>栗子3：</strong></p>\n<pre><code>&lt;style&gt;\n  .box1, .box2 {\n    position: relative;\n    z-index: auto;\n  }\n  .child1 {\n    width: 200px;\n    height: 100px;\n    background: #168bf5;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 2;\n  }\n  .child2 {\n    width: 100px;\n    height: 200px;\n    background: #32c292;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div class=&quot;box1&quot;&gt;\n    &lt;div class=&quot;child1&quot;&gt;&lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;div class=&quot;box2&quot;&gt;\n    &lt;div class=&quot;child2&quot;&gt;&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo3.jpg\" alt=\"效果3\"><br><strong>说明：</strong><code>.box1/.box2</code>虽然设置了<code>position: relative</code>，但是<code>z-index: auto</code>的情况下，这两个<code>div</code>还是普通元素，并没有产生层叠上下文。所以，<code>child1/.child2</code>属于<code>&lt;html&gt;&lt;/html&gt;</code>元素的“根层叠上下文”中，此时，<strong>谁的<code>z-index</code>值大，谁在上面</strong>。</p>\n<p><strong>栗子4：</strong></p>\n<p>对于栗子1中的CSS代码，我们只把<code>.box1/.box2</code>的<code>z-index</code>属性值改为<code>数值0</code>，其余不变。</p>\n<pre><code>.box1, .box2 {\n  position: relative;\n  z-index: 0;\n}\n...\n\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo4.jpg\" alt=\"效果4\"><br><strong>说明：</strong> 此时，我们发现，仅仅修改了<code>.box1/.box2</code>的<code>z-index</code>属性值改为<code>数值0</code>，最终结果完全相反。这时<code>.child2</code>覆盖在了<code>.child1</code>上面。原因是什么呢？很简单：因为设置<code>z-index: 0</code>后，<code>.box1/.box2</code>产生了各自的层叠上下文，这时候要比较<code>.child1/.child2</code>的层叠关系完全由父元素<code>.box1/.box2</code>的层叠关系决定。但是<code>.box1/.box2</code>的<code>z-index</code>值都为<code>0</code>，都是块级元素（所以它们的层叠等级，层叠顺序是相同的），这种情况下，在<code>DOM</code>结构中<strong>后面的覆盖前面的</strong>，所以<code>.child2</code>就在上面。</p>\n<h3 id=\"CSS3中的属性对层叠上下文的影响\"><a href=\"#CSS3中的属性对层叠上下文的影响\" class=\"headerlink\" title=\"CSS3中的属性对层叠上下文的影响\"></a>CSS3中的属性对层叠上下文的影响</h3><p>CSS3中出现了很多新属性，其中一些属性对层叠上下文也产生了很大的影响。如下：</p>\n<ol>\n<li>父元素的display属性值为<code>flex|inline-flex</code>，子元素<code>z-index</code>属性值不为<code>auto</code>的时候，子元素为层叠上下文元素；</li>\n<li>元素的<code>opacity</code>属性值不是<code>1</code>；</li>\n<li>元素的<code>transform</code>属性值不是<code>none</code>；</li>\n<li>元素<code>mix-blend-mode属性值不是</code>normal`；</li>\n<li>元素的<code>filter</code>属性值不是<code>none</code>；</li>\n<li>元素的<code>isolation</code>属性值是<code>isolate</code>；</li>\n<li><code>will-change</code>指定的属性值为上面任意一个；</li>\n<li>元素的<code>-webkit-overflow-scrolling</code>属性值设置为<code>touch</code>。</li>\n</ol>\n<p>CSS3中，元素属性满足以上条件之一，就会产生层叠上下文。我们用第1条来做一个简单的解释说明。</p>\n<p><strong>栗子5：</strong></p>\n<pre><code>&lt;style&gt;\n  .box {\n  }\n  .parent {\n    width: 200px;\n    height: 100px;\n    background: #168bf5;\n    /* 虽然设置了z-index，但是没有设置position，z-index无效，.parent还是普通元素，没有产生层叠上下文 */\n    z-index: 1;\n  }\n  .child {\n    width: 100px;\n    height: 200px;\n    background: #32d19c;\n    position: relative;\n    z-index: -1;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div class=&quot;box&quot;&gt;\n    &lt;div class=&quot;parent&quot;&gt;\n      parent\n      &lt;div class=&quot;child&quot;&gt;child&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo5.jpg\" alt=\"效果5\"><br><strong>说明：</strong> 我们发现，<code>.child</code>被<code>.parent</code>覆盖了。按照“套路”来分析一下：<br>虽然<code>.parent</code>设置了<code>z-index</code>属性值，但是没有设置<code>position</code>属性，<code>z-index</code>无效，所以没有产生层叠上下文，<code>.parent</code>还是普通的块级元素。此时，在层叠顺序规则中，<code>z-index</code>值小于<code>0</code>的<code>.child</code>会被普通的<code>block</code>块级元素<code>.parent</code>覆盖。</p>\n<p><strong>栗子6</strong></p>\n<p>对于上面的栗子，我们只修改.box的属性，设置display: flex，其余属性和DOM结构不变。</p>\n<pre><code>.box {\n  display: flex;\n}\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo6.jpg\" alt=\"效果6\"><br><strong>说明：</strong> 当给<code>.box</code>设置<code>display: flex</code>时，<code>.parent</code>就变成层叠上下文元素，根据层叠顺序规则，层叠上下文元素的<code>background/border</code>的层叠等级小于<code>z-index</code>值小于<code>0</code>的元素的层叠等级，所以<code>z-index</code>值为<code>-1</code>的<code>.child</code>在<code>.parent</code>上面。</p>\n<h3 id=\"小测试\"><a href=\"#小测试\" class=\"headerlink\" title=\"小测试\"></a>小测试</h3><p>下面的代码，我会把最终页面渲染的结果放在代码之后，有兴趣的“童鞋”可以分析一下，各个元素的层叠等级，最后来确定这些元素哪个在上哪个在下。</p>\n<pre><code>&lt;style&gt;\n  .parent {\n    width: 100px;\n    height: 200px;\n    background: #168bf5;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 0;\n  }\n  .child1 {\n    width: 100px;\n    height: 200px;\n    background: #32d19c;\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    z-index: 1;\n  }\n  .child2 {\n    width: 100px;\n    height: 200px;\n    background: #e4c950;\n    position: absolute;\n    top: 40px;\n    left: 40px;\n    z-index: -1;\n  }\n  .child2-1 {\n    width: 100px;\n    height: 200px;\n    background: #e45050;\n    position: absolute;\n    top: 60px;\n    left: 60px;\n    z-index: 9999;\n  }\n  .child2-2 {\n    width: 100px;\n    height: 200px;\n    background: #db68a7;\n    position: absolute;\n    top: 80px;\n    left: 40px;\n    z-index: -9999;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div class=&quot;parent&quot;&gt;\n    parent\n    &lt;div class=&quot;child1&quot;&gt;child1&lt;/div&gt;\n    &lt;div class=&quot;child2&quot;&gt;\n      child2\n      &lt;div class=&quot;child2-1&quot;&gt;child2-1&lt;/div&gt;\n      &lt;div class=&quot;child2-2&quot;&gt;child2-2&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/test.jpg\" alt=\"小测试代码页面渲染结果\"></p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><p>以上的内容有一部分内容参考了以下两位大神的博客，写的很好，也很清晰，推荐大家看一看，你会对相关知识点掌握的更清晰。</p>\n<blockquote>\n<p><a href=\"https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">张鑫旭-《深入理解CSS中的层叠上下文和层叠顺序》</a><br><a href=\"https://blog.csdn.net/weixin_40672882/article/details/81183321\" target=\"_blank\" rel=\"noopener\">AMInInsist-《CSS 中的z-index属性》</a></p>\n</blockquote>\n<h3 id=\"推荐文章\"><a href=\"#推荐文章\" class=\"headerlink\" title=\"推荐文章\"></a>推荐文章</h3><p><strong>下面的文章链接是我在学习实践过程中看到的一些觉得比较好的文章，有兴趣霍有需要的朋友可以参考参考，希望可以帮你彻底弄清文章中涉及的这些问题。</strong></p>\n<blockquote>\n<p><a href=\"http://www.w3help.org/zh-cn/kb/013/\" target=\"_blank\" rel=\"noopener\">lijinxieyang-《层叠上下文【stacking context】与层叠顺序【stacking order】》</a><br><a href=\"http://www.w3help.org/zh-cn/kb/013/\" target=\"_blank\" rel=\"noopener\">w3help.org - 《KB013: 分层的显示( Layered presentation )》</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\" target=\"_blank\" rel=\"noopener\">MDN-《The stacking context》</a><br><a href=\"https://www.cnblogs.com/chenshanyuanzi/p/7700823.html\" target=\"_blank\" rel=\"noopener\">尚-《css之层叠上下文和层叠顺序》</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>最近，在项目中遇到一个关于CSS中元素<code>z-index</code>属性的问题，具体问题不太好描述，总结起来就是当给元素和父元素色设置<code>position</code>属性和<code>z-index</code>相关属性后，页面上渲染的元素层级结果和我预想的不一样。根据自己之前的理解，也没找到一个合理的解释。我知道，肯定是我对相关属性的细节理解存在问题，所以结合官方文档和在网上各种搜集整理，明白了其中的原因。写下这篇文章，和大家分享有关CSS中<code>层叠上下文</code>、<code>层叠等级</code>、<code>层叠顺序</code>以及<code>z-index</code>相关的一整套技术细节。</p>\n<p>如果存在什么错误或重要遗漏或者有什么疑问，欢迎留言指正、讨论！感谢！</p>","more":"<h3 id=\"一个“片面”的理解\"><a href=\"#一个“片面”的理解\" class=\"headerlink\" title=\"一个“片面”的理解\"></a>一个“片面”的理解</h3><p>以往，由于自己使用<code>z-index</code>的频率不大，所以对这个CSS属性存在比较片面的认识。一直认为<code>z-index</code>就是用来描述定义一个元素在屏幕<code>Z轴</code>上的堆叠顺序。<code>z-index</code>值越大在<code>Z轴</code>上就越靠上，也就是离屏幕观察者越近。最后才发现这个认识存在很大的问题：</p>\n<ol>\n<li>首先，<code>z-index</code>属性值并不是在任何元素上都有效果。它<strong>仅在</strong>定位元素（定义了<code>position</code>属性，且属性值为非<code>static</code>值的元素）上有效果。</li>\n<li>判断元素在<code>Z轴</code>上的堆叠顺序，不仅仅是直接比较两个元素的<code>z-index</code>值的大小，这个堆叠顺序实际由元素的<strong>层叠上下文</strong>、<strong>层叠等级</strong>共同决定。</li>\n</ol>\n<p><img src=\"/medias/article/coding/z-index/XYZ.png\" alt=\"屏幕上的XYZ轴\"></p>\n<p>要想完全理解一个东西，首先要明白它是什么，也就是它的定义。我们先看看上面提到的<code>层叠上下文</code>、<code>层叠等级</code>、<code>层叠顺序</code>都是什么？定义又太过抽象，后面会再用一个具象的比喻来让你彻底明白它们到底是什么，有什么联系。</p>\n<h3 id=\"什么是“层叠上下文”\"><a href=\"#什么是“层叠上下文”\" class=\"headerlink\" title=\"什么是“层叠上下文”\"></a>什么是“层叠上下文”</h3><p>层叠上下文(stacking context)，是<code>HTML</code>中一个三维的概念。在<code>CSS2.1</code>规范中，每个盒模型的位置是三维的，分别是平面画布上的<code>X轴</code>，<code>Y轴</code>以及表示层叠的<code>Z轴</code>。一般情况下，元素在页面上沿<code>X轴Y轴</code>平铺，我们察觉不到它们在<code>Z轴</code>上的层叠关系。而一旦元素发生堆叠，这时就能发现某个元素可能覆盖了另一个元素或者被另一个元素覆盖。</p>\n<p>如果一个元素含有层叠上下文，(也就是说它是层叠上下文元素)，我们可以理解为这个元素在<code>Z轴</code>上就“高人一等”，最终表现就是它离屏幕观察者更近。</p>\n<blockquote>\n<p><strong>具象的比喻</strong>：你可以把层叠上下文元素理解为理解为<strong>该元素当了官</strong>，而其他非层叠上下文元素则可以理解为普通群众。凡是“当了官的元素”就比普通元素等级要高，也就是说元素在<code>Z轴</code>上更靠上，更靠近观察者。</p>\n</blockquote>\n<h3 id=\"什么是“层叠等级”\"><a href=\"#什么是“层叠等级”\" class=\"headerlink\" title=\"什么是“层叠等级”\"></a>什么是“层叠等级”</h3><p>那么，层叠等级指的又是什么？层叠等级(stacking level，叫“层叠级别”/“层叠水平”也行)</p>\n<ul>\n<li>在同一个层叠上下文中，它描述定义的是该层叠上下文中的层叠上下文元素在<code>Z轴</code>上的上下顺序。</li>\n<li>在其他普通元素中，它描述定义的是这些普通元素在<code>Z轴</code>上的上下顺序。</li>\n</ul>\n<p>说到这，可能很多人疑问了，不论在层叠上下文中还是在普通元素中，层叠等级都表示元素在<code>Z轴</code>上的上下顺序，那就直接说它描述定义了所有元素在<code>Z轴</code>上的上下顺序就OK啊！为什么要分开描述？</p>\n<p>为了说明原因，先举个栗子：</p>\n<blockquote>\n<p><strong>具象的比喻</strong>：我们之前说到，处于层叠上下文中的元素，就像是元素当了官，等级自然比普通元素高。再想象一下，假设一个官员A是个省级领导，他下属有一个秘书a-1，家里有一个保姆a-2。另一个官员B是一个县级领导，他下属有一个秘书b-1，家里有一个保姆b-2。a-1和b-1虽然都是秘书，但是你想一个省级领导的秘书和一个县级领导的秘书之间有可比性么？甚至保姆a-2都要比秘书b-1的等级高得多。谁大谁小，谁高谁低一目了然，所以根本没有比较的意义。只有在A下属的a-1、a-2以及B下属的b-1、b-2中相互比较大小高低才有意义。</p>\n</blockquote>\n<p><strong>再类比回“层叠上下文”和“层叠等级”，就得出一个结论：</strong></p>\n<ol>\n<li>普通元素的层叠等级优先由其所在的层叠上下文决定。</li>\n<li>层叠等级的比较只有在当前层叠上下文元素中才有意义。不同层叠上下文中比较层叠等级是没有意义的。</li>\n</ol>\n<h3 id=\"如何产生“层叠上下文”\"><a href=\"#如何产生“层叠上下文”\" class=\"headerlink\" title=\"如何产生“层叠上下文”\"></a>如何产生“层叠上下文”</h3><p>前面说了那么多，知道了“层叠上下文”和“层叠等级”，其中还有一个最关键的问题：到底如何产生层叠上下文呢？如何让一个元素变成层叠上下文元素呢？</p>\n<p>其实，层叠上下文也基本上是有一些特定的CSS属性创建的，一般有3种方法：</p>\n<ol>\n<li><code>HTML</code>中的根元素<code>&lt;html&gt;&lt;/html&gt;</code>本身j就具有层叠上下文，称为“根层叠上下文”。</li>\n<li>普通元素设置<code>position</code>属性为<strong>非</strong><code>static</code>值并设置<code>z-index</code>属性为具体数值，产生层叠上下文。</li>\n<li>CSS3中的新属性也可以产生层叠上下文。</li>\n</ol>\n<p>至此，终于可以上代码了，我们用代码说话，来验证上面的结论：</p>\n<p><strong>栗子1:</strong><br><strong>有两个div，p.a、p.b被包裹在一个div里，p.c被包裹在另一个盒子里，只为.a、.b、.c设置<code>position</code>和<code>z-index</code>属性</strong></p>\n<pre><code>&lt;style&gt;\n  div {  \n    position: relative;  \n    width: 100px;  \n    height: 100px;  \n  }  \n  p {  \n    position: absolute;  \n    font-size: 20px;  \n    width: 100px;  \n    height: 100px;  \n  }  \n  .a {  \n    background-color: blue;  \n    z-index: 1;  \n  }  \n  .b {  \n    background-color: green;  \n    z-index: 2;  \n    top: 20px;  \n    left: 20px;  \n  }  \n  .c {  \n    background-color: red;  \n    z-index: 3;  \n    top: -20px;  \n    left: 40px;  \n  }\n&lt;/style&gt;\n\n&lt;body&gt;  \n  &lt;div&gt;  \n    &lt;p class=&quot;a&quot;&gt;a&lt;/p&gt;  \n    &lt;p class=&quot;b&quot;&gt;b&lt;/p&gt;  \n  &lt;/div&gt; \n\n  &lt;div&gt;  \n    &lt;p class=&quot;c&quot;&gt;c&lt;/p&gt;  \n  &lt;/div&gt;  \n&lt;/body&gt; \n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo1.jpg\" alt=\"效果1\"><br>因为p.a、p.b、p.c三个的父元素div都没有设置<code>z-index</code>，所以不会产生层叠上下文，所以.a、.b、.c都处于由<code>&lt;html&gt;&lt;/html&gt;</code>标签产生的“根层叠上下文”中，属于同一个层叠上下文，此时谁的<code>z-index</code>值大，谁在上面。</p>\n<p><strong>栗子2：</strong><br><strong>有两个div，p.a、p.b被包裹在一个div里，p.c被包裹在另一个盒子里，同时为两个div和.a、.b、.c设置<code>position</code>和<code>z-index</code>属性</strong></p>\n<pre><code>&lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    position: relative;\n  }\n  .box1 {\n    z-index: 2;\n  }\n  .box2 {\n    z-index: 1;\n  }\n  p {\n    position: absolute;\n    font-size: 20px;\n    width: 100px;\n    height: 100px;\n  }\n  .a {\n    background-color: blue;\n    z-index: 100;\n  }\n  .b {\n    background-color: green;\n    top: 20px;\n    left: 20px;\n    z-index: 200;\n  }\n  .c {\n    background-color: red;\n    top: -20px;\n    left: 40px;\n    z-index: 9999;\n  }\n&lt;/style&gt;\n\n&lt;body&gt;\n  &lt;div class=&quot;box1&quot;&gt;\n    &lt;p class=&quot;a&quot;&gt;a&lt;/p&gt;\n    &lt;p class=&quot;b&quot;&gt;b&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;div class=&quot;box2&quot;&gt;\n    &lt;p class=&quot;c&quot;&gt;c&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo2.jpg\" alt=\"效果2\"><br>我们发下，虽然<code>p.c</code>元素的<code>z-index</code>值为9999，远大于<code>p.a</code>和<code>p.b</code>的<code>z-index</code>值，但是由于<code>p.a</code>、<code>p.b</code>的父元素<code>div.box1</code>产生的层叠上下文的<code>z-index</code>的值为2，<code>p.c</code>的父元素<code>div.box2</code>所产生的层叠上下文的<code>z-index</code>值为1，所以<code>p.c</code>永远在<code>p.a</code>和<code>p.b</code>下面。</p>\n<p>同时，如果我们只更改<code>p.a</code>和<code>p.b</code>的<code>z-index</code>值，由于这两个元素都在父元素<code>div.box1</code>产生的层叠上下文中，所以，谁的<code>z-index</code>值大，谁在上面。</p>\n<h3 id=\"什么是“层叠顺序”\"><a href=\"#什么是“层叠顺序”\" class=\"headerlink\" title=\"什么是“层叠顺序”\"></a>什么是“层叠顺序”</h3><p>说完“层叠上下文”和“层叠等级”，我们再来说说“层叠顺序”。“层叠顺序”(stacking order)表示元素发生层叠时按照特定的顺序规则在<code>Z轴</code>上垂直显示。<strong>由此可见，前面所说的“层叠上下文”和“层叠等级”是一种概念，而这里的“层叠顺序”是一种规则。</strong></p>\n<p><img src=\"/medias/article/coding/z-index/stacking-order.jpg\" alt=\"不同属性的元素的层叠顺序\"></p>\n<p>在不考虑CSS3的情况下，当元素发生层叠时，层叠顺讯遵循上面途中的规则。<br><strong>这里值得注意的是：</strong></p>\n<ol>\n<li>左上角”层叠上下文<code>background/border</code>“指的是层叠上下文元素的背景和边框。</li>\n<li><code>inline/inline-block</code>元素的层叠顺序要高于<code>block</code>(块级)/<code>float</code>(浮动)元素。</li>\n<li>单纯考虑层叠顺序，<code>z-index: auto</code>和<code>z-index: 0</code>在同一层级，但这两个属性值本身是有根本区别的。</li>\n</ol>\n<blockquote>\n<p>对于上面第2条，为什么<code>inline/inline-block</code>元素的层叠顺序要高于<code>block</code>(块级)/<code>float</code>(浮动)元素？这个大家可以思考一下！<br>其实很简单，像<code>border/background</code>属于装饰元素的属性，浮动和块级元素一般用来页面布局，而网页设计之初最重要的就是文字内容，所以在发生层叠时会优先显示文字内容，保证其不被覆盖。</p>\n</blockquote>\n<h3 id=\"你要的“套路”\"><a href=\"#你要的“套路”\" class=\"headerlink\" title=\"你要的“套路”\"></a>你要的“套路”</h3><p>上面说了那么多，可能你还是有点懵。这么多概念规则，来点最实际的，有没有一个“套路”当遇到元素层叠时，能很清晰地判断出他们谁在上谁在下呢？答案是——肯定有啊！</p>\n<blockquote>\n<p>1、首先先看要比较的两个元素是否处于同一个层叠上下文中：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.1如果是，谁的层叠等级大，谁在上面（怎么判断层叠等级大小呢？——看“层叠顺序”图）。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.2如果两个元素不在统一层叠上下文中，请先比较他们所处的层叠上下文的层叠等级。<br>2、当两个元素层叠等级相同、层叠顺序相同时，在DOM结构中后面的元素层叠等级在前面元素之上。</p>\n</blockquote>\n<h3 id=\"光说不练假把式\"><a href=\"#光说不练假把式\" class=\"headerlink\" title=\"光说不练假把式\"></a>光说不练假把式</h3><p>对于技术学习，代码展示是最直观最易懂的方式之一。话不多说，直接上代码，我们通过以下几个“栗子”，来进一步验证掌握上面的结论。</p>\n<p><strong>栗子3：</strong></p>\n<pre><code>&lt;style&gt;\n  .box1, .box2 {\n    position: relative;\n    z-index: auto;\n  }\n  .child1 {\n    width: 200px;\n    height: 100px;\n    background: #168bf5;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 2;\n  }\n  .child2 {\n    width: 100px;\n    height: 200px;\n    background: #32c292;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div class=&quot;box1&quot;&gt;\n    &lt;div class=&quot;child1&quot;&gt;&lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;div class=&quot;box2&quot;&gt;\n    &lt;div class=&quot;child2&quot;&gt;&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo3.jpg\" alt=\"效果3\"><br><strong>说明：</strong><code>.box1/.box2</code>虽然设置了<code>position: relative</code>，但是<code>z-index: auto</code>的情况下，这两个<code>div</code>还是普通元素，并没有产生层叠上下文。所以，<code>child1/.child2</code>属于<code>&lt;html&gt;&lt;/html&gt;</code>元素的“根层叠上下文”中，此时，<strong>谁的<code>z-index</code>值大，谁在上面</strong>。</p>\n<p><strong>栗子4：</strong></p>\n<p>对于栗子1中的CSS代码，我们只把<code>.box1/.box2</code>的<code>z-index</code>属性值改为<code>数值0</code>，其余不变。</p>\n<pre><code>.box1, .box2 {\n  position: relative;\n  z-index: 0;\n}\n...\n\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo4.jpg\" alt=\"效果4\"><br><strong>说明：</strong> 此时，我们发现，仅仅修改了<code>.box1/.box2</code>的<code>z-index</code>属性值改为<code>数值0</code>，最终结果完全相反。这时<code>.child2</code>覆盖在了<code>.child1</code>上面。原因是什么呢？很简单：因为设置<code>z-index: 0</code>后，<code>.box1/.box2</code>产生了各自的层叠上下文，这时候要比较<code>.child1/.child2</code>的层叠关系完全由父元素<code>.box1/.box2</code>的层叠关系决定。但是<code>.box1/.box2</code>的<code>z-index</code>值都为<code>0</code>，都是块级元素（所以它们的层叠等级，层叠顺序是相同的），这种情况下，在<code>DOM</code>结构中<strong>后面的覆盖前面的</strong>，所以<code>.child2</code>就在上面。</p>\n<h3 id=\"CSS3中的属性对层叠上下文的影响\"><a href=\"#CSS3中的属性对层叠上下文的影响\" class=\"headerlink\" title=\"CSS3中的属性对层叠上下文的影响\"></a>CSS3中的属性对层叠上下文的影响</h3><p>CSS3中出现了很多新属性，其中一些属性对层叠上下文也产生了很大的影响。如下：</p>\n<ol>\n<li>父元素的display属性值为<code>flex|inline-flex</code>，子元素<code>z-index</code>属性值不为<code>auto</code>的时候，子元素为层叠上下文元素；</li>\n<li>元素的<code>opacity</code>属性值不是<code>1</code>；</li>\n<li>元素的<code>transform</code>属性值不是<code>none</code>；</li>\n<li>元素<code>mix-blend-mode属性值不是</code>normal`；</li>\n<li>元素的<code>filter</code>属性值不是<code>none</code>；</li>\n<li>元素的<code>isolation</code>属性值是<code>isolate</code>；</li>\n<li><code>will-change</code>指定的属性值为上面任意一个；</li>\n<li>元素的<code>-webkit-overflow-scrolling</code>属性值设置为<code>touch</code>。</li>\n</ol>\n<p>CSS3中，元素属性满足以上条件之一，就会产生层叠上下文。我们用第1条来做一个简单的解释说明。</p>\n<p><strong>栗子5：</strong></p>\n<pre><code>&lt;style&gt;\n  .box {\n  }\n  .parent {\n    width: 200px;\n    height: 100px;\n    background: #168bf5;\n    /* 虽然设置了z-index，但是没有设置position，z-index无效，.parent还是普通元素，没有产生层叠上下文 */\n    z-index: 1;\n  }\n  .child {\n    width: 100px;\n    height: 200px;\n    background: #32d19c;\n    position: relative;\n    z-index: -1;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div class=&quot;box&quot;&gt;\n    &lt;div class=&quot;parent&quot;&gt;\n      parent\n      &lt;div class=&quot;child&quot;&gt;child&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo5.jpg\" alt=\"效果5\"><br><strong>说明：</strong> 我们发现，<code>.child</code>被<code>.parent</code>覆盖了。按照“套路”来分析一下：<br>虽然<code>.parent</code>设置了<code>z-index</code>属性值，但是没有设置<code>position</code>属性，<code>z-index</code>无效，所以没有产生层叠上下文，<code>.parent</code>还是普通的块级元素。此时，在层叠顺序规则中，<code>z-index</code>值小于<code>0</code>的<code>.child</code>会被普通的<code>block</code>块级元素<code>.parent</code>覆盖。</p>\n<p><strong>栗子6</strong></p>\n<p>对于上面的栗子，我们只修改.box的属性，设置display: flex，其余属性和DOM结构不变。</p>\n<pre><code>.box {\n  display: flex;\n}\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/xiaoguo6.jpg\" alt=\"效果6\"><br><strong>说明：</strong> 当给<code>.box</code>设置<code>display: flex</code>时，<code>.parent</code>就变成层叠上下文元素，根据层叠顺序规则，层叠上下文元素的<code>background/border</code>的层叠等级小于<code>z-index</code>值小于<code>0</code>的元素的层叠等级，所以<code>z-index</code>值为<code>-1</code>的<code>.child</code>在<code>.parent</code>上面。</p>\n<h3 id=\"小测试\"><a href=\"#小测试\" class=\"headerlink\" title=\"小测试\"></a>小测试</h3><p>下面的代码，我会把最终页面渲染的结果放在代码之后，有兴趣的“童鞋”可以分析一下，各个元素的层叠等级，最后来确定这些元素哪个在上哪个在下。</p>\n<pre><code>&lt;style&gt;\n  .parent {\n    width: 100px;\n    height: 200px;\n    background: #168bf5;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 0;\n  }\n  .child1 {\n    width: 100px;\n    height: 200px;\n    background: #32d19c;\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    z-index: 1;\n  }\n  .child2 {\n    width: 100px;\n    height: 200px;\n    background: #e4c950;\n    position: absolute;\n    top: 40px;\n    left: 40px;\n    z-index: -1;\n  }\n  .child2-1 {\n    width: 100px;\n    height: 200px;\n    background: #e45050;\n    position: absolute;\n    top: 60px;\n    left: 60px;\n    z-index: 9999;\n  }\n  .child2-2 {\n    width: 100px;\n    height: 200px;\n    background: #db68a7;\n    position: absolute;\n    top: 80px;\n    left: 40px;\n    z-index: -9999;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div class=&quot;parent&quot;&gt;\n    parent\n    &lt;div class=&quot;child1&quot;&gt;child1&lt;/div&gt;\n    &lt;div class=&quot;child2&quot;&gt;\n      child2\n      &lt;div class=&quot;child2-1&quot;&gt;child2-1&lt;/div&gt;\n      &lt;div class=&quot;child2-2&quot;&gt;child2-2&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>效果：<br><img src=\"/medias/article/coding/z-index/test.jpg\" alt=\"小测试代码页面渲染结果\"></p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><p>以上的内容有一部分内容参考了以下两位大神的博客，写的很好，也很清晰，推荐大家看一看，你会对相关知识点掌握的更清晰。</p>\n<blockquote>\n<p><a href=\"https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">张鑫旭-《深入理解CSS中的层叠上下文和层叠顺序》</a><br><a href=\"https://blog.csdn.net/weixin_40672882/article/details/81183321\" target=\"_blank\" rel=\"noopener\">AMInInsist-《CSS 中的z-index属性》</a></p>\n</blockquote>\n<h3 id=\"推荐文章\"><a href=\"#推荐文章\" class=\"headerlink\" title=\"推荐文章\"></a>推荐文章</h3><p><strong>下面的文章链接是我在学习实践过程中看到的一些觉得比较好的文章，有兴趣霍有需要的朋友可以参考参考，希望可以帮你彻底弄清文章中涉及的这些问题。</strong></p>\n<blockquote>\n<p><a href=\"http://www.w3help.org/zh-cn/kb/013/\" target=\"_blank\" rel=\"noopener\">lijinxieyang-《层叠上下文【stacking context】与层叠顺序【stacking order】》</a><br><a href=\"http://www.w3help.org/zh-cn/kb/013/\" target=\"_blank\" rel=\"noopener\">w3help.org - 《KB013: 分层的显示( Layered presentation )》</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\" target=\"_blank\" rel=\"noopener\">MDN-《The stacking context》</a><br><a href=\"https://www.cnblogs.com/chenshanyuanzi/p/7700823.html\" target=\"_blank\" rel=\"noopener\">尚-《css之层叠上下文和层叠顺序》</a></p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjoxr0vfn0002ogsmp78al7dv","category_id":"cjoxr0vg30008ogsm93sdgnrv","_id":"cjoxr0vg3000hogsm6wz196kn"},{"post_id":"cjoxr0vfn0005ogsm9rcyai08","category_id":"cjoxr0vg3000dogsm9w0lygk1","_id":"cjoxr0vg3000mogsmoykbjuxr"},{"post_id":"cjoxr0vfn0006ogsmq946bdf9","category_id":"cjoxr0vg3000dogsm9w0lygk1","_id":"cjoxr0vg3000pogsmnqsf6lqv"},{"post_id":"cjoxr0vf80001ogsmtoc532ro","category_id":"cjoxr0vfn0003ogsmgajwe2nb","_id":"cjoxr0vg3000uogsmp0v7ieta"},{"post_id":"cjoxr0vf80001ogsmtoc532ro","category_id":"cjoxr0vg3000logsmg1vb4lzr","_id":"cjoxr0vg3000wogsmhaetirjg"},{"post_id":"cjoxr0vg30007ogsmi75bsa2j","category_id":"cjoxr0vg3000dogsm9w0lygk1","_id":"cjoxr0vg3000yogsmkg4goqh6"},{"post_id":"cjoxr0vg3000bogsm7bzongtv","category_id":"cjoxr0vg3000togsm20d1wand","_id":"cjoxr0vg30013ogsmqcwq25s2"},{"post_id":"cjoxr0vg3000cogsm2mh79guu","category_id":"cjoxr0vg3000togsm20d1wand","_id":"cjoxr0vgi0015ogsmachar4yi"},{"post_id":"cjoxr0vg3000fogsm383jholr","category_id":"cjoxr0vfn0003ogsmgajwe2nb","_id":"cjoxr0vgi0016ogsmsglsaoh3"},{"post_id":"cjoxr0vg3000fogsm383jholr","category_id":"cjoxr0vg3000logsmg1vb4lzr","_id":"cjoxr0vgi0017ogsmzdrfja5a"},{"post_id":"cjoxr0vgy0018ogsmgskcuobj","category_id":"cjoxr0vg3000dogsm9w0lygk1","_id":"cjoxr0vgy001fogsmhm5x2v10"},{"post_id":"cjoxr0vgy001aogsml0vcqfy2","category_id":"cjoxr0vfn0003ogsmgajwe2nb","_id":"cjoxr0vhe001iogsm61cpkcsc"},{"post_id":"cjoxr0vgy001aogsml0vcqfy2","category_id":"cjoxr0vg3000logsmg1vb4lzr","_id":"cjoxr0vhe001logsmozvv0n4v"}],"PostTag":[{"post_id":"cjoxr0vf80001ogsmtoc532ro","tag_id":"cjoxr0vfn0004ogsm0sonv3s3","_id":"cjoxr0vg3000aogsm1scobrkm"},{"post_id":"cjoxr0vfn0002ogsmp78al7dv","tag_id":"cjoxr0vg30009ogsmoauzbnfy","_id":"cjoxr0vg3000gogsmrbgo1txx"},{"post_id":"cjoxr0vfn0005ogsm9rcyai08","tag_id":"cjoxr0vg3000eogsm45hs2w94","_id":"cjoxr0vg3000kogsmuv1jd4db"},{"post_id":"cjoxr0vfn0006ogsmq946bdf9","tag_id":"cjoxr0vg3000jogsmcjqzqysg","_id":"cjoxr0vg3000oogsmy3pjbo0z"},{"post_id":"cjoxr0vg30007ogsmi75bsa2j","tag_id":"cjoxr0vg3000eogsm45hs2w94","_id":"cjoxr0vg3000sogsm7foicxna"},{"post_id":"cjoxr0vg3000bogsm7bzongtv","tag_id":"cjoxr0vg3000rogsmfn49evjw","_id":"cjoxr0vg3000xogsm0oqbs8t2"},{"post_id":"cjoxr0vg3000cogsm2mh79guu","tag_id":"cjoxr0vg3000jogsmcjqzqysg","_id":"cjoxr0vg30011ogsm0l8iquxg"},{"post_id":"cjoxr0vg3000fogsm383jholr","tag_id":"cjoxr0vg30010ogsmtn3f7j46","_id":"cjoxr0vgi0014ogsmx9be9yue"},{"post_id":"cjoxr0vgy0018ogsmgskcuobj","tag_id":"cjoxr0vg3000rogsmfn49evjw","_id":"cjoxr0vgy001cogsmv2c36380"},{"post_id":"cjoxr0vgy001aogsml0vcqfy2","tag_id":"cjoxr0vgy001eogsmv05odnw3","_id":"cjoxr0vhe001nogsmrxdoagkv"},{"post_id":"cjoxr0vgy001aogsml0vcqfy2","tag_id":"cjoxr0vhe001jogsmpsymvd0u","_id":"cjoxr0vhe001oogsmofo2o3gw"}],"Tag":[{"name":"Create.JS","_id":"cjoxr0vfn0004ogsm0sonv3s3"},{"name":"风景(影集)","_id":"cjoxr0vg30009ogsmoauzbnfy"},{"name":"生活工作","_id":"cjoxr0vg3000eogsm45hs2w94"},{"name":"阅读感悟","_id":"cjoxr0vg3000jogsmcjqzqysg"},{"name":"朝花夕拾","_id":"cjoxr0vg3000rogsmfn49evjw"},{"name":"Node.JS","_id":"cjoxr0vg30010ogsmtn3f7j46"},{"name":"CSS","_id":"cjoxr0vgy001eogsmv05odnw3"},{"name":"z-index","_id":"cjoxr0vhe001jogsmpsymvd0u"}]}}